<languages />

[[Category:Software]][[Category:ComputationalChemistry]]
==Introduction==
AMS (Amsterdam Modeling Suite), est la nouvelle appellation de [[ADF/fr|ADF]] (Amsterdam Density Functional) et fait partie de la suite [https://www.scm.com/ SCM Software for Chemistry and Materials]. AMS offre des outils très performants pour la recherche en chimie computationnelle, notamment dans les domaines de la catalyse (homogène et hétérogène), la chimie inorganique, la chimie des éléments lourds, la biochimie et différents types de spectroscopie.

Tous les produits du module SCM sont disponibles&nbsp;:
*ADF
*ADF-GUI
*BAND
*BAND-GUI
*DFTB
*ReaxFF
*COSMO-RS
*QE-GUI
*NBO6

<div class="mw-translate-fuzzy">
==Utiliser AMS sur Graham==
Le module <code>ams</code> est seulement installé sur [[Graham/fr|Graham]] en raison de restrictions liées à l'octroi des licences. SHARCNET est propriétaire de cette licence qui est réservée aux centres de calcul universitaires; cette licence ne peut être utilisée pour des services de consultation ou pour tout autre usage de nature commerciale. Pour connaître les versions disponibles, lancez la commande
</div>

 [name@server $] module spider ams

Pour les commandes en rapport avec les modules, voyez [[Utiliser des modules|Utiliser des modules]].

<span id="Job_submission"></span>
===Soumettre une tâche===

<div class="mw-translate-fuzzy">
Les tâches soumises sur Graham sont ordonnancées par Slurm; pour les détails, consultez [[Running jobs/fr|Exécuter des tâches]].
</div>

<div class="mw-translate-fuzzy">
====Exemples de scripts pour une tâche adf ====
Le script H2O_adf.sh utilise un nœud entier.
</div>
{{File
  |name=H2O_adf.sh
  |lang="bash"
  |contents=
#!/bin/bash
#SBATCH --account=def-pi
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32          # 32 cpus on 1 node, MPI job
#SBATCH --mem-per-cpu=3G              # memory per cpu
#SBATCH --time=00-01:00               # time (DD-HH:MM)
#SBATCH --output=H2O_adf-%j.log       # output .log file

module unload openmpi
module load ams/2025.102
export SCM_TMPDIR=$SLURM_TMPDIR      # use the local disk
bash H2O_adf.run                    # run the input script
}}

Le fichier en entrée ci-dessous est utilisé dans le script.
{{File
  |name=H2O_adf.run
  |lang="text"
  |contents=#!/bin/sh
# This is a shell script for AMS
# You should use '$AMSBIN/ams' instead of '$ADFBIN/adf'

AMS_JOBNAME=H2O_adf $AMSBIN/ams <<eor
   # Input options for the AMS driver:
   System
      Atoms
         O             0.000000     0.000000     0.000000
         H             0.000000    -0.689440    -0.578509
         H             0.000000     0.689440    -0.578509
      End
   End
   Task GeometryOptimization
   GeometryOptimization
      Convergence gradients=1e-4
   End

   # The input options for ADF, which are described in this manual,
   # should be specified in the 'Engine ADF' block:

   Engine ADF
      Basis
         Type TZP
      End
      XC
         GGA PBE
      End
   EndEngine
eor
}}

<span id="Example_scripts_for_a_band_job"></span>
====Exemples de scripts pour une tâche band ====

{{File
  |name=SnO_EFG_band.run
  |lang="bash"
  |contents=#!/bin/sh
# The calculation of the electric field gradient is invoked by the EFG key block
# Since Sn is quite an heavy atom we use the scalar relativistic option.

$AMSBIN/ams <<eor

Task SinglePoint
System
   FractionalCoords True

   Lattice
      3.8029  0.0  0.0
      0.0  3.8029  0.0
      0.0  0.0  4.8382
   End

   Atoms
      O   0.0  0.0  0.0
      O   0.5  0.5  0.0
      Sn  0.0  0.5  0.2369
      Sn  0.5  0.0 -0.2369
   End
End

Engine Band
   Title SnO EFG
   NumericalQuality Basic      ! Only for speed
   Tails bas=1e-8              ! Only for reproducibility with nr. of cores
   ! useful for Moessbauer spectroscopy: density and coulomb pot. at nuclei
   PropertiesAtNuclei
   End

   EFG
      Enabled True
   End

   Basis
      Type DZ
      Core none
   End
EndEngine
eor
}}

<div class="mw-translate-fuzzy">
Le script suivant est semblable à H2O_adf.sh, sauf qu'il n'utilise pas un nœud entier.
</div> 
{{File
  |name=SnO_EFG_band.sh
  |lang="bash"
  |contents=
#!/bin/bash
#SBATCH --account=def-pi
#SBATCH --nodes=2                # number of nodes 
#SBATCH --ntasks-per-node=16     # cpus per node
#SBATCH --mem-per-cpu=3G         # memory; 3G per cpu in this example
#SBATCH --time=00-10:00          # time (DD-HH:MM)
#SBATCH --output=SnO_EFG_band-%j.log

module unload openmpi
module load ams/2025.102
bash SnO_EFG_band.run                 # run the input file
}}

===Remarques===
# Le fichier en entrée pour AMS est différent de celui pour ADF; le fichier en entrée précédent pour ADF ne fonctionnera pas avec le nouveau AMS. Vous trouverez des exemples dans  /opt/software/ams/2020.102/examples/.
# À l'exception du fichier en sortie .log, les fichiers sont tous sauvegardés dans le sous-répertoire AMS_JOBNAME.results. Si AMS_JOBNAME n'est pas défini dans le fichier en entrée .run, le nom par défaut sera ams.results.
# Le nom du fichier de point de sauvegarde est ams.rkf plutôt que TAPE13 dans les versions ADF précédentes.
# Voyez le tutoriel [https://www.youtube.com/watch?v=lvJv_aN-wQU An Update on ADF/AMS software on Graham]
Pour plus d'information, consultez [https://www.scm.com/support/ SCM Support].

==Utiliser AMS-GUI==
Avec des applications comme AMS-GUI, la redirection X11 via une connexion SSH exige beaucoup de temps pour produire les rendus. Nous recommandons de vous connecter avec [[VNC/fr|VNC]].

===Graham===

Sur un nœud de calcul de Graham, AMS peut être utilisé interactivement en mode graphique avec TigerVNC pour une durée maximale de 3 heures.

# [[VNC/fr#Configuration|Installez un client TigerVNC]] sur votre ordinateur.
# [[VNC/fr#N.C5.93uds_de_calcul|Connectez-vous à un nœud de calcul]] avec vncviewer.
# <code>module load ams</code>
# <code>amsinput</code>

===Gra-vdi===

Sur gra-vdi, AMS peut être utilisé interactivement en mode graphique avec TigerVNC, sans limite de durée.

# [[VNC/fr#Configuration|Installez un client TigerVNC]] sur votre ordinateur.
# [[VNC/fr#N.C5.93uds_VDI|Connectez-vous à gra-vdi.computecanada.ca]] avec vncviewer.
# <code>module load SnEnv</code>
# <code>module load clumod</code>
# <code>module load ams</code>
# <code>amsinput</code>