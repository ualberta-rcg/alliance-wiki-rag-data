<languages />

= JupyterLab = 
JupyterLab est l'interface utilisateur générale recommandée pour JupyterHub.
À partir d'un serveur JupyterLab, vous pouvez gérer vos fichiers et vos répertoires distants et lancer des applications Jupyter comme un terminal, des notebooks (Python 3), RStudio et un bureau Linux.

Vous pouvez ajouter vos propres noyaux (<i>kernels</i>) qui seront affichés comme des applications. Pour configurer ces noyaux, voir [[JupyterNotebook/fr#Ajouter_des_noyaux_(kernels)|Ajouter des noyaux]].

== Lancer JupyterLab ==
Il existe plusieurs façons de lancer JupyterLab. 

Habituellement, on utilise [[JupyterHub/fr#JupyterHub_surune_grappe|JupyterHub]], mais des sites ont récemment déployé Open OnDemand, ce qui permet parfois de lancer l'interface montrée un peu plus loin. Le tableau suivant indique si l'interface JupyterLab disponible possède ou non toutes les fonctionnalités. S'il existe un lien, il renvoie au serveur JupyterHub ou Open OnDemand de la grappe.

{| class="wikitable" style="text-align: center;"
|+
!Grappe
! colspan="2" |JupyterHub
! colspan="3" |Open OnDemand
|-
|
|Disponible
|Toutes les fonctionnalités
|Disponible
|JupyterLab
|Toutes les fonctionnalités
|-
|Fir
| colspan="2" |[https://jupyterhub.fir.alliancecan.ca/ oui]
| colspan="3" |non
|-
|Killarney
| colspan="2" |non
| colspan="3" |non
|-
|Narval
|[https://jupyterhub.narval.alliancecan.ca/ oui]
|non
| colspan="3" |non
|-
|Nibi
| colspan="2" |non
| colspan="3" |[https://ondemand.sharcnet.ca/ oui]
|-
|Rorqual
| colspan="2" |[https://jupyterhub.rorqual.alliancecan.ca/ oui] 
| colspan="3" |non
|-
|tamIA
| colspan="2" |non
| colspan="3" |non
|-
|Trillium
| colspan="2" |non
|[http://ondemand.scinet.utoronto.ca/ oui]
|oui
|non
|-
|Vulcan
| colspan="2" |non
| colspan="3" |[https://vulcan.alliancecan.ca/ oui]
|}

Vous pouvez aussi lancer JupyterLab [[Advanced Jupyter configuration/fr|l'installant vous-même dans un environnement virtuel]], mais cette méthode est déconseillée et vous ne bénéficierez pas des applications préconfigurées décrites ci-dessous.

<span id="The_JupyterLab_interface"></span>
== Interface JupyterLab ==

Lorsque vous ouvrez JupyterLab dans une de nos nouvelles grappes, un tableau de bord s'affiche avec des boutons pour lancer des applications. Par défaut, il y a Python 3.11, LibreQDA, Mate Desktop (VNC), OpenRefine, RStudio, VS Code et XFCE4 Desktop (VNC). Vous trouverez également des liens vers la collection Globus de la grappe, son portail de tâches, ainsi que des liens vers les pages de documentation. En chargeant des modules, de nouveaux boutons apparaîtront dans le tableau de bord (voir ci-dessous). 

Dans la barre de menu du haut, notez que pour fermer votre session, vous pouvez le faire via le menu ''File''.
*<i>Hub Control Panel</i> : pour arrêter manuellement le serveur JupyterLab et la tâche sur la grappe; ceci est utile lorsque vous souhaitez démarrer un nouveau serveur JupyterLab avec plus ou moins de ressources.
* <i>Log Out</i> : pour fermer la session, ce qui arrête également le serveur JupyterLab et la tâche sur la grappe.
La plupart des autres éléments du menu sont liés aux notebooks et aux applications Jupyter.
[[File:JupyterLab Launcher with modules.png|none|thumb|750x750px|Onglet par défaut au chargement de JupyterLab]]

=== Liste des outils (à gauche)===  
Sur le côté gauche se trouve la liste des outils qui vous permet de modifier le contenu du cadre de droite. Les plus importants sont&nbsp;:

==== <i>File Browser</i> (icône d'un dossier) ====
C'est ici que vous pouvez naviguer dans vos espaces /home, /project et /scratch.  Il est également possible de l'utiliser pour importer des fichiers.
[[File:File browser.png|alt=File browser|none|frame|Afficher les fichiers]]

==== <i>Running Terminals and Kernels</i>  (icône d'arrêt) ====
Cette option permet d'arrêter les sessions de noyau et de terminal.

==== <i>GPU Dashboards</i> (icône de carte GPU)====
Si votre tâche utilise des GPU, cette option vous donne accès à certaines options de surveillance des ressources.

==== <i>Software Modules</i> (icône de module) ====
[[File:Software module selector.png|alt=Software module selector|none|thumb|Sélectionner des modules]]
C'est ici que vous pouvez charger ou décharger les [[Available software/fr|modules logiciels]] disponibles dans notre environnement. Selon les modules chargés, des icônes redirigeant vers les [[JupyterLab/fr#Applications_préconstruites|applications Jupyter]] correspondantes apparaîtront sous l'onglet <i>Launcher</i>. Par défaut, nous chargeons plusieurs modules pour vous donner accès aux outils de base. 

Le champ de recherche permet de rechercher n'importe quel [[Available software/fr|module disponible]] et d'afficher le résultat dans le sous-panneau <i>Available Modules</i>. Remarque&nbsp;: Certains modules sont masqués jusqu'au chargement de leurs dépendances. Nous vous recommandons de rechercher d'abord un module spécifique avec <code>module spider module_name</code> à partir d'un terminal.

Le sous-panneau suivant affiche la liste des modules chargés pour la session JupyterLab. 

Le dernier sous-panneau affiche la liste des modules disponibles, semblable au résultat de <code>module avail</code>. En cliquant sur le nom d'un module, des informations détaillées s'affichent. En cliquant sur le lien <i>Load</i>, le module est chargé et ajouté à la liste des modules chargés.

<span id="Status_bar_at_the_bottom"></span>
=== Barre d'état (au bas)===

* Cliquez sur les icônes pour aller à l'outil <i>Running Terminals and Kernels</i>.

<span id="Prebuilt_applications"></span>
== Applications préconstruites ==

JupyterLab offre l'accès à un terminal, un IDE (bureau), une console Python et plusieurs options pour créer des fichiers texte brut et formatés (<i>markdown</i>). Nous ne présentons ici que les principales applications qui sont compatibles avec notre pile logicielle.

=== Applications disponibles par défaut ===
Plusieurs modules logiciels sont chargés par défaut pour vous permettre d'y accéder sans aucune action supplémentaire. 

==== Python ====
[[File:Python launcher icon.png|alt=Python launcher icon|left|thumb|Icône de lancement de Python]]
Un noyau Python, avec la version par défaut, est automatiquement chargé. Cela vous permet de démarrer automatiquement les notebooks Python à l'aide de l'icône. 

Nous chargeons une version par défaut de Python, mais vous pouvez en utiliser une autre en chargeant une autre version des modules <code>ipython-kernel</code>.

Cet environnement Python n'est pas fourni avec la plupart des paquets préinstallés. Cependant, vous pouvez charger certains modules, comme <code>scipy-stack</code>, pour bénéficier de fonctionnalités supplémentaires. 

Vous pouvez également installer des paquets Python directement dans l'environnement du notebook, en exécutant 

<code>pip install --no-index package-name</code> 

dans une cellule de votre notebook, puis en redémarrant votre noyau.

==== VS Code ====
[[File:VS Code launcher icon.png|alt=VS Code launcher icon|left|thumb|Icône de lancement de VS Code]]
VS Code (Visual Studio Code) est un éditeur de code initialement développé par Microsoft, mais qui est un standard ouvert sur lequel [https://github.com/coder/code-server code-server] s'appuie pour rendre l'application accessible par n'importe quel navigateur. 

La version que nous avons installée est livrée avec un grand nombre  [https://github.com/ComputeCanada/easybuild-easyconfigs-installed-avx2/blob/main/2023/code-server/code-server-4.101.2.eb#L27 d'extensions] préinstallées. Pour plus de détails, voir [[Visual Studio Code/fr|Visual Studio Code]].

Lors d'une nouvelle session, le démarrage peut prendre jusqu'à 3 minutes.

Il est possible de rouvrir une session active après la fermeture de l'onglet du navigateur.

La session se terminera en même temps que la session JupyterLab.


==== LibreQDA ====
[[File:LibreQDA launcher icon.png|alt=LibreQDA launcher icon|left|thumb|Icône de lancement de LibreQDA]]
<i>[https://aide.libreqda.org/ LibreQDA]</i> est une application d'analyse qualitative, dérivée de [https://www.taguette.org/ Taguette].

Cette icône permet de lancer une version mono-utilisateur du logiciel, utilisable pour l'analyse de texte. 

Lors d'une nouvelle session, le démarrage peut prendre jusqu'à 3 minutes.

Il est possible de rouvrir une session active après la fermeture de l'onglet du navigateur.

La session se terminera en même temps que la session JupyterLab.

==== RStudio ====
[[File:RStudio launcher icon.png|alt=RStudio launcher icon|left|thumb|Icône de lancement de RStudio]]
[https://posit.co/download/rstudio-desktop/ RStudio] est un environnement de développement intégré principalement utilisé pour le langage [[R/fr|R]]. 

Nous chargeons une version par défaut du logiciel R, mais vous pouvez en utiliser une autre en chargeant une autre version des modules <code>rstudio-server</code>. Veuillez le faire '''avant''' de lancer RStudio, sinon vous devrez peut-être redémarrer JupyterLab.

Ceci ouvre ou ouvre de nouveau une interface RStudio dans un nouvel onglet du navigateur.

Il est possible de rouvrir une session active après la fermeture de l'onglet du navigateur.

La session se terminera en même temps que la session JupyterLab.

Notez que le simple fait de quitter RStudio ou de fermer les onglets RStudio et JupyterHub dans votre navigateur ne libère pas les ressources (CPU, mémoire, GPU) ni ne met fin à la tâche Slurm sous-jacente. <b>Veuillez fermer votre session via le menu <code>File > Log Out</code> dans l'onglet du navigateur JupyterLab</b>
==== OpenRefine ====
[[File:OpenRefine launcher icon.png|alt=OpenRefine launcher icon|left|thumb|Icône de lancement de OpenRefine]]
[https://openrefine.org/ OpenRefine] est un outil puissant, gratuit et libre permettant de nettoyer les données désordonnées, de les transformer et de les enrichir pour leur apporter plus de valeur. 

Il est couramment utilisé pour corriger les fautes de frappe dans les données d'enquête collectées manuellement.

Lors d'une nouvelle session, le démarrage peut prendre jusqu'à 3 minutes.

Il est possible de rouvrir une session active après la fermeture de l'onglet du navigateur.

La session se terminera en même temps que la session JupyterLab.


==== Desktop ====
[[File:Desktop launchers.png|alt=Desktop launchers|left|thumb|Icônes de lancement du bureau]]
Deux environnements de bureau différents sont disponibles par défaut&nbsp;: [https://mate-desktop.org/ Mate Desktop] et [https://www.xfce.org/ XFCE Desktop]. Vous pouvez choisir celui qui vous convient. XFCE offre une interface utilisateur plus moderne, tandis que Mate est plus léger.
Ceux-ci ouvrent ou rouvrent une interface de bureau Linux distante dans un nouvel onglet de navigateur. 

Cela est comme exécuter un [[VNC/fr|serveur VNC sur un nœud de calcul]], puis à créer un [[SSH_tunnelling/fr|tunnel SSH]] et enfin à utiliser un [[VNC/fr|client VNC]]. Avec JupyterLab, rien de tout cela n'est nécessaire.

Lors d'une nouvelle session, le démarrage peut prendre jusqu'à 3 minutes.

Il est possible de rouvrir une session active après la fermeture de l'onglet du navigateur.

La session se terminera en même temps que la session JupyterLab.

==== Terminal ====
[[File:Terminal launcher.png|alt=Terminal launcher|left|thumb|Icône de lancement d'un terminal]]
JupyterLab vous permet également d'ouvrir une session de terminal native. Cela peut être utile pour exécuter des commandes bash, soumettre des tâches ou modifier des fichiers. 

Le terminal exécute un shell (Bash) sur le nœud de calcul distant, sans la nécessité d'une connexion SSH.

Donne accès aux systèmes de fichiers distants (<code>/home</code>, <code>/project</code>, <code>/scratch</code>).

Permet de lancer des tâches de calcul.

Le terminal permet de copier-coller du texte.

Pour copier, sélectionnez le texte et appuyez sur  Ctrl+C.

Remarque : Généralement, Ctrl+C sert à envoyer un signal SIGINT à un processus en cours d'exécution ou à annuler la commande en cours. Pour obtenir ce comportement dans le terminal de JupyterLab, cliquez dessus pour désélectionner le texte avant d'appuyer sur Ctrl+C.

Pour coller, appuyez sur Ctrl+V.

==== Globus ====
[[File:Globus launcher.png|alt=Globus launcher|none|thumb|Icône de lancement de Globus]]
Si [[Globus/fr|Globus]] est disponible sur la grappe que vous utilisez, vous verrez peut-être cette icône. Cela ouvrira votre navigateur et la collection Globus correspondante.

==== Metrix ====
[[File:Metrix launcher.png|alt=Metrix launcher|none|thumb|Icône de lancement de Metrix]]
Si le [[Portail|portail de tâches Metrix]] est disponible sur la grappe que vous utilisez, cette icône ouvrira une page qui montre les statistiques de votre tâche. 

=== Applications disponibles après le chargement d'un module ===
Plusieurs modules que nous fournissons affichent également une icône de lancement d'une application lors de son chargement, même si elles ne sont pas chargées par défaut. 

==== Julia ====
[[File:Julia launcher.png|alt=Julia launcher|none|thumb|Icône de lancement de Julia]]
Le chargement d'un module <code>ijulia-kernel</code> vous permettra d'ouvrir un notebook avec le langage Julia. 

====Suite Ansys====
La suite Ansys propose plusieurs outils offrant une interface utilisateur graphique. Si vous chargez l'un des modules Ansys, vous accéderez à une série d'icônes de lancement, la plupart fonctionnant via une connexion VNC dans le navigateur.
{| class="wikitable"
|+
![[File:Ansys CFX launcher.png|alt=Ansys CFX launcher|none|thumb|Ansys CFX]]
![[File:Ansys Fluent launcher.png|alt=Ansys Fluent launcher|none|thumb|Ansys Fluent]]
![[File:Ansys Mapdl launcher.png|alt=Ansys Mapdl launcher|none|thumb|Ansys Mapdl]]
![[File:Ansys Workbench launcher.png|alt=Ansys Workbench launcher|none|thumb|Ansys Workbench]]
|}
Ansys Fluent dispose également d'une interface web, accessible via l'icône ci-dessous.
[[File:Ansys Fluent web launcher.png|alt=Ansys Fluent web launcher|none|thumb|Ansys Fluent web]]
Notez qu'un mot de passe est requis pour se connecter à Ansys Fluent. Ce mot de passe est généré au lancement et enregistré dans votre dossier personnel, dans le fichier $HOME/fluent_webserver_token.

Notez que pour Ansys, vous devrez fournir votre propre licence, comme expliqué sur notre page [[Ansys/fr|Ansys]].

====Ansys EDT====
[https://www.ansys.com/products/electronics Ansys EDT] est un module distinct. Charger le module <code>ansysedt</code> fera apparaître l'icône de lancement correspondante.

Notez que pour Ansys EDT, vous devrez fournir votre propre licence, comme expliqué sur notre page [[AnsysEDT/fr|Ansys EDT]].
[[File:Ansys EDT launcher.png|alt=Ansys EDT launcher|none|thumb|Icône de lancement de Ansys EDT]]

==== COMSOL ====
[[File:COMSOL launcher.png|alt=COMSOL launcher|none|thumb|Icône de lancement de COMSOL]]
[http://www.comsol.com COMSOL] est un logiciel polyvalent pour modéliser des applications d'ingénierie.

Pour utiliser ce logiciel, vous devez détenir votre propre licence. 

Charger un module <code>comsol</code> ajoutera une icône de lancement permettant de démarrer l'interface utilisateur graphique de COMSOL via une session VNC. Consultez notre page [[COMSOL/fr|COMSOL]] pour plus de détails sur l'utilisation de ce logiciel. 

==== Matlab ====
[https://www.mathworks.com/?s_tid=gn_logo MATLAB] est disponible en chargeant un module <code>matlab</code>, ce qui ajoutera une icône de lancement pour démarrer le logiciel via une session VNC. Notez que vous devrez fournir votre propre fichier de licence, comme expliqué sur notre page [[MATLAB/fr|MATLAB]].
[[File:MATLAB launcher.png|alt=MATLAB launcher|none|thumb|Icône de lancement de MATLAB]]

====NVidia Nsight Systems====
[https://developer.nvidia.com/nsight-systems NVidia Nsight Systems] est un outil d'analyse des performances développé principalement pour le profilage des GPU, mais qui permet également de profiler le code CPU.
[[File:NVidia Nsight Systems launcher.png|alt=NVidia Nsight Systems launcher|none|thumb|Icône de lancement de NVidia Nsight Systems]]
Le chargement d'un module <code>cuda</code> ou <code>nvhpc</code> crée une icône pour lancer l'interface utilisateur graphique dans une session VNC. 

Octave
[https://octave.org/ GNU Octave] est un langage de programmation scientifique libre largement compatible avec MATLAB. Le chargement d'un module <code>octave</code> ajoute une icône pour lancer l'interface utilisateur graphique d'Octave via une session VNC. Consultez notre page sur [[Octave]] pour plus de détails sur l'utilisation de ce logiciel.
[[File:Octave launcher.png|alt=Octave launcher|none|thumb|Icône de lancement de Octave]]

====ParaView====
[https://www.paraview.org/ ParaView]  est un puissant logiciel libre de visualisation. Le chargement d'un module <code>paraview</code> ajoute une icône pour lancer l'interface utilisateur graphique ParaView via une session VNC. Consultez notre page [[ParaView/fr|ParaView]] pour plus de détails sur l'utilisation de ce logiciel.
[[File:ParaView launcher.png|alt=ParaView launcher|none|thumb|Icône de lancement de ParaView]]

====QGIS====
[https://qgis.org/ QGIS] est un puissant logiciel libre de visualisation et de traitement de données de systèmes d'information géographique (SIG). Le chargement d'un module <code>qgis</code> ajoute une icône pour lancer l'interface graphique de QGIS via une session VNC. Consultez notre page [[QGIS|QGIS]] pour plus de détails sur ce logiciel.
[[File:QGIS launcher.png|alt=QGIS launcher|none|thumb|Icône de lancement de QGIS]]

====StarCCM+====
[https://plm.sw.siemens.com/en-US/simcenter/fluids-thermal-simulation/star-ccm/ Star-CCM+] de Siemens est un logiciel commercial de simulation numérique pour la dynamique des fluides. Il est disponible en chargeant l'un des modules <code>starccm</code> ou <code>starccm-mixed</code>, qui ajoute une icône pour lancer l'interface graphique de StarCCM+ via une session VNC. Comme pour tous les logiciels commerciaux, vous devrez fournir votre propre licence. Consultez notre page [[Star-CCM+/fr|Star-CCM+]] pour plus de détails sur l'utilisation de ce logiciel.
[[File:StarCCM+ launcher.png|alt=StarCCM+ launcher|none|thumb|Icône de lancement de StarCCM+]]

<span id="Additional_information_on_running_Python_notebooks"></span>
== Informations additionnelles sur l'exécution des notebooks ==

<span id="Python_notebook"></span>
==== Notebook Python ==== 

[[File:JupyterLab_Softwares_ScipyStack.png|thumb|Localiser les modules scipy-stack]]
Si votre notebook requiert l'un des paquets Python scientifiques suivants, avant de l'ouvrir, vous devez charger le module <code>scipy-stack</code> depuis l'outil JupyterLab ''Softwares''&nbsp;:
* <code>ipython</code>, <code>ipython_genutils</code>, <code>ipykernel</code>, <code>ipyparallel</code>
* <code>matplotlib</code>
* <code>numpy</code>
* <code>pandas</code>
* <code>scipy</code>
* D'autres paquets notables sont <code>Cycler</code>, <code>futures</code>, <code>jupyter_client</code>, <code>jupyter_core</code>, <code>mpmath</code>, <code>pathlib2</code>, <code>pexpect</code>, <code>pickleshare</code>, <code>ptyprocess</code>, <code>pyzmq</code>, <code>simplegeneric</code>, <code>sympy</code>, <code>tornado</code>, <code>traitlets</code>.
* Et bien d'autres (cliquez sur le module <code>scipy-stack</code> pour voir toutes les extensions incluses).

Remarque : Vous pouvez également installer les paquets nécessaires en exécutant, par exemple, la commande suivante dans une cellule : <code>pip install --no-index numpy</code>.
Pour certains paquets (comme plotly, par exemple), vous devrez peut-être redémarrer le noyau du notebook avant d'importer le paquet.
L'installation des paquets dans l'environnement du noyau Python par défaut est temporaire, le temps de la session JupyterLab; vous devrez réinstaller ces paquets lors du prochain démarrage d'une nouvelle session JupyterLab. Pour un environnement Python persistant, vous devez configurer un <b>[[Advanced_Jupyter_configuration/fr#Noyau_Python|noyau Python personnalisé]]</b>.

Pour ouvrir un notebook Python existant&nbsp;:
* Retournez à <i>File Browser</i>.
* Localisez le fichier <code>*.ipynb</code>.
* Double-cliquez sur le fichier <code>*.ipynb</code>.
** Le notebook Python s'ouvre dans un nouvel onglet JupyterLab.
** Un nouveau noyau IPython démarrera en arrière-plan pour le notebook.

Pour ouvrir un notebook Python dans le répertoire courant du <i>File Browser</i>&nbsp;:
* Cliquez sur le bouton ''Python 3.x'' sous la section <i>Notebook</i>;
** ceci ouvre un nouveau notebook Python 3 dans un nouvel onglet JupyterLab;
** un nouveau noyau IPython démarrera en arrière-plan pour le notebook.

=== Exécuter des notebooks en scripts Python ===
1. À partir de la console ou dans une nouvelle cellule d'un notebook, installez <tt>nbconvert</tt> :
<syntaxhighlight lang="bash">!pip install --no-index nbconvert</syntaxhighlight>

2. Convertissez vos notebooks en scripts Python.
<syntaxhighlight lang="bash">!jupyter nbconvert --to python my-current-notebook.ipynb</syntaxhighlight>

3. Créez [[Running_jobs/fr#Soumettre_des_tâches_avec_sbatch|une tâche non interactive]] et soumettez-la.

Dans le script de soumission, exécutez le notebook converti avec
<syntaxhighlight lang="bash">python mynotebook.py</syntaxhighlight>

et soumettez votre tâche non interactive avec
{{Command
|sbatch my-submit.sh
}}