[
  {
    "question": "What is RDKit?",
    "answer": "RDKit is a suite of applications for computational chemistry and machine learning, written in C++ and Python."
  },
  {
    "question": "How can I find out which versions of RDKit are available?",
    "answer": "To know the available versions, use the command `module spider rdkit`."
  },
  {
    "question": "How do I get specific information about a particular RDKit version?",
    "answer": "For information on a particular version, use `module spider rdkit/X.Y.Z`, replacing `X.Y.Z` with the desired version, such as `2024.03.5`."
  },
  {
    "question": "How do I find out which Python interface versions are available for RDKit?",
    "answer": "To know the available Python interface versions, use the command `module spider rdkit/X.Y.Z`, where `X.Y.Z` is the RDKit version you are interested in."
  },
  {
    "question": "What is the first step when a Python wheel depends on `rdkit`?",
    "answer": "The first step is to deactivate any Python virtual environment that might be active by running `test $VIRTUAL_ENV && deactivate`."
  },
  {
    "question": "Why is it important to deactivate a Python virtual environment before loading the RDKit module?",
    "answer": "It is important to deactivate an active virtual environment before loading the RDKit module. Once the module is loaded, you can then reactivate your virtual environment."
  },
  {
    "question": "How do you load the RDKit module and a specific Python version?",
    "answer": "You can load the module using a command like `module load rdkit/2024.03.5 python/3.12`."
  },
  {
    "question": "How can I verify if `rdkit` is visible to `pip` after loading the module?",
    "answer": "You can verify `rdkit`'s visibility to `pip` by running the command `pip list | grep rdkit`."
  },
  {
    "question": "How do I check if the loaded RDKit Python module is accessible?",
    "answer": "You can check if the loaded RDKit Python module is accessible by running `python -c 'import rdkit'`."
  },
  {
    "question": "What should be done after successfully loading the RDKit module and verifying its accessibility?",
    "answer": "After loading the module and verifying access, you should create a virtual environment and install any necessary packages."
  },
  {
    "question": "What does the error message 'ModuleNotFoundError: No module named 'rdkit'' signify?",
    "answer": "This message indicates that the `rdkit` module is not available or cannot be found by Python."
  },
  {
    "question": "What are the potential solutions for a 'ModuleNotFoundError: No module named 'rdkit''?",
    "answer": "Possible solutions include checking which Python versions are compatible with the loaded RDKit module using `module spider rdkit/X.Y.Z` and verifying accessibility with `python -c 'import rdkit'`, or ensuring the RDKit module is loaded before activating your virtual environment."
  }
]