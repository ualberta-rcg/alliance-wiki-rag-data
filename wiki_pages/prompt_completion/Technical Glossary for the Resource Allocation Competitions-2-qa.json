[
  {
    "question": "What is a 'job' in a batch system?",
    "answer": "A job is the basic execution object managed by the batch system, representing a collection of one or more related computing processes managed as a whole."
  },
  {
    "question": "What information is included in a job description when submitted to a batch system?",
    "answer": "A job description includes a resource request, such as the amount of required memory, the duration of the job, and how many compute cores the job will require."
  },
  {
    "question": "What are the two main types of jobs?",
    "answer": "Jobs can be either serial (running on one compute core) or parallel (running on multiple compute cores)."
  },
  {
    "question": "What defines a 'parallel job'?",
    "answer": "A parallel job is a job that runs simultaneously on multiple CPU cores."
  },
  {
    "question": "How are parallel jobs classified?",
    "answer": "Parallel jobs can be classified as threaded/SMP jobs running on a single compute node and sharing the same memory space, or distributed memory jobs that can run across several compute nodes."
  },
  {
    "question": "What is a 'serial job'?",
    "answer": "A serial job is a job that requires one compute CPU core to run."
  },
  {
    "question": "What is 'uneven usage' in the context of compute resources?",
    "answer": "Uneven usage refers to users having inconsistent workloads, with significant peaks and valleys in their usage, rather than relatively consistent usage of the system."
  },
  {
    "question": "What should users do if they anticipate having bursty workloads or variable usage?",
    "answer": "Users should indicate anticipated bursty workloads or variable usage in their RAC application."
  },
  {
    "question": "Who should be contacted if a user is having problems running jobs?",
    "answer": "If experiencing problems running jobs, users should contact Technical support."
  },
  {
    "question": "How is 'memory per core' defined?",
    "answer": "Memory per core is the amount of memory (RAM) per CPU core."
  },
  {
    "question": "Can you give an example of how 'memory per core' is calculated?",
    "answer": "If a compute node has 2 CPUs, each with 6 cores, and 24GB of installed RAM, the memory per core for that node would be 2GB (24GB / 12 cores)."
  },
  {
    "question": "What is 'memory per node'?",
    "answer": "Memory per node is the total amount of installed RAM in a compute node."
  },
  {
    "question": "How is 'system memory per core' calculated for a job?",
    "answer": "System memory per core is calculated by dividing the amount of system memory requested by a job in GB by the number of CPU cores requested by the job."
  },
  {
    "question": "How is 'system memory per GPU' calculated for a job?",
    "answer": "System memory per GPU is calculated by dividing the amount of system memory requested by a job in GB by the number of GPUs requested by the job."
  },
  {
    "question": "What is a 'disk'?",
    "answer": "A disk, hard drive, or solid-state drive is permanent storage that holds programs, input files, output results, and more, as opposed to a computer\u2019s main memory (RAM)."
  },
  {
    "question": "What are 'filesystems'?",
    "answer": "Filesystems are directory structures made available for use by systems in a cluster."
  },
  {
    "question": "What are the typical characteristics of filesystems?",
    "answer": "Each filesystem may have different performance characteristics, space available, and intended use."
  },
  {
    "question": "Which filesystems are typically available on clustered systems?",
    "answer": "Filesystems typically available on clustered systems include Scratch, Home, Project, and Nearline."
  },
  {
    "question": "What is the 'Scratch' filesystem primarily used for?",
    "answer": "The Scratch filesystem is primarily intended for temporary or transient files, bulk results of computations and simulations, or any material that can be easily recreated or reacquired during computational jobs."
  },
  {
    "question": "What happens to data on the Scratch filesystem?",
    "answer": "Data may be copied to Scratch and then removed once job execution is complete; it is also subject to periodic cleaning or purging and is not formally allocated, though limited by quotas."
  },
  {
    "question": "Where is the 'Scratch' filesystem available?",
    "answer": "The Scratch filesystem is available on compute nodes."
  },
  {
    "question": "What is the 'Home' filesystem used for?",
    "answer": "The Home filesystem is commonly used for storing a user's personal files, executable programs, job execution scripts, and relatively small input datasets."
  },
  {
    "question": "What are the characteristics of a 'home directory'?",
    "answer": "A home directory, located in the Home filesystem, is persistent, smaller than scratch, backed up regularly in most systems, and visible to all nodes in a given cluster."
  },
  {
    "question": "What is the 'Project' filesystem used for?",
    "answer": "The Project filesystem is generally used to store frequently-used project data, with minimum data churning, and is allocated through the RAC process."
  },
  {
    "question": "What are the performance and storage characteristics of the 'Project' filesystem?",
    "answer": "The Project filesystem is of medium to high performance disk, larger in available storage than Home, and in most systems, backed up regularly."
  },
  {
    "question": "What is the 'Nearline' filesystem?",
    "answer": "The Nearline filesystem is a disk-tape hybrid storage system where data above a certain size threshold is automatically migrated from disk to tape and back upon read operations."
  },
  {
    "question": "How do users access and manage files in the 'Nearline' filesystem?",
    "answer": "Users access Nearline storage through deliberate actions via the Linux command line (e.g., cp, mv, rsync) or by transferring files from other filesystems."
  },
  {
    "question": "What type of data should be stored in 'Nearline' storage?",
    "answer": "Nearline storage should be used for datasets that are infrequently accessed and need to be retained for long periods of time, as long as they are part of an 'active' project."
  },
  {
    "question": "Is 'Nearline' storage considered true archival storage?",
    "answer": "No, Nearline storage is not considered true archival storage because the datasets must be part of an 'active' project."
  },
  {
    "question": "How is 'Nearline' capacity managed and allocated?",
    "answer": "Nearline capacity is managed by quotas, and allocations are made via the RAC process."
  }
]