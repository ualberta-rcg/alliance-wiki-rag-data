[
  {
    "question": "How do servers typically differ from personal computers in terms of user interaction?",
    "answer": "On servers, interaction is primarily through a command line interface (CLI) by typing, rather than clicking graphical user interfaces (GUIs) found on personal computers."
  },
  {
    "question": "What is the purpose of a job script?",
    "answer": "A job script is a small text file that specifies what program to run, where to get input, and where to put output for a computation on a server."
  },
  {
    "question": "What software component decides when and where a job script will run?",
    "answer": "A piece of software called the 'scheduler' decides when and where a submitted job script will run."
  },
  {
    "question": "Is interaction with a program common while a job is running on a server?",
    "answer": "Normally there is no interaction between the user and the program while the job is running, though progress can be checked."
  },
  {
    "question": "What do lines starting with `#SBATCH` signify in a job script?",
    "answer": "Lines starting with `#SBATCH` are directives to the scheduler, providing information about what resources or parameters the job needs to run."
  },
  {
    "question": "What are the key responsibilities of a job scheduler?",
    "answer": "A job scheduler's responsibilities include maintaining a database of jobs, enforcing policies, ensuring resources aren't overloaded, deciding which jobs run on which nodes, launching them, and cleaning up afterward."
  },
  {
    "question": "Which job scheduler is used on the clusters mentioned in the document?",
    "answer": "On these clusters, the Slurm Workload Manager handles the job scheduling responsibilities."
  },
  {
    "question": "How do you request resources for a calculation using a job script?",
    "answer": "You use the job script to specify the resources needed, such as time and number of processors, for your calculation."
  },
  {
    "question": "What happens if a job requests fewer resources than it needs?",
    "answer": "If a job requests less than the calculation needs, it will be killed for exceeding the requested time or memory limit."
  },
  {
    "question": "What happens if a job requests more resources than it needs?",
    "answer": "If a job requests more resources than it needs, it may wait longer than necessary before starting and will needlessly prevent others from using those resources once running."
  },
  {
    "question": "How do you submit a job script named `simple_job.sh`?",
    "answer": "You submit the job script using the `sbatch` command, for example: `sbatch simple_job.sh`."
  },
  {
    "question": "What is the command to check the status of your jobs?",
    "answer": "You can check the status of your jobs using the `sq` command."
  },
  {
    "question": "What are the two most common states for a job in the `sq` output?",
    "answer": "The two most common job states are `PD` for pending and `R` for running."
  },
  {
    "question": "How can you tell if a job has finished using the `sq` command?",
    "answer": "When a job has finished, it no longer appears in the `sq` output."
  },
  {
    "question": "What is a job ID and why is it important?",
    "answer": "A job ID is a unique identification number assigned when you submit a job. It's important for distinguishing multiple jobs, even if they have the same name."
  },
  {
    "question": "Where does the output of a Slurm job go by default if not specified?",
    "answer": "By default, the output is placed in a file named `slurm-JOBID.out`, where JOBID is the unique identification number assigned to the job."
  },
  {
    "question": "How can you override options for `sbatch` on the command line?",
    "answer": "You can specify options directly on the command line when submitting with `sbatch`, for example: `sbatch --time=00:30:00 simple_job.sh`."
  }
]