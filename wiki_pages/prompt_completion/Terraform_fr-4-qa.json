[
  {
    "question": "What is the primary function of the `terraform plan` command?",
    "answer": "The `terraform plan` command compiles the Terraform definition, attempts to reconcile the resulting state with the current cloud state, and produces a plan of the modifications that would be applied."
  },
  {
    "question": "What do symbols like `+ create` in the `terraform plan` output signify?",
    "answer": "Symbols like `+ create` in the `terraform plan` output indicate the resource actions Terraform will perform, such as creating a new resource."
  },
  {
    "question": "What does `(known after apply)` mean for a value in the `terraform plan` output?",
    "answer": "` (known after apply)` means that these values will be determined from the state of the newly created resources after they are queried from OpenStack, not before the plan is applied."
  },
  {
    "question": "What is the importance of checking the final line of the `terraform plan` output?",
    "answer": "It is crucial to check the final line of the plan (e.g., 'Plan: 1 to add, 0 to change, 0 to destroy.') to understand the exact scope of modifications and avoid unexpected changes."
  },
  {
    "question": "What should you do if `terraform plan` shows an error about incomplete credentials?",
    "answer": "If `terraform plan` returns an error about incomplete credentials, you might have forgotten to define `OS_CLOUD`, source the RC file, or your `clouds.yaml` file might be missing."
  },
  {
    "question": "Does Terraform interact with or detect OpenStack resources that were created manually or by other tools?",
    "answer": "No, Terraform does not know about or try to determine the state of resources that are already defined for the project outside of Terraform. Its actions are based on the configuration provided and its previously determined state, making existing resources invisible to it."
  },
  {
    "question": "Is it possible to import existing OpenStack resources into Terraform's management?",
    "answer": "Yes, it is possible to import previously defined OpenStack resources into Terraform, but the document notes that it is not a simple task and is outside the scope of this tutorial."
  },
  {
    "question": "What happens if you don't use the `-out` parameter with `terraform plan`?",
    "answer": "If you don't specify an `-out` parameter to save the plan, Terraform cannot guarantee that exactly the same actions will be performed if `terraform apply` is subsequently run."
  }
]