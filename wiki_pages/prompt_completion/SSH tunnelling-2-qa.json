[
  {
    "question": "What does the provided example job script demonstrate?",
    "answer": "The example job script demonstrates how to set up an SSH tunnel to contact a license server for commercially licensed software."
  },
  {
    "question": "In the example job script, what are the values for the remote host and remote port for the license server?",
    "answer": "The REMOTEHOST is `licenseserver.institution.ca` and the REMOTEPORT is `9999`."
  },
  {
    "question": "How is the local port for the SSH tunnel chosen in the example job script?",
    "answer": "The local port (LOCALPORT) is randomly selected within the range 1024-65535, and an SSH tunnel attempt is made up to 10 times until a connection is established."
  },
  {
    "question": "How does the example job script inform the software about the license server's location after setting up the tunnel?",
    "answer": "It sets the `MLM_LICENSE_FILE` environment variable to `LOCALPORT@localhost`, instructing the software to look for the license server on the local machine at the specified forwarded port."
  },
  {
    "question": "Besides contacting a license server, what is another primary use of SSH tunnelling mentioned in the document?",
    "answer": "SSH tunnelling can be used to allow a user's computer to connect to a program running on a compute node through an encrypted tunnel routed via the cluster's login node."
  },
  {
    "question": "What are the benefits of using SSH tunnelling to connect to a program running on a compute node?",
    "answer": "It allows graphical output of applications like Jupyter Notebook or visualization software to be displayed transparently on the user's local workstation, and can bind an external port to a database server if direct connection is only possible through the head node."
  },
  {
    "question": "Do compute nodes on Nibi and Fir clusters have access to the Internet?",
    "answer": "Yes, Network Address Translation (NAT) on both Nibi and Fir allows users to access the Internet from the compute nodes."
  },
  {
    "question": "What Python package is recommended for creating an SSH tunnel on Linux or MacOS X systems?",
    "answer": "The `sshuttle` Python package is recommended for creating an SSH tunnel on Linux or MacOS X."
  },
  {
    "question": "What is the command to create an SSH tunnel using `sshuttle` on Linux or MacOS X?",
    "answer": "The command is `sshuttle --dns -Nr userid@machine_name`."
  },
  {
    "question": "After creating an SSH tunnel with `sshuttle`, how does a user typically access their application, such as a Jupyter notebook?",
    "answer": "The user copies and pastes the application's URL (which includes a token for Jupyter notebooks) into their browser."
  },
  {
    "question": "What software is used to create an SSH tunnel from Windows?",
    "answer": "An SSH tunnel can be created from Windows using MobaXTerm."
  },
  {
    "question": "When using MobaXTerm to connect to a program on a compute node, how many sessions are typically used and for what purposes?",
    "answer": "Two sessions are typically used: Session 1 for connecting to the cluster and starting the job (e.g., Jupyter Notebook), and Session 2 as a local terminal to set up the SSH tunnel."
  },
  {
    "question": "Provide an example of an SSH command used in MobaXTerm's local terminal to forward a port for an application running on a compute node.",
    "answer": "An example command is `ssh -L 8888:fc3281.int.fir.alliancecan.ca:8888 someuser@fir.alliancecan.ca`."
  },
  {
    "question": "When setting up an SSH tunnel with `ssh -L`, is it required for the local port number to match the remote port number?",
    "answer": "No, it is not strictly required for the local port number to match the remote port number, but it is conventional and helps reduce confusion."
  },
  {
    "question": "How should a user modify an application's URL (like a Jupyter Notebook URL) to access it via an SSH tunnel set up in MobaXTerm?",
    "answer": "The user should modify the URL by replacing the original host name with `localhost`."
  },
  {
    "question": "What command is used to create an SSH tunnel from a desktop to a PostgreSQL database server on Fir?",
    "answer": "The command is `ssh -L PORT:cedar-pgsql-vm.int.cedar.computecanada.ca:5432 someuser@fir.alliancecan.ca`."
  },
  {
    "question": "What command is used to create an SSH tunnel from a desktop to a MySQL database server on Fir?",
    "answer": "The command is `ssh -L PORT:cedar-mysql-vm.int.cedar.computecanada.ca:3306 someuser@fir.alliancecan.ca`."
  },
  {
    "question": "What is the maximum recommended value for the local port (PORT) when setting up an SSH tunnel to a database server from your desktop?",
    "answer": "The chosen `PORT` number should not be bigger than 32768."
  }
]