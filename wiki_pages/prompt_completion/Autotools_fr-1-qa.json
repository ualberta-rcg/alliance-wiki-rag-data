[
  {
    "question": "What is Autotools also known as?",
    "answer": "Autotools is also known as the 'GNU build system'."
  },
  {
    "question": "What is the primary function of the `autoconf` tool?",
    "answer": "The `autoconf` tool automates the creation of `Makefile` files for the `Make` utility, adapting them for different systems and compilers."
  },
  {
    "question": "What is the first step when building a program using `autoconf`?",
    "answer": "The first step is to call the `configure` script by executing `./configure`."
  },
  {
    "question": "What does `Autoconf` do after the `./configure` command is executed?",
    "answer": "`Autoconf` checks that the necessary compiler and software versions are installed on the computer and then generates the appropriate `Makefile`."
  },
  {
    "question": "After running `./configure`, what is the next command in the build process?",
    "answer": "The next command to execute in the build process is `make`."
  },
  {
    "question": "How are files typically installed to their correct locations after compilation?",
    "answer": "Files are installed to the correct locations by running `make install`."
  },
  {
    "question": "How can one specify an installation directory for exclusive access to a software?",
    "answer": "You can create a directory, for example, `mkdir $HOME/LOGICIEL`, and then use `make install --prefix=$HOME/LOGICIEL` to install the software there."
  },
  {
    "question": "Which common option is used to define the installation directory for `make install`?",
    "answer": "The `--prefix` option is always available and defines the directory where `make install` will install the application or library."
  },
  {
    "question": "Provide an example of how to use the `--prefix` option with `./configure` to install an application in a personal subdirectory.",
    "answer": "To install an application in the `programmes` subdirectory of your home directory, you can use `./configure --prefix=$HOME/programmes/`."
  },
  {
    "question": "What is a basic command sequence for compiling and installing a program using `Autoconf` with a specified installation directory?",
    "answer": "A basic command sequence is `./configure && make && make install --prefix=$HOME/LOGICIEL`."
  },
  {
    "question": "How can a user obtain a detailed list of all available options for a `configure` script?",
    "answer": "To get a detailed list of options, launch `./configure --help`."
  },
  {
    "question": "What are the common types of options used to enable or disable features in `configure` scripts?",
    "answer": "Feature options are generally of the type `--enable-feature` or `--disable-feature`."
  },
  {
    "question": "How would you enable MPI or threads functionalities using `configure` options?",
    "answer": "You would use `./configure --enable-mpi` to enable MPI, or `./configure --enable-threads` to enable threads."
  },
  {
    "question": "What is the general recommendation regarding the use of `--with-...` options?",
    "answer": "It is generally recommended not to use `--with-...` options and to let Autoconf find the parameters automatically."
  },
  {
    "question": "In what situations might it be necessary to use `--with-...` options, and can you provide an example?",
    "answer": "It is sometimes necessary to specify parameters via `--with-...` options, such as `./configure --enable-mpi --with-mpi-dir=$MPIDIR`."
  },
  {
    "question": "How can one specify the compiler to use and its options when running `./configure`?",
    "answer": "One can specify the compiler and its options by declaring variables after the `./configure` command, for example, `./configure CC=icc CFLAGS=\"-O3 -xHost\"`."
  },
  {
    "question": "What is the purpose of the `CFLAGS` variable?",
    "answer": "`CFLAGS` is used for the C compiler."
  },
  {
    "question": "What does `CPPFLAGS` control?",
    "answer": "`CPPFLAGS` is for the preprocessor and C, C++, Objective C, and Objective C++ compilers."
  },
  {
    "question": "Which compiler uses the `CXXFLAGS` variable?",
    "answer": "The `CXXFLAGS` variable is used for the C++ compiler."
  },
  {
    "question": "What is the function of the `DEFS` variable?",
    "answer": "`DEFS` is used to define a macro for the preprocessor."
  },
  {
    "question": "What is `FCFLAGS` used for?",
    "answer": "`FCFLAGS` is used for the Fortran compiler."
  },
  {
    "question": "Which Fortran compiler version does `FFLAGS` pertain to?",
    "answer": "`FFLAGS` pertains to the Fortran 77 compiler."
  },
  {
    "question": "What is the `LDFLAGS` variable used for?",
    "answer": "`LDFLAGS` is used for the linker."
  },
  {
    "question": "What is the purpose of the `LIBS` variable?",
    "answer": "`LIBS` is used for the libraries to be linked."
  },
  {
    "question": "Where can an exhaustive list of Autoconf variables and options be found?",
    "answer": "An exhaustive list of variables and options is available in the Autoconf documentation."
  }
]