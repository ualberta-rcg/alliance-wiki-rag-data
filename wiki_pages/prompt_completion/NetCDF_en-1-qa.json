[
  {
    "question": "What is NetCDF?",
    "answer": "NetCDF (Network Common Data Form) is an interface for array-oriented data access and a library that provides an implementation of this interface. It also defines a machine-independent format for scientific data."
  },
  {
    "question": "What are the three main components that NetCDF supports for scientific data?",
    "answer": "Together, the interface, library, and format support the creation, access, and sharing of scientific data."
  },
  {
    "question": "What significant changes occurred with NetCDF version 4.0?",
    "answer": "Significant changes to the library were released with version 4.0. NetCDF 4.x is backwards compatible, meaning it can read files from earlier versions, but earlier versions cannot read NetCDF 4.x files."
  },
  {
    "question": "When was NetCDF 4.0 released?",
    "answer": "NetCDF 4.0 was released in 2008."
  },
  {
    "question": "Where can I find the official NetCDF project website?",
    "answer": "The NetCDF project web site is located at https://www.unidata.ucar.edu/software/netcdf."
  },
  {
    "question": "Where can I access the NetCDF manual?",
    "answer": "The NetCDF manual is available at https://www.unidata.ucar.edu/software/netcdf/docs."
  },
  {
    "question": "What are the primary strengths of NetCDF?",
    "answer": "Its strengths include data independence from processor architecture (endianness), structured data that tracks pertinent information like physical units, parallel read/write capabilities (with a parallel HDF5 build), data compression during writing, a simpler interface than HDF5, and availability as free software for most platforms."
  },
  {
    "question": "Can NetCDF4 read and write data in parallel?",
    "answer": "Yes, NetCDF4 can read and write in parallel if it is built using a parallel version of HDF5."
  },
  {
    "question": "How does the NetCDF interface compare to HDF5?",
    "answer": "NetCDF offers a simpler interface compared to HDF5."
  },
  {
    "question": "What are the known weak points of NetCDF?",
    "answer": "Weak points include the Python interface (version 1.0.5) not supporting parallelism, and certain files produced with HDF5 not being readable by NetCDF."
  },
  {
    "question": "Does the Python interface for NetCDF support parallelism?",
    "answer": "No, the Python interface (version 1.0.5) does not support parallelism."
  },
  {
    "question": "What NetCDF module is used for linking with C programs only on Compute Canada systems?",
    "answer": "The 'netcdf' module is used for linking with programs containing C instructions only."
  },
  {
    "question": "Which NetCDF module is suitable for programs combining C and C++ instructions?",
    "answer": "The 'netcdf-c++' module is used for linking with programs containing both C and C++ instructions."
  },
  {
    "question": "What module should be used for Fortran programs on Compute Canada systems?",
    "answer": "The 'netcdf-fortran' module is for linking with programs containing Fortran instructions."
  },
  {
    "question": "How do I load a NetCDF module compiled with MPI support for C programs?",
    "answer": "You would load the 'netcdf-mpi' module for linking with C programs that call MPI libraries."
  },
  {
    "question": "How can I see which versions of NetCDF are available with my current compiler and MPI modules?",
    "answer": "Run the command `module avail netcdf`."
  },
  {
    "question": "How can I get a comprehensive list of all NetCDF modules?",
    "answer": "Run the command `module -r spider '.*netcdf.*'`."
  },
  {
    "question": "How do I load a specific version of the NetCDF C-based library, for example, version 4.1.3?",
    "answer": "You would use the command `module load netcdf/4.1.3`."
  },
  {
    "question": "How do I link C code to serial NetCDF libraries?",
    "answer": "First, load the appropriate module (e.g., `module load netcdf/4.4.1`), then compile with `gcc example.c -lnetcdf`."
  },
  {
    "question": "What is the command to link Fortran code to serial NetCDF libraries?",
    "answer": "You need to load the `gcc` and `netcdf-fortran` modules, then compile using `gfortran example.f90 -I$EBROOTNETCDFMINFORTRAN/include -lnetcdf -lnetcdff`. The order of the libraries (`-lnetcdf -lnetcdff`) matters."
  },
  {
    "question": "How do I link C code that calls MPI to parallel NetCDF libraries?",
    "answer": "First, load the `netcdf-mpi` module, then compile with `gcc example.c -lnetcdf`."
  },
  {
    "question": "Where can I find an example demonstrating the use of NetCDF?",
    "answer": "An example demonstrating NetCDF usage can be found at https://www.unidata.ucar.edu/software/netcdf/netcdf-4/newdocs/netcdf-tutorial/simple_005fxy_005fwr_002ec.html#simple_005fxy_005fwr_002ec."
  },
  {
    "question": "How do you compile the example program `ex_netcdf4.c`?",
    "answer": "First, load the NetCDF module with `module load netcdf`, then compile with `gcc ex_netcdf4.c -lnetcdf`."
  },
  {
    "question": "What is the purpose of the `ncdump` utility?",
    "answer": "The `ncdump` utility generates the CDL (Common Data Language) text representation of a NetCDF dataset on standard output, which can then be used as input to `ncgen` to transform data representation between binary and text."
  },
  {
    "question": "What is `ncgen`?",
    "answer": "`ncgen` is a utility that takes an input file in CDL format and creates a binary NetCDF file; it is the reverse of `ncdump`."
  },
  {
    "question": "What is `nccopy` used for?",
    "answer": "`nccopy` copies a NetCDF file and can modify its binary format, chunk sizes, compression, and other storage settings."
  },
  {
    "question": "What are `nc-config` and `nf-config` utilities used for?",
    "answer": "`nc-config` and `nf-config` are utilities that help users find the correct compilation and linking commands for NetCDF libraries."
  }
]