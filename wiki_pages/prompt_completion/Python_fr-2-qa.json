[
  {
    "question": "Comment cr\u00e9er un environnement virtuel Python ?",
    "answer": "Pour cr\u00e9er un environnement virtuel, vous devez d'abord charger une version de Python avec `module load python/X.Y.Z` et, si n\u00e9cessaire, le module `scipy-stack/X.Y.Z`. Ensuite, utilisez la commande `virtualenv --no-download ~/ENV`, o\u00f9 `ENV` est le nom du r\u00e9pertoire de votre nouvel environnement."
  },
  {
    "question": "Quelle est la commande pour activer un environnement virtuel ?",
    "answer": "Pour activer un environnement virtuel, utilisez la commande `source ~/ENV/bin/activate`, en rempla\u00e7ant `ENV` par le nom de votre environnement."
  },
  {
    "question": "Pourquoi et comment mettre \u00e0 jour pip apr\u00e8s avoir activ\u00e9 un environnement virtuel ?",
    "answer": "Vous devriez mettre \u00e0 jour `pip` dans l'environnement virtuel pour s'assurer d'avoir la derni\u00e8re version. La commande pour ce faire est `pip install --no-index --upgrade pip`."
  },
  {
    "question": "Comment quitter un environnement virtuel ?",
    "answer": "Pour quitter un environnement virtuel, entrez simplement la commande `deactivate`."
  },
  {
    "question": "Quelles sont les \u00e9tapes pour r\u00e9utiliser un environnement virtuel ?",
    "answer": "Pour r\u00e9utiliser un environnement virtuel, vous devez d'abord charger les m\u00eames modules d'environnement que ceux utilis\u00e9s lors de sa cr\u00e9ation (par exemple, `module load python scipy-stack`), puis activer l'environnement avec `source ENV/bin/activate`."
  },
  {
    "question": "Quel outil est utilis\u00e9 pour installer des paquets Python dans un environnement virtuel ?",
    "answer": "Une fois qu'un environnement virtuel est charg\u00e9 et activ\u00e9, la commande `pip` est utilis\u00e9e pour installer des paquets Python et leurs d\u00e9pendances."
  },
  {
    "question": "Donnez un exemple d'installation du paquet NumPy dans un environnement virtuel.",
    "answer": "Pour installer NumPy, commencez par charger l'interpr\u00e9teur Python (`module load python/X.Y`), puis activez votre environnement virtuel (`source ~/ENV/bin/activate`). Ensuite, installez NumPy avec `pip install numpy --no-index`."
  },
  {
    "question": "Quelles sont les sources \u00e0 partir desquelles pip peut installer des paquets ?",
    "answer": "`pip` peut installer des paquets \u00e0 partir de plusieurs sources, incluant PyPI et les paquets de distribution pr\u00e9construits appel\u00e9s Python wheels."
  },
  {
    "question": "Quel est le r\u00f4le de l'option `--no-index` lors de l'installation d'un paquet avec pip ?",
    "answer": "L'option `--no-index` demande \u00e0 `pip` de ne pas installer \u00e0 partir de PyPI, mais plut\u00f4t d'installer uniquement \u00e0 partir de paquets de source locale, comme les wheels fournis par le syst\u00e8me."
  },
  {
    "question": "Pourquoi est-il fortement recommand\u00e9 d'utiliser l'option `--no-index` si un wheel local est disponible ?",
    "answer": "Il est fortement recommand\u00e9 d'utiliser l'option `--no-index` car les wheels compil\u00e9s localement \u00e9vitent les probl\u00e8mes de d\u00e9pendances manquantes ou conflictuelles, et sont optimis\u00e9s pour les grappes et les biblioth\u00e8ques du syst\u00e8me."
  },
  {
    "question": "Que se passe-t-il si l'option `--no-index` est omise lors de l'installation d'un paquet ?",
    "answer": "Si l'option `--no-index` est omise, `pip` cherchera les paquets sur PyPI et localement, puis utilisera la version la plus r\u00e9cente. Si la version la plus r\u00e9cente provient de PyPI, elle sera install\u00e9e \u00e0 la place de la version locale, ce qui pourrait causer des probl\u00e8mes."
  },
  {
    "question": "Quand utiliser l'option `--no-binary` avec pip ?",
    "answer": "Si vous pr\u00e9f\u00e9rez t\u00e9l\u00e9charger un paquet PyPI plut\u00f4t que d'utiliser un wheel pr\u00e9construit local, utilisez l'option `--no-binary`. Cela demande \u00e0 `pip` de ne pas consid\u00e9rer de paquets pr\u00e9construits, for\u00e7ant la compilation du paquet \u00e0 partir de la source."
  },
  {
    "question": "Comment peut-on d\u00e9terminer la provenance d'un paquet Python install\u00e9 par pip ?",
    "answer": "Pour savoir d'o\u00f9 provient le paquet Python install\u00e9 par `pip`, ajoutez l'option `-vvv` \u00e0 la commande d'installation."
  },
  {
    "question": "Quelle est la meilleure pratique pour installer plusieurs paquets Python simultan\u00e9ment ?",
    "answer": "Il est pr\u00e9f\u00e9rable d'installer plusieurs paquets Python en une seule \u00e9tape avec une seule commande `pip install`, car cela permet \u00e0 `pip` de r\u00e9soudre plus facilement les d\u00e9pendances crois\u00e9es."
  }
]