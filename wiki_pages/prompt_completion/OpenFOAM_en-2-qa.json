[
  {
    "question": "How do you compile the petscFoam solver?",
    "answer": "To compile the petscFoam solver, navigate to the `external-solver-main` directory and run the `./Allwmake` command."
  },
  {
    "question": "What command is used to compile the petscFoam solver?",
    "answer": "The `./Allwmake` command is used to compile the petscFoam solver."
  },
  {
    "question": "What output confirms the petscFoam solver compilation has started?",
    "answer": "The message \"Starting compile of external-solver (petsc) with OpenFOAM-v2412\" confirms the compilation has started."
  },
  {
    "question": "What output confirms the petscFoam solver compilation has finished successfully?",
    "answer": "The message \"Finished compile of external-solver (petsc) with OpenFOAM-v2412\" confirms successful compilation."
  },
  {
    "question": "How can you check if OpenFOAM can load the petscFoam solver?",
    "answer": "You can check if OpenFOAM can load the petscFoam solver by running the command `foamHasLibrary -verbose petscFoam`."
  },
  {
    "question": "What is the expected result when checking if OpenFOAM can load petscFoam?",
    "answer": "The expected result is \"Can load 'petscFoam'\"."
  },
  {
    "question": "How do you verify the location of the petscFoam dynamic library?",
    "answer": "You can verify the location of the petscFoam dynamic library by running the command `ls $FOAM_USER_LIBBIN`."
  },
  {
    "question": "What is the typical filename for the petscFoam dynamic library?",
    "answer": "The typical filename for the petscFoam dynamic library is `libpetscFoam.so`."
  },
  {
    "question": "How do you check the dependencies of `libpetscFoam.so`?",
    "answer": "You can check the dependencies of `libpetscFoam.so` by running the command `ldd $FOAM_USER_LIBBIN/libpetscFoam.so | grep petsc`."
  },
  {
    "question": "Which petsc-related libraries are listed as dependencies for `libpetscFoam.so`?",
    "answer": "The dependencies listed for `libpetscFoam.so` include `libpetsc.so.3.21`, `libstrumpack.so.7.2`, and `libml.so.13`."
  },
  {
    "question": "What performance issue can OpenFOAM cause on shared filesystems?",
    "answer": "OpenFOAM can cause poor performance on shared filesystems by emitting a lot of debugging information in very frequent small writes (e.g., hundreds per second)."
  },
  {
    "question": "How can OpenFOAM's debug output be reduced or disabled to improve performance?",
    "answer": "To reduce or disable debug output, create a directory `$HOME/.OpenFOAM/$WM_PROJECT_VERSION` and copy `$WM_PROJECT_DIR/etc/controlDict` into it."
  },
  {
    "question": "Where are OpenFOAM's run-time parameters for versions 6 and 7 documented?",
    "answer": "OpenFOAM's run-time parameters are documented for version 6 at `https://cfd.direct/openfoam/user-guide/v6-controldict/` and for version 7 at `https://cfd.direct/openfoam/user-guide/v7-controldict/`."
  },
  {
    "question": "Which dictionary in the `controlDict` file can be altered to change debug output flags?",
    "answer": "The `debugSwitches` dictionary in `$HOME/.OpenFOAM/$WM_PROJECT_VERSION/controlDict` can be altered to change debug output flags."
  },
  {
    "question": "How can the `debugSwitches` dictionary in `controlDict` be modified to reduce output?",
    "answer": "The `debugSwitches` dictionary can be modified by changing flags from values greater than zero to zero to reduce output."
  },
  {
    "question": "What is an alternative solution to reduce OpenFOAM's disk output besides modifying `controlDict`?",
    "answer": "Another solution is to use the local scratch directory (`$SLURM_TMPDIR`), a disk attached directly to the compute node."
  },
  {
    "question": "What is `$SLURM_TMPDIR`?",
    "answer": "`$SLURM_TMPDIR` is a local scratch disk attached directly to the compute node."
  }
]