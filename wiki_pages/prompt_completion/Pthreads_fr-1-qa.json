[
  {
    "question": "D'o\u00f9 provient le terme 'pthreads' ?",
    "answer": "Le terme 'pthreads' provient de POSIX threads."
  },
  {
    "question": "Dans quel contexte la technique de parall\u00e9lisation pthreads est-elle principalement utilis\u00e9e ?",
    "answer": "Pthreads s'emploie dans un contexte de m\u00e9moire partag\u00e9e, habituellement sur un seul n\u0153ud o\u00f9 le nombre de fils actifs est limit\u00e9 aux c\u0153urs CPU disponibles."
  },
  {
    "question": "Dans quels langages de programmation pthreads est-il le plus couramment utilis\u00e9 ?",
    "answer": "Pthreads est surtout utilis\u00e9 en C."
  },
  {
    "question": "Quelle technique est pr\u00e9f\u00e9r\u00e9e pour la parall\u00e9lisation de fils d'ex\u00e9cution en Fortran ?",
    "answer": "En Fortran, la parall\u00e9lisation de fils d'ex\u00e9cution se fait pr\u00e9f\u00e9rablement avec OpenMP."
  },
  {
    "question": "Quels outils sont adapt\u00e9s \u00e0 la programmation orient\u00e9e-objet en C++ pour la parall\u00e9lisation de fils d'ex\u00e9cution ?",
    "answer": "En C++, les outils de la biblioth\u00e8que Boost issus de la norme C11 sont mieux adapt\u00e9s \u00e0 la programmation orient\u00e9e-objet."
  },
  {
    "question": "Comment peut-on caract\u00e9riser pthreads par rapport \u00e0 des APIs comme OpenMP ?",
    "answer": "On peut voir pthreads comme \u00e9tant un ensemble d'outils primitifs offrant des fonctionnalit\u00e9s \u00e9l\u00e9mentaires de parall\u00e9lisation, contrairement aux APIs conviviales et de haut niveau comme OpenMP."
  },
  {
    "question": "Comment les fils sont-ils g\u00e9n\u00e9r\u00e9s dans le mod\u00e8le pthreads ?",
    "answer": "Dans le mod\u00e8le pthreads, les fils sont g\u00e9n\u00e9r\u00e9s dynamiquement pour ex\u00e9cuter des sous-proc\u00e9dures dites l\u00e9g\u00e8res de fa\u00e7on asynchrone."
  },
  {
    "question": "Quel est un risque majeur li\u00e9 au partage de donn\u00e9es en m\u00e9moire partag\u00e9e avec pthreads ?",
    "answer": "Toute modification aux donn\u00e9es partag\u00e9es risque de cr\u00e9er des situations de comp\u00e9tition ('race conditions')."
  },
  {
    "question": "Qu'est-ce que la 'scalabilit\u00e9' dans le contexte de la parall\u00e9lisation d'un programme ?",
    "answer": "La 'scalabilit\u00e9' est la capacit\u00e9 du programme \u00e0 s'ex\u00e9cuter en parall\u00e8le."
  },
  {
    "question": "Quel fichier d'en-t\u00eate doit \u00eatre inclus pour utiliser les fonctions pthreads dans un programme C ?",
    "answer": "Il faut inclure le fichier d'en-t\u00eate (header file) <tt>pthread.h</tt>."
  },
  {
    "question": "Comment compile-t-on un programme C qui utilise la biblioth\u00e8que pthreads ?",
    "answer": "On compile le programme avec un indicateur ('flag') pour faire le lien avec la biblioth\u00e8que pthreads, par exemple <tt>gcc -pthread -o test threads.c</tt>."
  },
  {
    "question": "Quelles sont les m\u00e9thodes pour d\u00e9finir le nombre de fils pour un programme pthreads ?",
    "answer": "Le nombre de fils peut \u00eatre d\u00e9fini comme argument dans une ligne de commande, via une variable d'environnement, ou encod\u00e9 dans le fichier source."
  },
  {
    "question": "Quelle est la fonction utilis\u00e9e pour cr\u00e9er de nouveaux fils avec pthreads ?",
    "answer": "La fonction <tt>pthread_create</tt> cr\u00e9e des nouveaux fils."
  },
  {
    "question": "Quels sont les quatre arguments requis par la fonction <tt>pthread_create</tt> ?",
    "answer": "Les quatre arguments sont : l'identifiant unique pour le nouveau fil, l'ensemble des attributs du fil, la fonction C que le fil ex\u00e9cute lorsqu'il est amorc\u00e9 (la routine de lancement), et l'argument de la routine de lancement."
  },
  {
    "question": "Quel est le r\u00f4le de la fonction <tt>pthread_join</tt> dans un programme pthreads ?",
    "answer": "La fonction <tt>pthread_join</tt> est une fonction bloquante qui fait attendre le fil ma\u00eetre que les fils esclaves terminent l'ex\u00e9cution de leur t\u00e2che et qu'ils r\u00e9int\u00e8grent le fil ma\u00eetre."
  },
  {
    "question": "Pourquoi l'ordre d'ex\u00e9cution des fils esclaves peut-il varier d'une ex\u00e9cution \u00e0 l'autre dans un programme pthreads simple ?",
    "answer": "L'ordre peut varier parce que les fils s'ex\u00e9cutent en mode asynchrone, ce qui est pr\u00e9visible et signifie que le r\u00e9sultat d\u00e9pend de l'ordonnancement non d\u00e9terministe."
  },
  {
    "question": "Qu'est-ce qu'une 'situation de comp\u00e9tition' ('race condition') ?",
    "answer": "Une 'situation de comp\u00e9tition' est un cas o\u00f9 le r\u00e9sultat du programme d\u00e9pend de l'ordre dans lequel les fils esclaves acc\u00e8dent aux donn\u00e9es partag\u00e9es."
  },
  {
    "question": "Quel est le m\u00e9canisme de verrouillage utilis\u00e9 avec pthreads pour contr\u00f4ler l'acc\u00e8s concurrent aux donn\u00e9es ?",
    "answer": "Le m\u00e9canisme de verrouillage est le mutex (pour 'mutual exclusion')."
  },
  {
    "question": "Comment d\u00e9clare-t-on un mutex en pthreads ?",
    "answer": "Pour cr\u00e9er un mutex, il faut d\u00e9clarer une variable globale de type <tt>pthread_mutex_t</tt>."
  },
  {
    "question": "Quelles fonctions sont utilis\u00e9es pour initialiser et d\u00e9truire un mutex ?",
    "answer": "Un mutex est initialis\u00e9 par la fonction <tt>pthread_mutex_init</tt> et les ressources sont d\u00e9truites par la fonction <tt>pthread_mutex_destroy</tt>."
  },
  {
    "question": "Que fait la fonction <tt>pthread_mutex_lock</tt> ?",
    "answer": "L'appel de <tt>pthread_mutex_lock</tt> effectue le blocage, c'est-\u00e0-dire que le fil attendra ind\u00e9finiment que le mutex devienne disponible."
  },
  {
    "question": "Quelle est l'alternative non bloquante \u00e0 <tt>pthread_mutex_lock</tt> et comment fonctionne-t-elle ?",
    "answer": "L'alternative non bloquante est <tt>pthread_mutex_trylock</tt> ; elle produit imm\u00e9diatement une valeur non nulle si le mutex n'est pas accompli, indiquant qu'il est occup\u00e9."
  },
  {
    "question": "Quel est l'outil de synchronisation qui permet la lecture simultan\u00e9e par plusieurs fils mais un acc\u00e8s exclusif en \u00e9criture ?",
    "answer": "Il s'agit du verrou lecture/\u00e9criture <tt>pthread_rwlock_t</tt>."
  },
  {
    "question": "Quelles fonctions sont utilis\u00e9es pour obtenir un verrou en lecture et un verrou en \u00e9criture avec <tt>pthread_rwlock_t</tt> ?",
    "answer": "Un fil obtient un verrou en lecture avec <tt>pthread_rwlock_rdlock</tt> et un verrou en \u00e9criture avec <tt>pthread_rwlock_wrlock</tt>."
  },
  {
    "question": "Quel est l'outil permettant \u00e0 plusieurs fils d'agir sur la m\u00eame condition, par exemple d'attendre une t\u00e2che ?",
    "answer": "Il s'agit d'une variable-condition, exprim\u00e9e comme <tt>pthread_cond_t</tt>."
  },
  {
    "question": "Quel autre m\u00e9canisme doit contr\u00f4ler l'acc\u00e8s aux variables qui influencent une variable-condition ?",
    "answer": "Un mutex doit contr\u00f4ler l'acc\u00e8s aux variables qui ont une incidence sur la condition."
  },
  {
    "question": "Que fait un fil qui attend une condition avec <tt>pthread_cond_wait</tt> ?",
    "answer": "Un fil en attente d'une condition verrouille le mutex et fait appel \u00e0 la fonction <tt>pthread_cond_wait</tt> avec la variable-condition et le mutex en arguments."
  },
  {
    "question": "Quelle est la diff\u00e9rence entre <tt>pthread_cond_signal</tt> et <tt>pthread_cond_broadcast</tt> ?",
    "answer": "<tt>pthread_cond_signal</tt> avertit un seul fil au hasard que la condition est satisfaite, tandis que <tt>pthread_cond_broadcast</tt> signale \u00e0 tous les fils en attente que la condition est satisfaite."
  }
]