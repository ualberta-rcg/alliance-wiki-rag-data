[
  {
    "question": "What is Mii?",
    "answer": "Mii is a smart search engine for module environments."
  },
  {
    "question": "How does Mii work with existing module installations?",
    "answer": "Mii works around an existing modules installation, efficiently searching and loading modules on-demand for users."
  },
  {
    "question": "What happens when Mii is loaded and an unambiguous command is given?",
    "answer": "Modules will be quietly autoloaded for any unambiguous commands."
  },
  {
    "question": "How does Mii handle ambiguous commands?",
    "answer": "Ambiguous commands will interactively ask for modules to load."
  },
  {
    "question": "Which module installation types does Mii support?",
    "answer": "Mii supports Lmod and Environment Modules installations."
  },
  {
    "question": "What shell integrations does Mii offer?",
    "answer": "Mii features bash and zsh shell integration."
  },
  {
    "question": "How can users get module listing or individual module information with Mii?",
    "answer": "Users can get module listing or individual information via `mii list` and `mii show`."
  },
  {
    "question": "What command is used in Mii for searching exact commands?",
    "answer": "Searching for exact commands is done via `mii exact`."
  },
  {
    "question": "What command is used in Mii for searching similar commands?",
    "answer": "Searching for similar commands is done via `mii search`."
  },
  {
    "question": "Does Mii provide an optional export format for its output?",
    "answer": "Yes, Mii has an optional JSON export format."
  },
  {
    "question": "Do modules autoloaded by Mii persist after the command execution?",
    "answer": "No, a module that is autoloaded does not persist after the command."
  },
  {
    "question": "What is the state of the shell environment after Mii autoloads a module?",
    "answer": "The shell environment will be the same as it was before Mii autoloaded a module."
  },
  {
    "question": "How do you activate or load Mii?",
    "answer": "To enable or load Mii, use the command `module load mii`."
  },
  {
    "question": "What suggestions does Mii make when a command is not found?",
    "answer": "When a command is not found, Mii will suggest similar commands, e.g., '[mii] cmd not found! Similar commands: \"xcmd\", \"vmd\", \"c2d\"'."
  },
  {
    "question": "Can you provide an example of Mii autoloading a module for an unambiguous command?",
    "answer": "When `python3.9 --version` is run, Mii might output '[mii] loading StdEnv/2020 python/3.9.6 ...' and then display 'Python 3.9.6'."
  },
  {
    "question": "How does Mii assist when a command is unknown or ambiguous?",
    "answer": "When a command is unknown or ambiguous, Mii suggests a selection of potential candidate modules based on their relevance and asks the user to make a selection."
  },
  {
    "question": "How can you search for binaries to discover which modules provide them using Mii?",
    "answer": "You can search for binaries using the command `mii search`."
  },
  {
    "question": "How are the results sorted when performing a `mii search`?",
    "answer": "The results of a `mii search` are sorted by relevance."
  },
  {
    "question": "What command is used to disable Mii?",
    "answer": "To disable Mii, use the command `mii disable`."
  },
  {
    "question": "How do you re-enable Mii after it has been disabled?",
    "answer": "To re-enable Mii, use the command `mii enable`."
  }
]