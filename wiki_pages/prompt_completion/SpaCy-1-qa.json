[
  {
    "question": "What is spaCy?",
    "answer": "spaCy is a Python package that provides industrial-strength natural language processing."
  },
  {
    "question": "How can I check the latest available built versions of spaCy, thinc, and thinc_gpu_ops?",
    "answer": "You can check the latest built versions by running the command `avail_wheels spacy thinc thinc_gpu_ops`."
  },
  {
    "question": "What is the preferred method for installing spaCy?",
    "answer": "The preferred method is to install spaCy using the pre-compiled Python wheel."
  },
  {
    "question": "What are the initial steps for installing spaCy using the pre-build method?",
    "answer": "The initial steps include loading the `python/3.6` module and creating and activating a virtual environment."
  },
  {
    "question": "How do I install spaCy with both GPU and CPU support in a virtual environment?",
    "answer": "After loading the Python module and activating a virtual environment, install it using `pip install spacy[cuda] --no-index`."
  },
  {
    "question": "How do I install spaCy for only CPU support in a virtual environment?",
    "answer": "After loading the Python module and activating a virtual environment, install it using `pip install spacy --no-index`."
  },
  {
    "question": "What steps are necessary to use the GPU version of spaCy?",
    "answer": "To use the GPU version, you need to load the `gcc/5.4.0` and `cuda/9` modules, then export the CUDA libraries to `LD_LIBRARY_PATH` by running `export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH`."
  },
  {
    "question": "What additional wheels are required if I want to use the PyTorch wrapper with thinc?",
    "answer": "If you want to use the PyTorch wrapper with `thinc`, you will also need to install either the `torch_cpu` or `torch_gpu` wheel."
  }
]