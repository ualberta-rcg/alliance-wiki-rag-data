[
  {
    "question": "Where can I find a list of available Python wheels?",
    "answer": "A current list of Python wheels available from the wheelhouse on national systems is presented in the document."
  },
  {
    "question": "How do I request the installation or update of a specific Python wheel?",
    "answer": "You can request the installation or update of a particular wheel by contacting technical support."
  },
  {
    "question": "Are all Python wheels available in every loaded StdEnv?",
    "answer": "No, some wheels may not be available in the specific StdEnv you have loaded."
  },
  {
    "question": "What command should I use to find out which wheels are available in my active StdEnv?",
    "answer": "To find out which wheels can be installed in your active StdEnv, use the `avail_wheels` command."
  },
  {
    "question": "Why might some Python wheels not appear in the main list?",
    "answer": "Some wheels may not be listed because they are part of modules, such as pyarrow (Arrow), pyqt5 (QT), petsc4py (PETSc), and opencv_python (OpenCV)."
  },
  {
    "question": "How do I search for Python extensions that are part of modules?",
    "answer": "You can search for such extensions using the command `module spider <python package>`."
  },
  {
    "question": "What are the steps to list a specific wheel from the current software environment?",
    "answer": "First, load the software environment using `module load StdEnv/YYYY` (where YYYY can be 2020 or 2023). Then, look for a specific wheel using `avail_wheels <name>`."
  },
  {
    "question": "Which StdEnv versions are mentioned for loading a software environment?",
    "answer": "The StdEnv versions mentioned for loading a software environment are `2020` and `2023`."
  },
  {
    "question": "What command is used to load a software environment?",
    "answer": "The command `module load StdEnv/YYYY` is used to load a software environment."
  },
  {
    "question": "What command allows you to search for a specific wheel once a software environment is loaded?",
    "answer": "Once a software environment is loaded, you can use `avail_wheels <name>` to look for a specific wheel, where `name` is the name of the wheel you are searching for."
  }
]