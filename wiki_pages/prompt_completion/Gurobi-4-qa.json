[
  {
    "question": "How do you install gurobipy for Gurobi versions 10.0.3 and older in a Python virtual environment?",
    "answer": "First, load the Gurobi and Python modules and create/activate your virtual environment: `module load gurobi/10.0.3 python`, `virtualenv --no-download ~/env_gurobi`, `source ~/env_gurobi/bin/activate`. Then, to install gurobipy, create a temporary directory: `mkdir /tmp/$USER`, copy the Gurobi library and setup files: `cp -r $EBROOTGUROBI/{lib,setup.py} /tmp/$USER`, change to that directory: `cd /tmp/$USER`, and run the installation: `python setup.py install`. Finally, deactivate the environment."
  },
  {
    "question": "What is the recommended Gurobi version for installation with StdEnv/2023 for versions 11.0.0 and newer, and why?",
    "answer": "Version 11.0.1 is recommended for Gurobi 11.0.0 and newer with StdEnv/2023, as version 11.0.0 has been observed to cause seg faults in some examples, while 11.0.1 runs smoothly."
  },
  {
    "question": "How do you set up a Python virtual environment for Gurobi 11.0.1?",
    "answer": "Load the necessary modules: `module load gurobi/11.0.1 python`. Then create the virtual environment: `virtualenv --no-download ~/env_gurobi`, and activate it: `source ~/env_gurobi/bin/activate`."
  },
  {
    "question": "Why can't `setup.py` be used to install Gurobi for Python versions 11.0.0 and newer?",
    "answer": "The use of `setup.py` for installing Gurobi for Python has been deprecated starting with Gurobi 11 versions."
  },
  {
    "question": "What are the alternatives to `setup.py` for installing Gurobi for Python 11+?",
    "answer": "Pip and Conda are given as alternatives, but Conda should not be used on the systems mentioned. The pip approach is demonstrated, albeit with a specific workaround due to the Gentoo prefix."
  },
  {
    "question": "Why do standard pip commands (`pip install gurobipy` or offline wheel install) not work for Gurobi 11+ on these Linux systems?",
    "answer": "Standard pip commands do not work because the Linux systems are set up with a Gentoo prefix, requiring a special conversion of the binary wheel."
  },
  {
    "question": "What is the process to install `gurobipy` for Gurobi 11.0.1 into a Python virtual environment on these systems?",
    "answer": "First, ensure the virtual environment is active and necessary modules are loaded. Then, download the `unmanylinuxize.sh` script: `wget https://raw.githubusercontent.com/ComputeCanada/wheels_builder/main/unmanylinuxize.sh`, make it executable: `chmod u+rx unmanylinuxize.sh`. Next, run the script, providing the package name, version, and the direct URL to the Gurobi wheel file (e.g., `./unmanylinuxize.sh --package gurobipy --version 11.0.1 --url <wheel_url>`). Finally, install the converted wheel using pip: `python -m pip install --find-links $PWD --no-index gurobipy`, and then `deactivate` the environment."
  },
  {
    "question": "Where can one find the URL for the Gurobi wheel file needed for installation of Gurobi 11+?",
    "answer": "For each new Gurobi version, you must visit `https://pypi.org/project/gurobipy/<version>/#history` (e.g., `https://pypi.org/project/gurobipy/11.0.1/#history`), click on the desired version, then the 'Download files' button, and copy the HTTPS link for the wheel file."
  },
  {
    "question": "How do you install additional Python packages like pandas in a Gurobi virtual environment for both Gurobi 10.0.3 and 11.0.1?",
    "answer": "Once the virtual environment is activated, you can install packages using `pip install --no-index <package_name>`, for example: `pip install --no-index pandas`."
  },
  {
    "question": "What is the deprecation warning seen during the `python setup.py install` for Gurobi 10.0.3?",
    "answer": "A `SetuptoolsDeprecationWarning` indicates that 'newlines are not allowed in `summary` and will break in the future' regarding invalid config."
  }
]