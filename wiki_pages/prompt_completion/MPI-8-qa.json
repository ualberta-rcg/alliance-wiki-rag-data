[
  {
    "question": "What are MPI compiler-wrappers?",
    "answer": "MPI compiler-wrappers are not compilers themselves but call other compilers and pass MPI-specific flags to them."
  },
  {
    "question": "What is the typical compiler wrapper for C language in MPI?",
    "answer": "The typical compiler wrapper for C is `mpicc`."
  },
  {
    "question": "What is the typical compiler wrapper for C++ language in MPI?",
    "answer": "The typical compiler wrapper for C++ is `mpicxx`."
  },
  {
    "question": "What are some typical compiler wrappers for Fortran in MPI?",
    "answer": "Typical compiler wrappers for Fortran include `mpifort`, `mpif77`, and/or `mpif90`."
  },
  {
    "question": "How can one inspect which compiler and options an Open MPI wrapper will use?",
    "answer": "With Open MPI, the `--showme` option can be used with a wrapper (e.g., `mpicc -showme`) to print the compiler that will be called and the compiler-options that will be added."
  },
  {
    "question": "How do MPI compiler-wrappers determine which specific compiler and version to use when multiple Open MPI packages are available?",
    "answer": "The MPI compiler-wrappers will always use the compiler and compiler version that has been loaded with the `module load` command."
  },
  {
    "question": "What output would `mpicc -showme` produce if `intel/2020.1.217` and `openmpi/4.0.3` modules are loaded?",
    "answer": "It would show `icc` as the compiler being used, along with specific include and library paths for Open MPI built with Intel, such as `icc -I/cvmfs/.../intel2020/openmpi/4.0.3/include -L/cvmfs/.../intel2020/openmpi/4.0.3/lib -lmpi`."
  },
  {
    "question": "What output would `mpicc -showme` produce if `gcc/9.3.0` and `openmpi/4.0.3` modules are loaded?",
    "answer": "It would show `gcc` as the compiler being used, along with specific include and library paths for Open MPI built with GCC, such as `gcc -I/.../gcc9/openmpi/4.0.3/include -L/cvmfs/.../gcc9/openmpi/4.0.3/lib -lmpi`."
  },
  {
    "question": "What are some advanced MPI programming topics that go beyond basic MPI tutorials?",
    "answer": "Advanced topics include MPI_Send/MPI_Recv variants (buffered, non-blocking, synchronous), collective communications (reduction, broadcast, barrier, scatter, gather), derived data types, communicators and topologies, one-sided communication, efficiency issues, and parallel debugging."
  },
  {
    "question": "Which book is recommended as a comprehensive reference for Fortran, C, and C++ bindings in MPI?",
    "answer": "The book \"Using MPI: Portable Parallel Programming with the Message-Passing Interface (2e)\" by William Gropp, Ewing Lusk, and Anthony Skjellum is recommended."
  },
  {
    "question": "Is there a tutorial-style book for parallel programming with MPI in C?",
    "answer": "Yes, \"Parallel Programming with MPI\" by Peter S. Pacheco is an easy-to-follow tutorial-style approach in C."
  },
  {
    "question": "Where can I find an MPI tutorial from Lawrence Livermore National Labs?",
    "answer": "Blaise Barney provides a \"Message Passing Interface (MPI)\" tutorial on the Lawrence Livermore National Labs computing website."
  },
  {
    "question": "Are there any general online MPI tutorials recommended?",
    "answer": "Yes, 'mpitutorial.com' by Wes Kendall, Dwaraka Nath, Wesley Bland et al. is recommended."
  },
  {
    "question": "Are there any MPI training resources available in French?",
    "answer": "Yes, IDRIS provides a 'Formation \"MPI\"' (en fran\u00e7ais)."
  }
]