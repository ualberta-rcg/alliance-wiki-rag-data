[
  {
    "question": "Comment puis-je installer temporairement des paquets Python dans un notebook JupyterLab ?",
    "answer": "Vous pouvez installer les paquets n\u00e9cessaires en ex\u00e9cutant, par exemple, la commande `pip install --no-index package-name` dans une cellule de votre notebook."
  },
  {
    "question": "Que faut-il faire apr\u00e8s avoir install\u00e9 certains paquets Python (comme plotly) dans un notebook JupyterLab ?",
    "answer": "Pour certains paquets (comme plotly, par exemple), vous devrez peut-\u00eatre red\u00e9marrer le noyau du notebook avant d'importer le paquet."
  },
  {
    "question": "L'installation des paquets dans l'environnement du noyau Python par d\u00e9faut est-elle persistante ?",
    "answer": "Non, l'installation des paquets dans l'environnement du noyau Python par d\u00e9faut est temporaire, le temps de la session JupyterLab, et vous devrez r\u00e9installer ces paquets lors du prochain d\u00e9marrage d'une nouvelle session JupyterLab."
  },
  {
    "question": "Comment configurer un environnement Python persistant dans JupyterLab ?",
    "answer": "Pour un environnement Python persistant, vous devez configurer un noyau Python personnalis\u00e9."
  },
  {
    "question": "Quelles sont les \u00e9tapes pour ouvrir un notebook Python existant dans JupyterLab ?",
    "answer": "Pour ouvrir un notebook Python existant, retournez \u00e0 l'outil 'File Browser', localisez le fichier `*.ipynb`, puis double-cliquez dessus. Le notebook Python s'ouvrira dans un nouvel onglet JupyterLab et un nouveau noyau IPython d\u00e9marrera en arri\u00e8re-plan."
  },
  {
    "question": "Comment ouvrir un nouveau notebook Python dans le r\u00e9pertoire courant de JupyterLab ?",
    "answer": "Pour ouvrir un nouveau notebook Python dans le r\u00e9pertoire courant du 'File Browser', cliquez sur le bouton 'Python 3.x' sous la section 'Notebook'. Ceci ouvrira un nouveau notebook Python 3 dans un nouvel onglet JupyterLab et un nouveau noyau IPython d\u00e9marrera en arri\u00e8re-plan."
  },
  {
    "question": "Comment installer 'nbconvert' pour convertir des notebooks Jupyter en scripts Python ?",
    "answer": "Pour installer `nbconvert`, ex\u00e9cutez la commande `!pip install --no-index nbconvert` depuis la console ou dans une nouvelle cellule d'un notebook."
  },
  {
    "question": "Comment convertir un notebook Jupyter en script Python ?",
    "answer": "Apr\u00e8s avoir install\u00e9 `nbconvert`, vous pouvez convertir votre notebook en script Python en ex\u00e9cutant la commande `!jupyter nbconvert --to python my-current-notebook.ipynb`."
  },
  {
    "question": "Comment ex\u00e9cuter un notebook converti en script Python comme une t\u00e2che non interactive ?",
    "answer": "Apr\u00e8s avoir converti le notebook en script Python, cr\u00e9ez une t\u00e2che non interactive. Dans le script de soumission, ex\u00e9cutez le notebook converti avec `python mynotebook.py`, puis soumettez votre t\u00e2che non interactive avec `sbatch my-submit.sh`."
  }
]