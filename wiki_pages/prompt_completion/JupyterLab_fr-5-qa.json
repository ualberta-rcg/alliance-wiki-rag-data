[
  {
    "question": "Comment installer temporairement des paquets Python dans un notebook JupyterLab ?",
    "answer": "Vous pouvez installer des paquets Python dans une cellule de votre notebook en utilisant la commande `pip install --no-index package-name`."
  },
  {
    "question": "Dois-je red\u00e9marrer le noyau du notebook apr\u00e8s l'installation de certains paquets Python ?",
    "answer": "Oui, pour certains paquets (comme plotly), il peut \u00eatre n\u00e9cessaire de red\u00e9marrer le noyau du notebook avant d'importer le paquet."
  },
  {
    "question": "Les paquets Python install\u00e9s via `pip install` dans un notebook JupyterLab sont-ils persistants ?",
    "answer": "Non, l'installation des paquets dans l'environnement du noyau Python par d\u00e9faut est temporaire et ne dure que le temps de la session JupyterLab. Vous devrez les r\u00e9installer lors du prochain d\u00e9marrage d'une nouvelle session."
  },
  {
    "question": "Comment obtenir un environnement Python persistant dans JupyterLab ?",
    "answer": "Pour un environnement Python persistant, vous devez configurer un noyau Python personnalis\u00e9."
  },
  {
    "question": "Quelles sont les \u00e9tapes pour ouvrir un notebook Python existant dans JupyterLab ?",
    "answer": "Pour ouvrir un notebook Python existant, retournez au 'File Browser', localisez le fichier `.ipynb`, puis double-cliquez dessus. Le notebook s'ouvrira dans un nouvel onglet JupyterLab et un nouveau noyau IPython d\u00e9marrera."
  },
  {
    "question": "Comment ouvrir un nouveau notebook Python dans JupyterLab \u00e0 partir du 'File Browser' ?",
    "answer": "Pour ouvrir un nouveau notebook Python dans le r\u00e9pertoire courant du 'File Browser', cliquez sur le bouton 'Python 3.x' sous la section 'Notebook'. Un nouveau notebook Python 3 s'ouvrira dans un nouvel onglet JupyterLab."
  },
  {
    "question": "Comment installer `nbconvert` pour convertir des notebooks en scripts Python ?",
    "answer": "Vous pouvez installer `nbconvert` en ex\u00e9cutant `!pip install --no-index nbconvert` \u00e0 partir de la console ou dans une cellule de notebook."
  },
  {
    "question": "Quelle commande utiliser pour convertir un notebook Jupyter en script Python ?",
    "answer": "Pour convertir un notebook Jupyter en script Python, utilisez la commande `!jupyter nbconvert --to python my-current-notebook.ipynb`."
  },
  {
    "question": "Comment ex\u00e9cuter un notebook converti en script Python dans une t\u00e2che non interactive ?",
    "answer": "Apr\u00e8s avoir converti le notebook en script Python, cr\u00e9ez une t\u00e2che non interactive. Dans le script de soumission, ex\u00e9cutez le script converti avec `python mynotebook.py`, puis soumettez la t\u00e2che avec `sbatch my-submit.sh`."
  }
]