[
  {
    "question": "How do you set up an SSH tunnel from your local computer to a Cloud VM for ParaView client-server mode?",
    "answer": "You can organize an SSH tunnel from the local port 11111 to the VM's port 11111 using the command `ssh centos@vm.ip.address -L 11111:localhost:11111`."
  },
  {
    "question": "Once the SSH tunnel to a Cloud VM is established, how do you connect the ParaView client?",
    "answer": "Start the ParaView client on your computer and connect to `localhost:11111`."
  },
  {
    "question": "What message indicates successful SWR rendering when connected to a ParaView server on a Cloud VM?",
    "answer": "During rendering in the console, you should see the message 'SWR detected AVX2'."
  },
  {
    "question": "What kind of remote desktop is used for interactive visualization with ParaView in JupyterLab?",
    "answer": "Remote VNC desktop is used for ParaView visualization through JupyterLab, unlike client-server visualizations."
  },
  {
    "question": "What are the steps to start ParaView for visualization within JupyterLab?",
    "answer": "To start ParaView in JupyterLab, launch a JupyterLab instance through one of the supported options, then load a `paraview` module. A launcher icon for ParaView will then appear, allowing you to start your visualization."
  },
  {
    "question": "What are the typical resource limits for small interactive visualizations on Nibi's Open OnDemand?",
    "answer": "Small interactive visualizations on Nibi's Open OnDemand can require up to 256GB memory and 16 cores."
  },
  {
    "question": "How do you prepare the environment and load ParaView modules on Nibi's Open OnDemand for a VNC remote desktop session?",
    "answer": "First, connect to `gra-vdi` (as described in TigerVNC) and open a terminal, then run `module load CcEnv`. You can then use `module spider paraview` to see available versions, and `module load StdEnv/2020 gcc/9.3.0 openmpi/4.0.3 paraview/5.11.0` to load the specific modules."
  },
  {
    "question": "What special command is needed to start recent versions of ParaView on Nibi's Open OnDemand to avoid issues with VirtualGL dynamic linker faker?",
    "answer": "For recent ParaView versions, you need to disable the VirtualGL dynamic linker faker `LD_PRELOAD` by running `LD_PRELOAD=${LD_PRELOAD/libdlfaker.so/} paraview`."
  },
  {
    "question": "What is the recommended approach for large-scale and automated visualization with ParaView?",
    "answer": "For large-scale and automated visualization, it is strongly recommended to switch from interactive client-server to off-screen batch visualization."
  },
  {
    "question": "How can you automate visualization workflows using ParaView?",
    "answer": "ParaView supports Python scripting, which allows you to script your workflow and submit it as a regular, potentially parallel production job on a cluster."
  },
  {
    "question": "Who should be contacted for assistance with batch rendering in ParaView?",
    "answer": "If you need any help with batch rendering, you should contact Technical support."
  }
]