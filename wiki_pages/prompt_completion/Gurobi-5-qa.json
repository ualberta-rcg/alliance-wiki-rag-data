[
  {
    "question": "How do you activate and prepare a Gurobi Python virtual environment for immediate use?",
    "answer": "First, load the Gurobi and `scipy-stack` modules (e.g., `module load gurobi/11.0.1 scipy-stack`), then activate your virtual environment (e.g., `source ~/env_gurobi/bin/activate`). These are required to run matrix examples, along with `numpy` installed in the environment."
  },
  {
    "question": "What modules are typically needed to run a Gurobi matrix example within a virtual environment?",
    "answer": "To run a Gurobi matrix example, you typically need to load the `gurobi` and `scipy-stack` modules. `numpy` should also be installed in your virtual environment."
  },
  {
    "question": "How can a Gurobi Python example script be executed within an activated virtual environment?",
    "answer": "Within the virtual environment, after loading the necessary modules, you can run a Python example script using a command like `python $EBROOTGUROBI/examples/python/matrix1.py`."
  },
  {
    "question": "How do you submit custom Gurobi Python scripts as batch jobs to the queue?",
    "answer": "Custom Python scripts can be run as jobs in the queue by writing a Slurm script that loads your virtual environment, and then submitting it using the `sbatch script-name.sh` command."
  },
  {
    "question": "What are the key components of a Slurm script for running a Gurobi Python script in a virtual environment?",
    "answer": "A typical Slurm script includes SBATCH directives for account, time, nodes, CPUs, and memory. It loads `StdEnv` and `gurobi` modules (and optionally `scipy-stack`), sets Gurobi threads via `gurobi.env`, activates the virtual environment, and then executes the Python script."
  },
  {
    "question": "Where can I find additional details on creating and utilizing Python virtual environments within job scripts?",
    "answer": "Further information regarding how to create and use python virtual environments within job scripts can be found on the 'Python#Creating_virtual_environments_inside_of_your_jobs' page."
  },
  {
    "question": "What steps are necessary to use Gurobi with Java?",
    "answer": "To use Gurobi with Java, you need to load a Java module and add an option to your Java command (`-Djava.library.path=$EBROOTGUROBI/lib`) to enable the Java virtual environment to locate the Gurobi libraries."
  },
  {
    "question": "Can you provide an example of a Slurm job script for running Gurobi with Java?",
    "answer": "A sample Slurm script for Java would load `java/14.0.2` and `gurobi/9.1.2` modules, and then execute the Java application using a command like `java -Djava.library.path=$EBROOTGUROBI/lib -Xmx4g -jar my_java_file.jar`."
  },
  {
    "question": "Where can users find resources and examples for integrating Gurobi with Jupyter notebooks?",
    "answer": "Users can find resources by visiting Gurobi's `Resources` page, then clicking `Code and Modeling Examples`, and finally `Optimization with Python \u2013 Jupyter Notebook Modeling Examples`. Alternatively, search for 'Jupyter Notebooks' on `support.gurobi.com`."
  },
  {
    "question": "Is there a video demonstration for using Gurobi with Jupyter notebooks on the systems?",
    "answer": "Yes, a demo case of using Gurobi with Jupyter notebooks on the systems is available in a video recording, specifically starting at the 38:28 mark."
  },
  {
    "question": "How should I cite Gurobi software in an academic publication?",
    "answer": "For information on how to cite Gurobi software for academic publications, please refer to the article 'How do I cite Gurobi software for an academic publication?' on the Gurobi support site."
  }
]