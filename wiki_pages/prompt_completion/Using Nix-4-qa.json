[
  {
    "question": "What is the function of `emacs<major><minor>Packages.emacsWithPackages`?",
    "answer": "It is a composition that wraps Emacs to enable a given set of packages."
  },
  {
    "question": "How can you examine the content of an Emacs package using Nix?",
    "answer": "You can use `nix build` to build the package, for example, `nix build nixpkgs.emacs25Packages.magit -o magit`, and then access its contents through the created symbolic link, such as `cat magit/share/emacs/site-lisp/elpa/magit*/AUTHORS.md`."
  },
  {
    "question": "How do you create an Emacs composition with specific packages enabled using a `.nix` file?",
    "answer": "You can create a `.nix` file containing an expression that uses `emacs25Packages.emacsWithPackages` like this: `with import <nixpkgs> {}; emacs25Packages.emacsWithPackages (packages: with packages; [... list of emacs packages ...]);`"
  },
  {
    "question": "What are the common aliases for Emacs versions and package sets in Nixpkgs?",
    "answer": "The aliases `emacs` and `emacsPackages` provide a default `emacs<major><minor>` and `emacsPackages<major><minor>` version, respectively. Also, `emacs<major><minor>WithPackages` is an alias for `emacs<major><minor>Packages.emacsWithPackages`."
  }
]