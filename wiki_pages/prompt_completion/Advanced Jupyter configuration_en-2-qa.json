[
  {
    "question": "How do you install the Jupyter RSession proxy for RStudio Server integration?",
    "answer": "Once JupyterLab is installed in the new virtual environment, run `pip install --no-index jupyter-rsession-proxy`."
  },
  {
    "question": "Where can the RStudio application be found within JupyterLab after installation?",
    "answer": "In JupyterLab, you should see an RStudio application in the `Launcher` tab."
  },
  {
    "question": "How do you activate a Python virtual environment for JupyterLab after logging onto a cluster?",
    "answer": "You need to activate it again using the command: `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "How can you verify that your Python virtual environment for Jupyter is ready and list installed Jupyter packages?",
    "answer": "Run the command `pip freeze | grep jupyter` to get a list of installed `jupyter*` packages."
  },
  {
    "question": "How do you start a JupyterLab server on a national cluster?",
    "answer": "To start a JupyterLab server, you must submit an interactive job using `salloc`."
  },
  {
    "question": "What is an example command to start an interactive JupyterLab job?",
    "answer": "An example command is: `salloc --time=1:0:0 --ntasks=1 --cpus-per-task=2 --mem-per-cpu=1024M --account=def-yourpi srun $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "Why is an SSH tunnel necessary to connect to JupyterLab running on a compute node?",
    "answer": "An SSH tunnel is needed because compute nodes are not directly accessible from the internet."
  },
  {
    "question": "What Python package is recommended for creating an SSH tunnel from Linux or macOS to access JupyterLab?",
    "answer": "The `sshuttle` Python package is recommended for creating an SSH tunnel from Linux or macOS."
  },
  {
    "question": "How do you create an SSH tunnel from a Linux or macOS system using `sshuttle`?",
    "answer": "Open a new terminal and use the command: `sshuttle --dns -Nr <username>@<cluster>.computecanada.ca`."
  },
  {
    "question": "After creating an SSH tunnel from Linux or macOS, which URL should be used to access JupyterLab in a web browser?",
    "answer": "Copy and paste the first provided HTTP address from the `salloc` output into your web browser, such as `http://node_name.int.cluster.computecanada.ca:8888/lab?token=...`."
  },
  {
    "question": "What information do you need to extract from the JupyterLab URL when connecting from Windows?",
    "answer": "You need to extract the `hostname:port` and the `token` from the first provided HTTP address."
  },
  {
    "question": "How do you establish an SSH tunnel from Windows using MobaXTerm to access JupyterLab?",
    "answer": "Open a new Terminal tab in MobaXTerm and run `ssh -L 8888:<hostname:port> <username>@<cluster>.computecanada.ca`, replacing the placeholders with your specific values."
  },
  {
    "question": "After setting up an SSH tunnel with MobaXTerm on Windows, what address do you use in your web browser to access JupyterLab?",
    "answer": "Go to `http://localhost:8888/?token=<token>`, replacing `<token>` with the alphanumerical value extracted from the JupyterLab URL."
  },
  {
    "question": "How do you shut down the JupyterLab server before its walltime limit expires?",
    "answer": "Press `Ctrl-C` twice in the terminal where you launched the interactive job."
  },
  {
    "question": "How do you shut down an SSH tunnel if you created it using MobaXTerm?",
    "answer": "Press `Ctrl-D` to shut down the tunnel."
  }
]