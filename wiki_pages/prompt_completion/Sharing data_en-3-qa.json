[
  {
    "question": "What are Access Control Lists (ACLs) used for?",
    "answer": "Access Control Lists (ACLs) enable permissions to be set on a user-by-user basis, offering a more fine-grained approach than traditional Unix file permissions."
  },
  {
    "question": "Which commands are used to manage Access Control Lists (ACLs)?",
    "answer": "The two commands needed to manipulate extended permissions via ACLs are `getfacl` to see permissions and `setfacl` to alter them."
  },
  {
    "question": "How do you view the ACL permissions of a filesystem object?",
    "answer": "You can use the `getfacl` command to see the ACL permissions for a filesystem object."
  },
  {
    "question": "How can you grant a single person read and execute permission on a specific file using ACLs?",
    "answer": "To allow a single person with username `smithj` to have read and execute permission on the file `my_script.py`, use: `$ setfacl -m u:smithj:rx my_script.py`."
  },
  {
    "question": "How do you set default ACL rules for a subdirectory so that newly created files and directories inherit specific permissions for a user?",
    "answer": "To set default access rules for new data in a subdirectory, you can use: `$ setfacl -d -m u:smithj:rwX /home/<user>/projects/def-<PI>/shared_data`."
  },
  {
    "question": "How do you apply ACL rules recursively to an existing subdirectory and its current contents for a specific user?",
    "answer": "To apply ACL rules to an existing subdirectory and all its current content, you can use: `$ setfacl -R -m u:smithj:rwX /home/<user>/projects/def-<PI>/shared_data`."
  },
  {
    "question": "What does the `X` attribute signify in ACL permissions?",
    "answer": "The `X` attribute in ACLs sets the execute permission only when the item is already executable (either a directory or a file with the execute permission)."
  },
  {
    "question": "Why is the execute permission important for directories when using ACLs?",
    "answer": "A directory needs the execute permission to allow it to be browsed."
  },
  {
    "question": "What is a prerequisite for ACL sharing regarding directory ownership?",
    "answer": "The directory you are trying to share must be owned by you."
  },
  {
    "question": "What permissions are required on parent directories for ACL sharing to function correctly?",
    "answer": "Parent directories (and parents of parents, etc.) of the one you are trying to share must allow execute permission to the user you are trying to share with."
  },
  {
    "question": "When sharing a directory in the project filesystem, which path type should collaborators be given?",
    "answer": "When sharing a directory in the project filesystem, you must provide your collaborators with a path that starts with `/project`, not `/home/<user>/projects`."
  },
  {
    "question": "Why should collaborators use the `/project` path instead of `/home/<user>/projects` when accessing shared data?",
    "answer": "The `/home/<user>/projects` path contains symbolic links (symlinks) to physical directories in `/project`, and these symlinks will not be reachable by collaborators unless they also have access to your home directory."
  },
  {
    "question": "How can you find the physical path that a symbolic link points to?",
    "answer": "You can get the physical path a symlink points to using the `realpath` command, for example, `realpath /home/smithj/projects/def-smithj/shared_data`."
  },
  {
    "question": "Why might the physical path of a project directory need to be checked on different clusters?",
    "answer": "The physical path to a project directory is not the same on all clusters, so if you wish to share a project directory on more than one cluster, you should check its physical path with `realpath` on each cluster."
  },
  {
    "question": "How can you change the permissions of an existing file to remove group write and other read/execute permissions?",
    "answer": "You can use the `chmod` command as follows: `chmod g-w,o-rx <file>`."
  },
  {
    "question": "How can you recursively change the permissions of an entire directory to remove group write and other read/execute permissions?",
    "answer": "If you want to change permissions for a whole directory recursively, you can run: `chmod -R g-w,o-rx <directory>`."
  },
  {
    "question": "Does changing permissions on files or using ACLs imply that files were insecure in the past?",
    "answer": "No, restrictive access permissions have been set on home, project, and scratch directories since the beginning, and files could not be accessed by others unless execute permission was specifically granted to them on those folders."
  }
]