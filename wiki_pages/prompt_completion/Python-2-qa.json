[
  {
    "question": "How do you exit an active Python virtual environment?",
    "answer": "To exit a virtual environment, simply enter the command `deactivate`."
  },
  {
    "question": "What is the recommended way to reuse an existing virtual environment?",
    "answer": "Each time you want to use the same virtual environment, you should load the same environment modules that were loaded during its creation (e.g., `module load python scipy-stack`) and then activate the environment using `source ENV/bin/activate`."
  },
  {
    "question": "What is the purpose of the `pip` command in a virtual environment?",
    "answer": "The `pip` command is used for compiling and installing most Python packages and their dependencies once a virtual environment is loaded."
  },
  {
    "question": "Where can a comprehensive index of Python packages be found?",
    "answer": "A comprehensive index of Python packages can be found at PyPI (pypi.python.org/pypi)."
  },
  {
    "question": "Before installing packages in a virtual environment, what steps are necessary?",
    "answer": "First, load the Python interpreter using `module load python/X.Y` (e.g., `3.13`), and then activate the previously created virtual environment with `source ENV/bin/activate`."
  },
  {
    "question": "How do you install the latest stable version of Numpy within an activated virtual environment, preferring local packages?",
    "answer": "You can install Numpy using `pip install numpy --no-index`."
  },
  {
    "question": "What does the `--no-index` option do when using `pip install`?",
    "answer": "The `--no-index` option tells `pip` to install packages only from locally available sources (such as prebuilt Python wheels provided on the system), rather than from PyPI."
  },
  {
    "question": "Why is it recommended to use the `--no-index` option with `pip` when staff-provided wheels are available?",
    "answer": "It is strongly recommended because staff-compiled wheels can prevent issues with missing or conflicting dependencies and are optimized for the cluster's hardware and libraries."
  },
  {
    "question": "What happens if you omit the `--no-index` option during package installation?",
    "answer": "If you omit `--no-index`, `pip` will search both PyPI and local packages, and will install the latest version available. If PyPI has a newer version, it will be installed instead of the local wheel, potentially causing issues."
  },
  {
    "question": "When would you use the `--no-binary` option with `pip`?",
    "answer": "You would use the `--no-binary` option if you are certain you prefer to download a package from PyPI and compile it from source, rather than use any prebuilt packages, including wheels distributed through PyPI."
  },
  {
    "question": "How can you get more detailed information about where `pip` is installing a Python package from?",
    "answer": "You can use the `-vvv` option with the `pip` command to make it more verbose for diagnosing installation issues."
  },
  {
    "question": "What is the best practice for installing multiple Python packages to help resolve dependencies?",
    "answer": "It is advisable to install multiple packages with one command, as this helps `pip` resolve dependencies more effectively."
  },
  {
    "question": "Why might it be beneficial to create virtual environments inside your job on a compute node's local disk?",
    "answer": "Creating virtual environments inside your job on the compute node's local disk can serve as a workaround for slow parallel filesystems, making it faster than running from the parallel filesystem for single-node Python jobs and providing protection against some filesystem performance issues."
  },
  {
    "question": "For multi-node jobs, how does creating a node-local virtual environment affect accessibility?",
    "answer": "A node-local virtual environment is only accessible on the specific node where it was created, meaning this approach has to be done for each node in the job."
  },
  {
    "question": "What is the recommendation for creating virtual environments on Trillium clusters?",
    "answer": "On Trillium clusters, it is recommended to create virtual environments from a login node in your `HOME` directory and then source it in your job script."
  }
]