[
  {
    "question": "What is TensorFlow?",
    "answer": "TensorFlow is an open-source software library designed for Machine Intelligence."
  },
  {
    "question": "Where are custom Python wheels for TensorFlow stored on Alliance clusters?",
    "answer": "Custom Python wheels are stored in `/cvmfs/soft.computecanada.ca/custom/python/wheelhouse/`."
  },
  {
    "question": "How do you install TensorFlow using Python wheels?",
    "answer": "You use the `pip` command to install TensorFlow into a Python virtual environment."
  },
  {
    "question": "What is the first step to install TensorFlow 2.x in a virtual environment?",
    "answer": "Load the required Python module by running `module load python/3`."
  },
  {
    "question": "How do you create a new Python virtual environment for TensorFlow 2.x?",
    "answer": "You can create a new Python virtual environment by running `virtualenv --no-download tensorflow`."
  },
  {
    "question": "How do you activate a newly created Python virtual environment for TensorFlow?",
    "answer": "Activate the virtual environment by running `source tensorflow/bin/activate`."
  },
  {
    "question": "What command is used to install TensorFlow 2.8 in a virtual environment?",
    "answer": "Run `pip install --no-index tensorflow==2.8` within the activated virtual environment."
  },
  {
    "question": "Which module is required for TensorFlow 1.x installations?",
    "answer": "TensorFlow 1.x requires the `StdEnv/2018` module."
  },
  {
    "question": "Is TensorFlow 1.x available on the Narval cluster?",
    "answer": "No, TF 1.x is not available on Narval because `StdEnv/2018` is not available on that cluster."
  },
  {
    "question": "What modules should be loaded before installing TensorFlow 1.x?",
    "answer": "You should load `StdEnv/2018 python/3`."
  },
  {
    "question": "How do you install the CPU-only version of TensorFlow 1.x?",
    "answer": "Within an activated virtual environment, use the command `pip install --no-index tensorflow_cpu==1.15.0`."
  },
  {
    "question": "How do you install the GPU-enabled version of TensorFlow 1.x?",
    "answer": "Within an activated virtual environment, use the command `pip install --no-index tensorflow_gpu==1.15.0`."
  },
  {
    "question": "What should you avoid when installing TensorFlow 1.x packages?",
    "answer": "Do not install the `tensorflow` package without the `_cpu` or `_gpu` suffixes, as it has compatibility issues with other libraries."
  },
  {
    "question": "What is the prerequisite for using TensorFlow in R?",
    "answer": "You must first create a Python virtual environment and install TensorFlow in it, following the preceding instructions."
  },
  {
    "question": "What R packages need to be installed to use TensorFlow in R?",
    "answer": "You need to install `devtools` and then the `tensorflow` package from GitHub (`rstudio/tensorflow`) within R."
  },
  {
    "question": "Should `install_tensorflow()` be called in R if TensorFlow is already in a virtual environment?",
    "answer": "No, you should not call `install_tensorflow()` in R, as TensorFlow is already installed in your virtual environment with `pip`."
  },
  {
    "question": "How do you activate a Python virtual environment and then launch R?",
    "answer": "First, `source tensorflow/bin/activate`, then `R`."
  },
  {
    "question": "How do you use the TensorFlow installed in a virtual environment from within R?",
    "answer": "After activating the virtual environment and launching R, use `library(tensorflow)` and `use_virtualenv(Sys.getenv('VIRTUAL_ENV'))`."
  },
  {
    "question": "What command is used to submit a TensorFlow job with a GPU?",
    "answer": "You can submit a TensorFlow job by running `sbatch tensorflow-test.sh`."
  },
  {
    "question": "What resources does the example `tensorflow-test.sh` script request for a GPU job?",
    "answer": "It requests 1 GPU, 6 CPU cores per task, 32GB of memory, and a time limit of 3 hours."
  },
  {
    "question": "What does the `tensorflow-test.sh` script do before running the Python script?",
    "answer": "It loads the `cuda` and `cudnn` modules and activates the `tensorflow` virtual environment."
  },
  {
    "question": "Which GPU node type is highly recommended for large-scale deep learning research?",
    "answer": "Cedar's 'GPU large' node type is highly recommended, as it is equipped with 4 x P100-PCIE-16GB GPUs with GPUDirect P2P enabled."
  },
  {
    "question": "What is TensorBoard?",
    "answer": "TensorBoard is a suite of visualization tools that comes with TensorFlow, operating by reading TensorFlow events and model files."
  },
  {
    "question": "Where should TensorBoard not be run?",
    "answer": "TensorBoard requires too much processing power and should not be run on a login node."
  },
  {
    "question": "How should TensorBoard be executed within a job?",
    "answer": "It should be launched in the background within the same job as the TensorFlow process, for example: `tensorboard --logdir=/tmp/your_log_dir --host 0.0.0.0 --load_fast false & python train.py`."
  },
  {
    "question": "How do you find the hostname of the compute node running a TensorBoard server?",
    "answer": "You can use the `sq` command to list your jobs and find the value in the 'NODELIST' column for your TensorBoard job."
  },
  {
    "question": "How do you create an SSH connection to access TensorBoard from your local computer?",
    "answer": "Use the command `ssh -N -f -L localhost:6006:computenode:6006 userid@cluster.computecanada.ca`, replacing `computenode`, `userid`, and `cluster` with the appropriate values."
  },
  {
    "question": "What URL do you use in a web browser to access TensorBoard after establishing an SSH connection?",
    "answer": "You can access it at `http://localhost:6006`."
  }
]