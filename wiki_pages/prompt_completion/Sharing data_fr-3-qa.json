[
  {
    "question": "What is the purpose of the `setGID` bit for a directory?",
    "answer": "If the `setGID` bit is activated for a directory, new files and sub-directories created within it will inherit the group owner of that parent directory."
  },
  {
    "question": "How can you activate the `setGID` permission on a directory?",
    "answer": "You can activate the `setGID` permission using the command `chmod g+s <directory_name>`."
  },
  {
    "question": "How is the `setGID` permission displayed in the output of `ls -l`?",
    "answer": "When `setGID` is activated, the `x` (execute) permission for the group in the `ls -l` output changes to `s`. For example, `drwxrws---`."
  },
  {
    "question": "What is the difference between `s` (lowercase) and `S` (uppercase) when indicating the `setGID` permission?",
    "answer": "`s` indicates that `setGID` is active and the group also has execute permission. `S` indicates that `setGID` is active, but the group's execute permission has been removed."
  },
  {
    "question": "Does the `setUID` bit function on these clusters?",
    "answer": "No, the `setUID` bit is disabled on these clusters for security reasons."
  },
  {
    "question": "What does the `umask` attribute define?",
    "answer": "The `umask` attribute defines the default permissions for newly created files and directories on a Linux system."
  },
  {
    "question": "How do you display the current `umask` value in your session?",
    "answer": "You can display the current `umask` value using the command `umask -S`."
  },
  {
    "question": "What are the default permissions implied by `umask -S` on Graham?",
    "answer": "On Graham, `u=rwx,g=rx,o=` means that new files can be read, modified, and executed by the owner; read and executed by group members; and are not accessible to other users."
  },
  {
    "question": "Does changing the `umask` value affect existing files?",
    "answer": "No, the `umask` attribute only applies to new files; changing `umask` does not change the permissions of existing files."
  },
  {
    "question": "How can you define your `umask` attribute for a session or in your `.bashrc` file?",
    "answer": "You can define your `umask` using the command `umask <value>`, where `<value>` is an octal representation of the desired permissions."
  },
  {
    "question": "What permissions are set by a `umask` value of `077`?",
    "answer": "A `umask` value of `077` results in `u=rwx,g=,o=`, meaning files can only be read, modified, and executed by the owner."
  },
  {
    "question": "What does a `umask` value of `027` mean for file permissions?",
    "answer": "A `umask` value of `027` results in `u=rwx,g=rx,o=`, meaning files can be read and executed by the owner and group, but only modified by the owner."
  },
  {
    "question": "What permissions are applied with a `umask` value of `007`?",
    "answer": "A `umask` value of `007` results in `u=rwx,g=rwx,o=`, allowing the owner and group to read, modify, and execute files."
  },
  {
    "question": "If `umask` is set to `022`, what are the resulting permissions?",
    "answer": "A `umask` value of `022` results in `u=rwx,g=rx,o=rx`, allowing files to be read and executed by everyone, but modified only by the owner."
  },
  {
    "question": "What permissions does a `umask` value of `002` grant?",
    "answer": "A `umask` value of `002` results in `u=rwx,g=rwx,o=rx`, allowing files to be read and executed by everyone, and modified by the owner and group."
  },
  {
    "question": "Besides file permissions, what other conditions determine access to a file?",
    "answer": "Other conditions include having execution permission for all directories in the file's path, being a member of the file's group if group permissions are used, and access can also be determined by Access Control Lists (ACLs)."
  },
  {
    "question": "When was the `umask` attribute modified on Cedar, B\u00e9luga, and Niagara clusters?",
    "answer": "The `umask` attribute was modified on October 16, 2019, on Cedar, B\u00e9luga, and Niagara."
  },
  {
    "question": "How did the `umask` modification on Cedar, B\u00e9luga, and Niagara affect new file permissions?",
    "answer": "The `umask` change made permissions more restrictive for newly created files on these clusters."
  },
  {
    "question": "What was the `umask` value on B\u00e9luga and Cedar before October 16, 2019?",
    "answer": "Before October 16, 2019, the `umask` value on B\u00e9luga and Cedar was `002`."
  },
  {
    "question": "What was the `umask` value on Niagara before October 16, 2019?",
    "answer": "Before October 16, 2019, the `umask` value on Niagara was `022`."
  },
  {
    "question": "What is the current `umask` value for B\u00e9luga, Cedar, and Niagara since October 16, 2019?",
    "answer": "Since October 16, 2019, the `umask` value for B\u00e9luga, Cedar, and Niagara is `027`."
  },
  {
    "question": "How can you modify existing file permissions to match the new default `umask` settings for a single file?",
    "answer": "To make existing file permissions conform to the new defaults for a single file, you can use the command `chmod g-w,o-rx <file>`."
  },
  {
    "question": "How do you recursively apply permission changes to a directory and its contents to match the new default `umask` settings?",
    "answer": "To recursively modify permissions for a directory and its contents, use the command `chmod -R g-w,o-rx <directory>`."
  }
]