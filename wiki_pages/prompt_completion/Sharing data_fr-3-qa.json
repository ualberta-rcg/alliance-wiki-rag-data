[
  {
    "question": "What are the default permissions for newly created files on the clusters, as indicated by `umask -S`?",
    "answer": "The default permissions are `u=rwx,g=rx,o=`, meaning the owner has read, write, and execute; group members have read and execute; and other users have no access."
  },
  {
    "question": "Does changing the `umask` attribute affect permissions of existing files?",
    "answer": "No, the `umask` attribute only applies to new files and does not change the permissions of existing files."
  },
  {
    "question": "How can a user temporarily set their `umask` value for a session or persistently in their `.bashrc`?",
    "answer": "A user can define their `umask` using the command `umask <value>`, where `<value>` is an octal value, either in a session or their `.bashrc` file."
  },
  {
    "question": "What `umask` value would grant read, write, and execute permissions only to the file's owner?",
    "answer": "A `umask` value of `077` would grant `u=rwx,g=,o=` permissions, allowing only the owner read, write, and execute access."
  },
  {
    "question": "With a `umask` of `027`, what permissions do the owner, group, and others have on new files?",
    "answer": "With `umask 027`, the owner gets read, write, and execute (`rwx`), the group gets read and execute (`rx`), and others get no access (`o=`)."
  },
  {
    "question": "If a `umask` of `007` is applied, who can read, modify, and execute new files?",
    "answer": "With `umask 007`, the owner (`u=rwx`) and the group (`g=rwx`) can read, modify, and execute new files. Other users have no access."
  },
  {
    "question": "Which `umask` setting allows all users to read and execute files, but only the owner to modify them?",
    "answer": "A `umask` value of `022` sets permissions `u=rwx,g=rx,o=rx`, allowing all to read and execute, but restricting modification to only the owner."
  },
  {
    "question": "What `umask` value enables all users to read and execute files, while allowing modification by the owner and the group?",
    "answer": "A `umask` value of `002` sets permissions `u=rwx,g=rwx,o=rx`."
  },
  {
    "question": "What critical permission is required on all parent directories for a user to access a file within them?",
    "answer": "The user must have execution permission (`x`) for all directories in the file's path."
  },
  {
    "question": "How can existing file permissions be changed to remove write access for the group and read/execute for others?",
    "answer": "For a single file, use `chmod g-w,o-rx <file>`. For an entire directory recursively, use `chmod -R g-w,o-rx <directory>`."
  },
  {
    "question": "What is the primary limitation of traditional Unix filesystem permissions when sharing data with specific individuals?",
    "answer": "Traditional Unix permissions are limited to three categories (owner, group, others), making it difficult to grant specific access to an individual user who is not part of the file's primary group."
  },
  {
    "question": "What feature do national systems offer to overcome the limitations of traditional Unix permissions for sharing data?",
    "answer": "National systems offer Access Control Lists (ACLs), which provide lists of access rules per user."
  },
  {
    "question": "Which command is used to view the permissions defined in an Access Control List?",
    "answer": "The command `getfacl` is used to view ACL permissions."
  },
  {
    "question": "Which command is used to modify permissions within an Access Control List?",
    "answer": "The command `setfacl` is used to modify permissions within an ACL."
  },
  {
    "question": "How would you use `setfacl` to grant read and execute permissions to user 'smithj' for the file 'my_script.py'?",
    "answer": "The command would be `$ setfacl -m u:smithj:rx my_script.py`."
  },
  {
    "question": "In which specific directories are file access permissions typically restrictive for other users by default?",
    "answer": "Permissions are typically restrictive for other users in `/home`, `/project`, and `/scratch` directories unless explicit execute rights are granted."
  }
]