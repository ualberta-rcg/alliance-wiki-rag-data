[
  {
    "question": "What topics will this tutorial cover regarding HPC data handling?",
    "answer": "This tutorial will discuss issues in handling large amounts of data in HPC and various parallel I/O strategies for large-scale input/output with parallel jobs."
  },
  {
    "question": "Which specific parallel I/O tools and libraries will be described in this tutorial?",
    "answer": "The tutorial will specifically describe the use of MPI-IO and parallel I/O libraries such as NetCDF and HDF5."
  },
  {
    "question": "What computing environments are necessary for many modern problems?",
    "answer": "Many of today\u2019s problems require large parallel runs on large distributed-memory machines (clusters)."
  },
  {
    "question": "What are the three important I/O activities in large parallel calculations?",
    "answer": "The three important I/O activities are: reading initial datasets or conditions, writing application state for restarting (checkpointing), and storing results for follow-up runs or post-processing."
  },
  {
    "question": "What is checkpointing in the context of I/O activities?",
    "answer": "Checkpointing is when the application state needs to be written to a file for restarting the application in case of some kind of failure."
  },
  {
    "question": "According to Amdahl's law, what limits the speedup of a parallel program?",
    "answer": "Amdahl\u2019s law states that the speedup of a parallel program is limited by the time needed for the sequential fraction of the program."
  },
  {
    "question": "How does sequential I/O impact the performance of a parallel program?",
    "answer": "If the I/O part in the application works sequentially, the performance of the code will not be as great as desired, limiting speedup according to Amdahl's law."
  },
  {
    "question": "What is challenging about I/O, even with high-performance storage systems?",
    "answer": "Efficient I/O is challenging, even without stressing out a high-performance storage system."
  },
  {
    "question": "What is the formula for Total Execution Time?",
    "answer": "Total Execution Time = Computation Time + Communication Time + I/O time."
  },
  {
    "question": "What must be optimized to achieve the best performance in a program?",
    "answer": "All components of the Total Execution Time equation (Computation Time, Communication Time, and I/O time) must be optimized to get the best performance."
  },
  {
    "question": "How do individual load and store operations compare to individual arithmetic operations in terms of time consumption?",
    "answer": "Individual load and store operations are more time-consuming than individual arithmetic operations."
  },
  {
    "question": "What aspect of execution time is the primary focus of this article?",
    "answer": "This article focuses on cases where total execution time is dominated by I/O time."
  },
  {
    "question": "How do I/O-related systems typically perform in comparison to other components in HPC systems?",
    "answer": "In HPC systems, I/O-related systems are often slow as compared to other parts."
  },
  {
    "question": "What discrepancy in speed increases has been observed between storage and supercomputers from 1956-2014?",
    "answer": "From 1956 to 2014, storage speed increased by a little over 4 orders of magnitude, while from 1993 to 2014, top supercomputers' speed increased by over five orders of magnitude."
  },
  {
    "question": "Why is it crucial to pay special attention to data storage methods in HPC?",
    "answer": "It is crucial because supercomputers can produce data at a rate much, much faster than it can be stored, due to the discrepancy in relative speed increases."
  },
  {
    "question": "What does 'IOPs' stand for and what does it represent?",
    "answer": "'IOPs' means I/O operations per second, representing read/write operations, and is essentially an inverse of latency."
  },
  {
    "question": "How is 'I/O Bandwidth' defined?",
    "answer": "I/O Bandwidth is defined as the 'quantity you read/write'."
  },
  {
    "question": "What I/O performance can be expected from top-of-the-line SSDs on a PCI Express?",
    "answer": "Top-of-the-line SSDs on a PCI Express can achieve up to 1GB IOPs."
  },
  {
    "question": "Why are top-of-the-line SSDs on PCI Express not suitable for several hundreds terabyte supercomputing systems despite their high IOPs?",
    "answer": "They are not a right fit because the device is still very expensive."
  },
  {
    "question": "What are parallel filesystems optimized for?",
    "answer": "Parallel filesystems are optimized for efficient I/O by multiple users on multiple machines/nodes."
  },
  {
    "question": "Do parallel filesystems typically deliver 'supercomputing' performance in I/O?",
    "answer": "No, parallel filesystems do not typically result in 'supercomputing' performance in I/O."
  },
  {
    "question": "List the layers of the I/O software and hardware stack from bottom to top.",
    "answer": "The layers are: I/O Hardware, Parallel filesystem, I/O Middleware, High-end I/O library, and Application."
  },
  {
    "question": "What is the I/O hardware layer composed of?",
    "answer": "I/O hardware is a physical array or hard-disks attached to the cluster."
  },
  {
    "question": "Which open-source parallel filesystem is commonly used on national HPC systems?",
    "answer": "Lustre is an open-source parallel filesystem commonly run on most national systems."
  },
  {
    "question": "What is the primary purpose of a parallel filesystem?",
    "answer": "The purpose of the parallel filesystem is to maintain the logical partitions and provide efficient access to data."
  },
  {
    "question": "What role does I/O middleware play in the I/O stack?",
    "answer": "I/O middleware organizes access from many processes by optimizing two-phase I/O, disk I/O, and data flow over the network, and provides data sieving by converting small non-contiguous I/O requests into fewer/bigger requests."
  },
  {
    "question": "What are some examples of high-end I/O libraries?",
    "answer": "Examples of high-end I/O libraries include HDF5 and NetCDF."
  },
  {
    "question": "How do high-end I/O libraries function?",
    "answer": "High-end I/O libraries map application abstractions to storage abstractions in terms of the data structures of the code, storing data directly and efficiently to the disk."
  },
  {
    "question": "Which I/O middleware is part of the MPI-2 standard and is mentioned as a focus in this discussion?",
    "answer": "MPI-IO, which is a part of MPI-2, is the I/O middleware mentioned as a focus."
  },
  {
    "question": "Who decides whether to use a high-end I/O library or I/O middleware?",
    "answer": "The application, which is mostly the user's program, decides whether to use a high-end I/O library or I/O middleware."
  }
]