[
  {
    "question": "What is PGPROF used for?",
    "answer": "PGPROF is a powerful and simple tool for analyzing the performance of parallel programs written with OpenMP, MPI, OpenACC, or CUDA."
  },
  {
    "question": "What are the two profiling modes available in PGPROF?",
    "answer": "PGPROF offers two profiling modes: Command-line mode and graphical mode."
  },
  {
    "question": "What are the general steps for using PGPROF?",
    "answer": "Using PGPROF usually consists of two steps: Data collection (running the application with profiling enabled) and Analysis (visualizing the data produced in the first step)."
  },
  {
    "question": "In which modes can data collection and analysis be accomplished when using PGPROF?",
    "answer": "Both data collection and analysis steps can be accomplished in either command-line mode or graphical mode."
  },
  {
    "question": "What is a prerequisite before starting profiling with PGPROF?",
    "answer": "Before you start profiling with PGPROF, the appropriate module needs to be loaded."
  },
  {
    "question": "How can you check which versions of the PGI compiler package are available for PGPROF?",
    "answer": "You can run `module avail pgi` to see versions available with loaded compiler, MPI, and CUDA modules, or `module -r spider '.*pgi.*'` for a comprehensive list."
  },
  {
    "question": "Which PGI versions were listed as available in December 2018?",
    "answer": "As of December 2018, the pgi/13.10 and pgi/17.3 versions were available."
  },
  {
    "question": "How do you load a specific version of the PGI compiler package, for example, version 17.3?",
    "answer": "You use the command `module load pgi/version`, for example, `module load pgi/17.3` for version 17.3."
  },
  {
    "question": "Which compilers should be used to compile code to get useful information from PGPROF?",
    "answer": "To get useful information from PGPROF, you first need to compile your code with one of the PGI compilers: `pgcc` for C, `pgc++` for C++, or `pgfortran` for Fortran."
  },
  {
    "question": "What flag might be necessary when compiling Fortran code for PGPROF?",
    "answer": "A source in Fortran may need to be compiled with the `-g` flag."
  },
  {
    "question": "How do you collect performance data for an application in PGPROF's command-line mode?",
    "answer": "In command-line mode, you use PGPROF to run the application and save the performance data in a file. For example, `pgprof -o a.prof ./a.out` saves data from `a.out` to `a.prof`."
  },
  {
    "question": "How do you visualize performance data in PGPROF's command-line mode?",
    "answer": "To visualize the performance data in command-line mode, you use the command `pgprof -i a.prof` where `a.prof` is the data file."
  },
  {
    "question": "Can data collected in command-line mode be analyzed in graphical mode?",
    "answer": "Yes, the data file collected in command-line mode can be analyzed in graphical mode using the 'File | Import' command."
  },
  {
    "question": "What categories of profiling results are typically shown in PGPROF's command-line analysis?",
    "answer": "The results are usually divided into several categories, such as GPU kernel execution profile, CUDA API execution profile, OpenACC execution profile, and CPU execution profile."
  }
]