[
  {
    "question": "How do you create and activate a virtual environment for each node in a multi-node job?",
    "answer": "To create and activate a virtual environment for each node, include the following in your job submission script: `srun --ntasks $SLURM_NNODES --tasks-per-node=1 bash << EOF\\nvirtualenv --no-download $SLURM_TMPDIR/env\\nsource $SLURM_TMPDIR/env/bin/activate\\npip install --no-index --upgrade pip\\npip install --no-index -r requirements.txt\\nEOF`"
  },
  {
    "question": "How do you activate the virtual environment on the master node in a multi-node job?",
    "answer": "After creating the virtual environments on all nodes, activate the one on the master node using: `source $SLURM_TMPDIR/env/bin/activate;`"
  },
  {
    "question": "How do you execute a Python script with the activated virtual environment across multiple nodes?",
    "answer": "Execute the script using `srun python myscript.py;` after activating the virtual environment on the master node."
  },
  {
    "question": "Where can I find a list of currently available Python wheels?",
    "answer": "The currently available wheels are listed on the 'Available Python wheels/fr' page or by using the `avail_wheels` command on the cluster."
  },
  {
    "question": "What information does the `avail_wheels` command display by default?",
    "answer": "By default, `avail_wheels` shows the most recent version of a package (unless a specific version is requested), versions compatible with the loaded Python module or active virtual environment, and versions compatible with your current CPU architecture and software environment (StdEnv)."
  },
  {
    "question": "How can I list Python wheels that contain 'cdf' in their name (case-insensitive)?",
    "answer": "You can list wheels containing 'cdf' by running the command: `avail_wheels \"*cdf*\"`."
  },
  {
    "question": "How do I list available wheels for a specific package, such as 'numpy'?",
    "answer": "You can list available wheels for a specific package by running: `avail_wheels numpy`."
  },
  {
    "question": "How can I list wheels for a particular version of a package, like NumPy version 1.23?",
    "answer": "You can list wheels for a specific version by using `avail_wheels numpy==1.23` or `avail_wheels numpy --version 1.23`."
  },
  {
    "question": "How do I list all available versions of a package using `avail_wheels`?",
    "answer": "To list all available versions of a package, use the `--all-version` option, for example: `avail_wheels \"*cdf*\" --all-version`."
  },
  {
    "question": "How can I filter the list of available wheels by a specific Python version, for example, Python 3.9?",
    "answer": "You can filter by Python version using the `--python` option, like so: `avail_wheels 'numpy<1.23' --python 3.9`."
  },
  {
    "question": "What does 'cp39' mean in the 'python' column of the `avail_wheels` output?",
    "answer": "`cp39` signifies that the wheel is available for CPython 3.9."
  },
  {
    "question": "How can I check if the packages specified in a `requirements.txt` file are available as wheels?",
    "answer": "To check if the wheels are available from a `requirements.txt` file, use the command: `avail_wheels -r requirements.txt`."
  },
  {
    "question": "How can I list the packages from a `requirements.txt` file that are *not* available as wheels?",
    "answer": "To list the packages from a `requirements.txt` file that are not available, use the `--not-available` option: `avail_wheels -r requirements.txt --not-available`."
  },
  {
    "question": "What is the purpose of the `requirements.txt` file in the context of virtual environments?",
    "answer": "The `requirements.txt` file ensures that your virtual environment can be reproduced for other tasks by listing the exact packages and versions needed."
  },
  {
    "question": "What should I do if a required package is not available in the provided Python wheels?",
    "answer": "If a required package is not available in the provided Python wheels, you can pre-download it, or request it from technical support if you believe a wheel should be provided."
  }
]