[
  {
    "question": "What is EasyBuild?",
    "answer": "EasyBuild is a tool for building, installing, and maintaining software on high-performance computing systems."
  },
  {
    "question": "Where is EasyBuild primarily used in the context of this document?",
    "answer": "EasyBuild is used to build almost everything in their software repository, CVMFS."
  },
  {
    "question": "What is a key feature of EasyBuild regarding software availability?",
    "answer": "One of the key features of EasyBuild is that it automatically generates environment modules which can be used to make a software package available in your session."
  },
  {
    "question": "What kind of environment variables does EasyBuild define in addition to standard Linux ones?",
    "answer": "In addition to standard Linux environment variables such as PATH, CPATH, and LIBRARY_PATH, EasyBuild also defines some environment variables specific to EasyBuild."
  },
  {
    "question": "What EasyBuild-specific environment variables are particularly interesting to users?",
    "answer": "Two EasyBuild-specific environment variables that may be particularly interesting to users are `EBROOT<name>` and `EBVERSION<name>`."
  },
  {
    "question": "What information does the `EBROOT<name>` environment variable provide?",
    "answer": "`EBROOT<name>` contains the full path to the location where the software `<name>` is installed."
  },
  {
    "question": "What information does the `EBVERSION<name>` environment variable provide?",
    "answer": "`EBVERSION<name>` contains the full version of the software `<name>` loaded by this module."
  },
  {
    "question": "How can you view the EasyBuild-specific environment variables defined by a module like `python/3.10.2`?",
    "answer": "You can see the environment variables defined by the `python/3.10.2` module using: `module show python/3.10.2 | grep EB`."
  },
  {
    "question": "Where does EasyBuild store the installation recipe and logs for a software package?",
    "answer": "EasyBuild keeps a copy of the recipe used to install each software package, as well as a detailed log, inside the installation directory, accessible in the directory `$EBROOT<name>/easybuild`."
  },
  {
    "question": "Can EasyBuild be used to install software packages in a user's own account?",
    "answer": "Yes, EasyBuild can be used to install software packages in your own account."
  },
  {
    "question": "Why is it generally recommended to ask technical support for central software installation instead of using EasyBuild in your own account?",
    "answer": "It is preferable to ask technical support for central installation because it ensures the software package is available on all clusters, avoids using your quota, and prevents undue load on parallel filesystems."
  },
  {
    "question": "When might a user want to use EasyBuild to install software in their own space?",
    "answer": "Users may want to use EasyBuild to install software in their own space if they need a custom or modified build, a nightly build or a version without a release number, or if licensing reasons prevent central installation, such as for VASP and Materials Studio."
  },
  {
    "question": "For what reasons should you typically NOT install software packages in your own space?",
    "answer": "You should not install software packages in your own space if you need a different release version or a software package built using a different compiler, MPI, or CUDA implementation."
  },
  {
    "question": "What should you do if you are uncertain about installing software with EasyBuild in your own account?",
    "answer": "When in doubt, please ask our technical support for advice."
  },
  {
    "question": "What are EasyBuild recipes also known as?",
    "answer": "Recipes are also known as EasyConfig files."
  },
  {
    "question": "What information do EasyConfig files contain?",
    "answer": "EasyConfig files are text files containing the information EasyBuild needs to build a particular piece of software in a particular environment."
  },
  {
    "question": "What is the naming convention for EasyBuild recipe files?",
    "answer": "EasyBuild recipe files are named following a convention: `<name>-<version>-<toolchain name>-<toolchain version>.eb`."
  },
  {
    "question": "What is the most reliable way to obtain a working EasyBuild recipe?",
    "answer": "The surest way to get a recipe that works is to start from one of the recipes which we have installed."
  },
  {
    "question": "Where can users find existing EasyBuild recipes?",
    "answer": "Existing EasyBuild recipes can be found either in the software's installation folder (e.g., `$EBROOT<name>/easybuild`) or in the `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO` folder."
  }
]