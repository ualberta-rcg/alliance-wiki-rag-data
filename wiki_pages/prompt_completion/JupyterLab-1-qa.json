[
  {
    "question": "What is JupyterLab?",
    "answer": "JupyterLab is the recommended general-purpose user interface to use on a JupyterHub."
  },
  {
    "question": "What functionalities are available from a JupyterLab server?",
    "answer": "From a JupyterLab server, you can manage remote files and folders, and launch Jupyter applications like a terminal, Python 3 notebooks, RStudio, and a Linux desktop."
  },
  {
    "question": "Can users add their own kernels in JupyterLab?",
    "answer": "Yes, users can add their own 'kernels' which appear as application tiles. Configuration details can be found under 'Adding kernels'."
  },
  {
    "question": "What are the primary ways to launch JupyterLab?",
    "answer": "JupyterLab can traditionally be launched via JupyterHub, but more recently, sites have deployed Open OnDemand, which can also launch the interface."
  },
  {
    "question": "Is it recommended to install JupyterLab in a virtual environment for launching?",
    "answer": "No, it is not recommended to install JupyterLab yourself in a virtual environment, as you will not benefit from pre-configured applications."
  },
  {
    "question": "Which clusters offer a fully-featured JupyterLab interface via JupyterHub?",
    "answer": "Fir and Rorqual clusters offer a fully-featured JupyterLab interface via JupyterHub."
  },
  {
    "question": "Which clusters offer a fully-featured JupyterLab interface via Open OnDemand?",
    "answer": "The Nibi cluster offers a fully-featured JupyterLab interface via Open OnDemand."
  },
  {
    "question": "What is presented when you open JupyterLab on recent clusters?",
    "answer": "When you open JupyterLab in one of our most recent clusters, you will be presented with a dashboard pre-populated with several launchers."
  },
  {
    "question": "What are some of the default launchers found in a JupyterLab dashboard?",
    "answer": "Default launchers include Python 3.11, LibreQDA, Mate Desktop (VNC), OpenRefine, RStudio, VS Code, and XFCE4 Desktop (VNC)."
  },
  {
    "question": "How do new launchers appear in the JupyterLab dashboard?",
    "answer": "By loading modules, new launchers will appear in the dashboard."
  },
  {
    "question": "How can you close your session in JupyterLab?",
    "answer": "You can close your session through the 'File' menu by selecting either 'Hub Control Panel' or 'Log Out'."
  },
  {
    "question": "What is the purpose of the 'Hub Control Panel' option in the File menu?",
    "answer": "The 'Hub Control Panel' allows you to manually stop the JupyterLab server and its corresponding job on the cluster, which is useful for starting a new server with different resources."
  },
  {
    "question": "What happens when you select 'Log Out' from the File menu?",
    "answer": "Selecting 'Log Out' will end the session, which also stops the JupyterLab server and the corresponding job on the cluster."
  },
  {
    "question": "What is the function of the tool selector on the left side of the JupyterLab interface?",
    "answer": "The tool selector on the left side of the interface changes the content of the frame on the right."
  },
  {
    "question": "What is the purpose of the 'File Browser' tool in JupyterLab?",
    "answer": "The 'File Browser' is where you can browse your home, project, and scratch spaces, and also upload files."
  },
  {
    "question": "What does the 'Running Terminals and Kernels' tool allow you to do?",
    "answer": "The 'Running Terminals and Kernels' tool is used to stop kernel sessions and terminal sessions."
  },
  {
    "question": "When is the 'GPU Dashboards' tool accessible?",
    "answer": "The 'GPU Dashboards' tool is accessible if your job uses GPUs, providing access to resource monitoring options."
  },
  {
    "question": "What is the 'Software' tool used for in JupyterLab?",
    "answer": "The 'Software' tool is where you can load or unload available software modules in our environment."
  },
  {
    "question": "How do application icons relate to loaded software modules in JupyterLab?",
    "answer": "Depending on the modules loaded, icons directing to the corresponding Jupyter applications will appear in the 'Launcher' tab."
  },
  {
    "question": "How can you search for available software modules within the 'Software' tool?",
    "answer": "The search box in the 'Software' tool can search for any available module and show the result in the 'Available Modules' subpanel."
  },
  {
    "question": "How do you load a module from the 'Available modules' list in the Software tool?",
    "answer": "By clicking on a module's name, detailed information is displayed, and by clicking on the 'Load' link, the module will be loaded and added to the 'Loaded Modules' list."
  },
  {
    "question": "What happens when you click on icons in the status bar at the bottom of JupyterLab?",
    "answer": "Clicking on the icons in the status bar brings you to the 'Running Terminals and Kernels' tool."
  },
  {
    "question": "What access does JupyterLab provide in terms of prebuilt applications?",
    "answer": "JupyterLab offers access to a terminal, an IDE (Desktop), a Python console, and different options to create text and markdown files."
  },
  {
    "question": "Why are some applications available by default in JupyterLab?",
    "answer": "A number of software modules are loaded by default to provide access to those applications without any further actions."
  },
  {
    "question": "Is a Python kernel automatically loaded by default in JupyterLab?",
    "answer": "Yes, a Python kernel, with the default version, is automatically loaded, allowing you to start Python notebooks."
  },
  {
    "question": "How can you use a different version of Python than the default in JupyterLab?",
    "answer": "You can use a different version of Python by loading another version of the 'ipython-kernel' modules."
  },
  {
    "question": "Does the default Python environment in JupyterLab include many pre-installed packages?",
    "answer": "No, the default Python environment does not come with most pre-installed packages."
  },
  {
    "question": "How can you get additional features or packages for the Python environment in JupyterLab?",
    "answer": "You can load modules such as 'scipy-stack' for additional features, or install packages directly in a notebook's environment using `pip install --no-index package-name`."
  },
  {
    "question": "What is VS Code in the context of JupyterLab?",
    "answer": "VS Code (Visual Studio Code) is a code editor based on the open standard code-server, made available through a browser in JupyterLab."
  },
  {
    "question": "How long does a new VS Code session typically take to start up in JupyterLab?",
    "answer": "For a new session, the VS Code session can take up to 3 minutes to complete its startup."
  },
  {
    "question": "Can an active VS Code session be reopened after closing the browser tab?",
    "answer": "Yes, it is possible to reopen an active VS Code session after the web browser tab was closed."
  },
  {
    "question": "When does a VS Code session in JupyterLab end?",
    "answer": "The VS Code session will end when the JupyterLab session ends."
  },
  {
    "question": "What is LibreQDA?",
    "answer": "LibreQDA is an application for qualitative analysis, forked from Taguette, designed for text analysis."
  },
  {
    "question": "How long does it take for a new LibreQDA session to start?",
    "answer": "For a new session, the LibreQDA session can take up to 3 minutes to complete its startup."
  }
]