[
  {
    "question": "What are \"embarrassingly parallel\" problems?",
    "answer": "Embarrassingly parallel problems are those where the element C (the problem itself) counts for zero, meaning the additional cost of parallelization is non-existent."
  },
  {
    "question": "Can you give an example of an \"embarrassingly parallel\" problem?",
    "answer": "An example is the analysis of 500 different and independent files where a single number is generated and recorded in a vector, as operations don't require synchronization or communication."
  },
  {
    "question": "What characteristic leads to perfect scalability in an \"embarrassingly parallel\" program?",
    "answer": "The operations of different analysis processes do not need synchronization, and the processes do not need to communicate with each other, leading to perfect scalability regardless of the number of processes."
  },
  {
    "question": "What is the objective when applying strong scalability?",
    "answer": "The objective of strong scalability is to perform the same simulations more quickly by increasing the number of cores."
  },
  {
    "question": "What is the objective when applying weak scalability?",
    "answer": "The objective of weak scalability is to simulate larger or more detailed models without increasing the duration of execution."
  },
  {
    "question": "How is strong scalability defined?",
    "answer": "In strong scalability, the problem remains fixed while the number of cores increases."
  },
  {
    "question": "What is the ideal expectation for strong scalability?",
    "answer": "Ideally, one would expect linear scalability, meaning the decrease in execution time relative to the reference value would be reciprocal to the number of added cores."
  },
  {
    "question": "How is efficiency calculated for strong scalability?",
    "answer": "Efficiency is the ratio of the execution time with two cores to the execution time with 'n' cores, divided by 'n/2', and then multiplied by 100."
  },
  {
    "question": "What does 100% efficiency mean in the context of strong scalability?",
    "answer": "100% efficiency means that doubling the number of cores halves the execution time, indicating a linear level of parallel performance scalability."
  },
  {
    "question": "What is \"superlinear scaling\"?",
    "answer": "Superlinear scaling occurs when increasing from 2 to 4 cores results in an efficiency of more than 100%."
  },
  {
    "question": "Under what conditions does \"superlinear scaling\" typically occur?",
    "answer": "Superlinear scaling typically occurs when the cache functions more and more efficiently, and each core works less and less."
  },
  {
    "question": "What is the recommended efficiency target for strong scalability?",
    "answer": "An efficiency of 75% or more is to be preferred."
  },
  {
    "question": "Based on the provided strong scalability table, what is the recommended number of cores for tasks?",
    "answer": "The recommendation is to submit tasks on 16 cores, as it achieves an efficiency of 76.6%, which is above the preferred 75% threshold, and further increases in cores lead to diminishing returns."
  },
  {
    "question": "In the strong scalability example, what happens to execution time and efficiency when using 128 cores compared to 64 cores?",
    "answer": "With 128 cores, the execution time (238 seconds) is greater than with 64 cores (197 seconds), and the efficiency is low at 18%."
  },
  {
    "question": "How many control points are recommended for a strong scalability analysis?",
    "answer": "It is recommended to use at least 5 or 6 values for control points."
  },
  {
    "question": "When should one stop a strong scalability analysis?",
    "answer": "If you notice that the program slows down with the addition of cores, it is obviously unnecessary to continue the analysis beyond that number."
  },
  {
    "question": "How is weak scalability achieved?",
    "answer": "To achieve weak scalability, the size of the problem is increased proportionally to the addition of cores."
  },
  {
    "question": "What is the ideal outcome for weak scalability regarding execution time?",
    "answer": "The ideal outcome for weak scalability is for the execution time to remain stable."
  },
  {
    "question": "How can the size of a problem be characterized in weak scalability?",
    "answer": "The problem size can be characterized as the number of atoms for a molecular simulation or the number of cells or nodes of the mesh for a fluid dynamics simulation, depending on its nature."
  }
]