[
  {
    "question": "What is the purpose of resubmission from a job script?",
    "answer": "Resubmission from a job script is used for long-running computations that cannot be completed within the system's time limits, allowing the calculation to continue from a saved checkpoint."
  },
  {
    "question": "How does a job script manage to resubmit itself for long-running computations?",
    "answer": "A job script with resubmission capability runs a chunk of the calculation, saves a checkpoint, checks if the calculation is complete, and if not, submits a copy of itself to continue working before the allocated run-time elapses."
  },
  {
    "question": "What command is used to resubmit a job script from within itself?",
    "answer": "The command `sbatch ${BASH_SOURCE[0]}` is used to resubmit a job script from within itself."
  },
  {
    "question": "What kind of test should be used to determine if a follow-up job should be submitted in a resubmission script?",
    "answer": "The test to determine whether to submit a follow-up job (e.g., `work_should_continue`) should be a positive test."
  },
  {
    "question": "Why should the `work_should_continue` test in a job resubmission script be a positive test?",
    "answer": "The `work_should_continue` test should be a positive test to prevent the chain of jobs from continuing indefinitely and doing nothing useful if an unforeseen error arises that prevents a stopping condition from being met."
  },
  {
    "question": "What are some alternative terms for automating job submission for a large number of related calculations?",
    "answer": "This practice is sometimes called farming, serial farming, or task farming."
  },
  {
    "question": "What are the benefits of automating job submission through specialized tools?",
    "answer": "These tools automate the workflow and can improve computational efficiency by bundling many short computations into fewer tasks of longer duration."
  },
  {
    "question": "Which tools are available on the clusters for automating job submission?",
    "answer": "The available tools for automating job submission are META-Farm, GNU Parallel, and GLOST."
  },
  {
    "question": "What is the recommended approach for specifying a Slurm partition for jobs?",
    "answer": "It is recommended to allow the scheduler to assign a partition to your job based on the resources it requests, rather than specifying one manually."
  },
  {
    "question": "How should users configure software that automatically submits jobs and expects a partition to be specified?",
    "answer": "Users should configure such software to use `--partition=default`, which the script treats the same as not specifying a partition."
  },
  {
    "question": "What is the maximum job duration allowed on Beluga, Graham, and Narval clusters?",
    "answer": "On Beluga, Graham, and Narval, no jobs are permitted longer than 168 hours (7 days)."
  },
  {
    "question": "What is the limit on the number of jobs (queued and running) per user on Beluga, Graham, and Narval?",
    "answer": "There is a limit of 1000 jobs, queued and running, per user on Beluga, Graham, and Narval."
  },
  {
    "question": "What is the recommended minimum duration for production jobs on Beluga, Graham, and Narval?",
    "answer": "Production jobs on Beluga, Graham, and Narval should have a duration of at least an hour."
  },
  {
    "question": "What is a key restriction regarding job submission directories on the Cedar cluster?",
    "answer": "Jobs may not be submitted from directories on the /home filesystem on Cedar."
  },
  {
    "question": "What is the maximum job duration allowed on Cedar?",
    "answer": "The maximum duration for a job on Cedar is 28 days."
  },
  {
    "question": "Why are jobs not permitted to be submitted from the /home filesystem on Cedar?",
    "answer": "This restriction is in place to reduce the load on the /home filesystem and improve responsiveness for interactive work."
  },
  {
    "question": "How can you check if you are attempting to submit a job from the /home filesystem on Cedar?",
    "answer": "You can check by running the command `readlink -f $(pwd) | cut -d/ -f2`; if it returns `home`, you are not permitted to submit jobs from that directory."
  },
  {
    "question": "Where should files be transferred if a job needs to be submitted from a /home directory on Cedar?",
    "answer": "Files should be transferred from the /home directory to either a /project or /scratch directory, and the job should be submitted from there."
  },
  {
    "question": "How is scheduling performed on the Niagara cluster?",
    "answer": "Scheduling on Niagara is done by node, in multiples of 40-cores."
  },
  {
    "question": "What is the maximum walltime for jobs on Niagara?",
    "answer": "Your job's maximum walltime on Niagara is 24 hours."
  },
  {
    "question": "Which directories must jobs write to on Niagara compute nodes?",
    "answer": "Jobs must write to your scratch or project directory, as the home directory is read-only on compute nodes."
  },
  {
    "question": "Do Niagara compute nodes have internet access?",
    "answer": "No, Niagara compute nodes do not have internet access."
  },
  {
    "question": "When should data be moved to Niagara for job submission?",
    "answer": "Data should be moved to Niagara before you submit your job, as compute nodes lack internet access."
  }
]