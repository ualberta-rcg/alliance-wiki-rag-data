[
  {
    "question": "What does AMS stand for?",
    "answer": "AMS stands for Amsterdam Modeling Suite."
  },
  {
    "question": "What was the previous name for AMS?",
    "answer": "The previous name for AMS was ADF (Amsterdam Density Functional)."
  },
  {
    "question": "Which software suite is AMS a part of?",
    "answer": "AMS is part of the SCM (Software for Chemistry and Materials) suite."
  },
  {
    "question": "What research areas does AMS support in computational chemistry?",
    "answer": "AMS offers powerful tools for research in computational chemistry, notably in catalysis (homogeneous and heterogeneous), inorganic chemistry, heavy element chemistry, biochemistry, and various types of spectroscopy."
  },
  {
    "question": "Which products are available in the SCM module?",
    "answer": "The available SCM module products include ADF, ADF-GUI, BAND, BAND-GUI, DFTB, ReaxFF, COSMO-RS, QE-GUI, and NBO6."
  },
  {
    "question": "Where is the `ams` module installed?",
    "answer": "The `ams` module is installed on Nibi."
  },
  {
    "question": "What are the licensing restrictions for AMS on Nibi?",
    "answer": "The AMS license on Nibi is owned by SHARCNET and is reserved for university computing centers; it cannot be used for consulting services or any other commercial purposes."
  },
  {
    "question": "How can users find the available versions of the `ams` module?",
    "answer": "Users can find the available versions by running the command `module spider ams`."
  },
  {
    "question": "How are jobs submitted on the clusters scheduled?",
    "answer": "Jobs submitted on the clusters are scheduled by Slurm."
  },
  {
    "question": "How many CPUs does the example AMS job script (`H2O_adf.sh`) request?",
    "answer": "The example AMS job script requests 32 CPUs on one node."
  },
  {
    "question": "What is the recommended practice for CPU allocation on Nibi?",
    "answer": "It is recommended to use a reasonable number of CPUs instead of an entire Nibi node, unless it's demonstrated that the task can efficiently use 192 CPUs."
  },
  {
    "question": "What account is specified in the example AMS job script (`H2O_adf.sh`)?",
    "answer": "The account specified in the example AMS job script is `def-pi`."
  },
  {
    "question": "How many nodes are requested in the example AMS job script (`H2O_adf.sh`)?",
    "answer": "The example AMS job script requests 1 node."
  },
  {
    "question": "How many tasks per node are requested in the example AMS job script (`H2O_adf.sh`)?",
    "answer": "The example AMS job script requests 32 tasks per node."
  },
  {
    "question": "What is the memory per CPU allocated in the example AMS job script (`H2O_adf.sh`)?",
    "answer": "The memory allocated per CPU in the example AMS job script is 3G."
  },
  {
    "question": "What is the requested time limit for the example AMS job (`H2O_adf.sh`)?",
    "answer": "The requested time limit for the example AMS job is 1 hour (00-01:00)."
  },
  {
    "question": "What is the name of the output log file for the example AMS job (`H2O_adf.sh`)?",
    "answer": "The output log file for the example AMS job is named `H2O_adf-%j.log`."
  },
  {
    "question": "What module is unloaded before loading AMS in the example job script (`H2O_adf.sh`)?",
    "answer": "The `openmpi` module is unloaded before loading AMS."
  },
  {
    "question": "Which specific AMS module version is loaded in the example script (`H2O_adf.sh`)?",
    "answer": "The `ams/2025.102` module is loaded in the example script."
  },
  {
    "question": "How is the temporary directory configured for AMS jobs in the example script (`H2O_adf.sh`)?",
    "answer": "The temporary directory for AMS jobs is set to `$SLURM_TMPDIR` to use the local disk."
  },
  {
    "question": "How is the AMS input script (`H2O_adf.run`) executed within the job script (`H2O_adf.sh`)?",
    "answer": "The AMS input script `H2O_adf.run` is executed using `bash`."
  },
  {
    "question": "Which executable should be used for AMS instead of ADF?",
    "answer": "You should use `$AMSBIN/ams` instead of `$ADFBIN/adf`."
  },
  {
    "question": "How is the AMS job name defined in the `H2O_adf.run` input script?",
    "answer": "The AMS job name is defined using `AMS_JOBNAME=H2O_adf` before invoking `$AMSBIN/ams`."
  },
  {
    "question": "What type of task is performed in the `H2O_adf.run` example?",
    "answer": "The `H2O_adf.run` example performs a `GeometryOptimization` task."
  },
  {
    "question": "What is the convergence criterion for geometry optimization gradients in the `H2O_adf.run` example?",
    "answer": "The convergence criterion for gradients in geometry optimization is `1e-4`."
  },
  {
    "question": "Which engine is specified in the `H2O_adf.run` input?",
    "answer": "The `ADF` engine is specified in the `H2O_adf.run` input."
  },
  {
    "question": "What basis set type is used in the ADF engine block of `H2O_adf.run`?",
    "answer": "The `TZP` basis set type is used in the ADF engine block."
  },
  {
    "question": "What exchange-correlation functional is specified for the ADF engine in `H2O_adf.run`?",
    "answer": "The `GGA PBE` exchange-correlation functional is specified for the ADF engine."
  },
  {
    "question": "What type of task is performed in the `SnO_EFG_band.run` example?",
    "answer": "The `SnO_EFG_band.run` example performs a `SinglePoint` task."
  },
  {
    "question": "What coordinate system is used for atomic positions in the `SnO_EFG_band.run` example?",
    "answer": "Fractional coordinates (`FractionalCoords True`) are used for atomic positions in the `SnO_EFG_band.run` example."
  },
  {
    "question": "What are the lattice vectors specified in the `SnO_EFG_band.run` example?",
    "answer": "The lattice vectors are (3.8029, 0.0, 0.0), (0.0, 3.8029, 0.0), and (0.0, 0.0, 4.8382)."
  },
  {
    "question": "Which engine is used in the `SnO_EFG_band.run` input?",
    "answer": "The `Band` engine is used in the `SnO_EFG_band.run` input."
  },
  {
    "question": "What is the title of the BAND calculation in the `SnO_EFG_band.run` example?",
    "answer": "The title of the BAND calculation is \"SnO EFG\"."
  },
  {
    "question": "What `NumericalQuality` setting is used in the BAND example script (`SnO_EFG_band.run`)?",
    "answer": "`NumericalQuality Basic` is used in the BAND example script, specified for speed."
  },
  {
    "question": "What `Tails` setting is used in the BAND example script (`SnO_EFG_band.run`)?",
    "answer": "`Tails bas=1e-8` is used in the BAND example script, specified for reproducibility with the number of cores."
  },
  {
    "question": "What specific property calculation is enabled in the BAND example script (`SnO_EFG_band.run`) related to nuclei?",
    "answer": "`PropertiesAtNuclei` is enabled, which is useful for Moessbauer spectroscopy to calculate density and Coulomb potential at nuclei."
  },
  {
    "question": "How is the Electric Field Gradient (EFG) calculation enabled in the BAND example (`SnO_EFG_band.run`)?",
    "answer": "The Electric Field Gradient (EFG) calculation is enabled by setting `EFG Enabled True`."
  },
  {
    "question": "What basis set and core treatment are specified for the BAND engine in `SnO_EFG_band.run`?",
    "answer": "A `DZ` basis set type and `none` core treatment are specified for the BAND engine."
  }
]