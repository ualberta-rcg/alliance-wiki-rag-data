[
  {
    "question": "Why is it important to choose appropriate parameter values when submitting jobs on a cluster?",
    "answer": "It ensures your job doesn't waste resources or create problems for other users and yourself, helps the job start more quickly, and finish correctly."
  },
  {
    "question": "What challenge do users face when submitting their first jobs on a cluster?",
    "answer": "It's difficult to estimate the required time or memory for a particular simulation or analysis."
  },
  {
    "question": "What happens if a job requests too many resources (time, memory, CPU cores, GPUs)?",
    "answer": "It becomes more difficult for the scheduler to find these resources, leading to a longer wait time in the queue."
  },
  {
    "question": "What happens if a job requests insufficient resources?",
    "answer": "The job can be stopped if it exceeds its time limit or memory limit."
  },
  {
    "question": "Why can estimating required resources based on a local computer be misleading?",
    "answer": "Processor type and speed can differ significantly between a local computer and a cluster, making local estimates misleading."
  },
  {
    "question": "What are some common reasons for compute tasks in a job script to waste resources?",
    "answer": "Reasons include the program not scaling well with the number of CPU cores, not being made for multiple node usage, or processors waiting after read-write operations."
  },
  {
    "question": "What is the recommended best approach for submitting initial jobs on a cluster?",
    "answer": "Start by submitting a few relatively small test jobs, requesting a standard amount of memory (e.g., `#SBATCH --mem-per-cpu=2G`) and time (e.g., one or two hours)."
  },
  {
    "question": "What is an ideal characteristic of test jobs?",
    "answer": "Ideally, you should already know what the answer will be in these test jobs, allowing you to verify that the software is running correctly on the cluster."
  },
  {
    "question": "What should you do if a test job finishes before its computation is complete?",
    "answer": "You should increase the duration by doubling it until the job's duration is sufficient."
  },
  {
    "question": "What does an 'OOM event' message in a job indicate, and what action should be taken?",
    "answer": "An 'OOM event' means the job ran out of memory, so you should try doubling the requested memory."
  },
  {
    "question": "What is the benefit of running test jobs?",
    "answer": "Test jobs help you gain familiarity with how long certain analyses require and how much memory is needed, enabling intelligent estimates for more realistic jobs."
  },
  {
    "question": "What is the minimum recommended duration for non-test jobs?",
    "answer": "For jobs which are not tests, the duration should be at least one hour."
  },
  {
    "question": "What should you do if your computation requires less than an hour?",
    "answer": "You should consider using tools like GLOST, META, or GNU Parallel to regroup several computations into a single Slurm job with a duration of at least an hour."
  },
  {
    "question": "Why should hundreds or thousands of very short jobs be avoided?",
    "answer": "Hundreds or thousands of very short jobs place undue stress on the scheduler."
  },
  {
    "question": "How important is the accuracy of your job duration estimate?",
    "answer": "It is equally important that your estimate of the job duration be relatively accurate."
  },
  {
    "question": "What is a negative consequence of overestimating job duration?",
    "answer": "Asking for five days when the computation finishes after sixteen hours leads to the job spending much more time waiting to start than it would with a more accurate estimate."
  },
  {
    "question": "How can you determine how long completed jobs took?",
    "answer": "Use monitoring tools, such as checking the `Job Wall-clock time` field in the output of the `seff` command."
  },
  {
    "question": "Which field in the `seff` command output indicates the actual duration a job took?",
    "answer": "The `Job Wall-clock time` field in the output of the `seff` command."
  },
  {
    "question": "By what percentage should you increase the estimated duration of a job as a buffer?",
    "answer": "Increase the estimated duration by 5% or 10%, just in case."
  },
  {
    "question": "What should be considered for jobs with a duration exceeding 48 hours?",
    "answer": "Longer jobs, such as those with a duration exceeding 48 hours, should consider using checkpoints if the software permits this."
  },
  {
    "question": "What is a checkpoint and what benefit does it provide for long-running jobs?",
    "answer": "A checkpoint allows a program to write a snapshot of its state to a diskfile, from which it can be restarted. This prevents losing much work due to power outages or interruptions if checkpoint files are written regularly (e.g., every six or eight hours)."
  },
  {
    "question": "What is the recommended Memory Efficiency for jobs, as shown by the `seff` command?",
    "answer": "Your `Memory Efficiency` in the output from the `seff` command should be at least 80% to 85% in most cases."
  }
]