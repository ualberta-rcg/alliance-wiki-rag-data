[
  {
    "question": "What is the primary purpose of this document regarding ParaView?",
    "answer": "This page describes remote visualization of your dataset residing on one of the Alliance's HPC clusters."
  },
  {
    "question": "What are the three main workflow scenarios for remote visualization with ParaView on the clusters?",
    "answer": "The three main workflow scenarios are 'Small-scale interactive' for smaller datasets, 'Large-scale interactive' using a client-server setup, and 'Batch production' for scripted, off-screen jobs."
  },
  {
    "question": "When is the 'Small-scale interactive' workflow recommended?",
    "answer": "The 'Small-scale interactive' workflow is recommended if your dataset is only a few GBs and you want to visualize it interactively using a small number of CPU cores via a remote desktop session (JupyterHub or Open OnDemand)."
  },
  {
    "question": "What characterizes the 'Large-scale interactive' workflow?",
    "answer": "The 'Large-scale interactive' workflow involves a client-server setup where the ParaView client runs on your computer, and the server runs in parallel inside a Slurm job on the HPC cluster, typically for larger datasets."
  },
  {
    "question": "What dataset size is considered 'large' for visualization on Trillium?",
    "answer": "On Trillium, a dataset of 50\u2013100 GB is considered 'large' to efficiently utilize all 192 cores when scheduling whole-node jobs."
  },
  {
    "question": "How do other clusters like Fir, Narval, Nibi, and Rorqual differ from Trillium in terms of scheduling for large datasets?",
    "answer": "On Fir, Narval, Nibi, and Rorqual, you can schedule by core, making it possible to visualize much smaller datasets \u2013 even on a single core \u2013 though using more cores in parallel speeds up rendering."
  },
  {
    "question": "What is the recommended approach for production visualizations, such as generating frames for a movie?",
    "answer": "Ideally, all production visualizations should be scripted and run as batch, off-screen jobs on the clusters, without opening interactive windows and rendering directly to files."
  },
  {
    "question": "Should H100 GPUs on the clusters be used for ParaView visualization?",
    "answer": "No, H100 GPUs should not be used for visualization as they are not optimized for graphics rendering and result in poor cluster utilization and slow rendering speeds."
  },
  {
    "question": "Why are H100 GPUs not suitable for graphics rendering?",
    "answer": "H100 cards utilize only 2 of the 66 on-board thread controllers for OpenGL and Vulkan applications, leading to roughly 3% GPU utilization and rendering speeds comparable to a mid-range laptop GPU."
  },
  {
    "question": "Can MIG instances run graphics APIs like OpenGL or Vulkan?",
    "answer": "No, MIG instances (static GPU partitions) cannot run graphics APIs such as OpenGL or Vulkan."
  },
  {
    "question": "If GPU rendering is absolutely necessary, which specific hardware options are recommended?",
    "answer": "If GPU rendering is absolutely necessary, Nibi's AMD MI300A nodes or older NVIDIA GPUs (e.g., T4) are recommended where available."
  },
  {
    "question": "Which clusters use JupyterLab for interactive visualization via remote desktop?",
    "answer": "Fir, Rorqual, and Narval use JupyterLab for interactive visualization via remote desktop."
  },
  {
    "question": "Which clusters use Open OnDemand for interactive visualization via remote desktop?",
    "answer": "Nibi and Trillium use Open OnDemand for interactive visualization via remote desktop."
  },
  {
    "question": "What is the initial step to launch a JupyterLab instance for single-core visualization on Fir, Rorqual, or Narval?",
    "answer": "The initial step is to sign in to JupyterHub on one of the clusters with your Alliance account."
  },
  {
    "question": "What settings are required in the JupyterHub Server Options form for single-core visualization?",
    "answer": "In the Server Options form, you must select a CPU account (not GPUs), set 'GPU configuration' to None, 'Number of Cores' to 1, specify the 'Time' and 'Memory' required, and select 'JupyterLab' for 'User interface', then press 'Start'."
  },
  {
    "question": "After the JupyterLab dashboard appears, what are the two ways to start ParaView for single-core visualization?",
    "answer": "You can either load 'boost/1.85.0' and 'paraview/6.0.0' modules and click the 'ParaView (VNC) button', or click your preferred 'Desktop' button, open a terminal, and type 'module load boost/1.85.0 paraview/6.0.0' followed by 'paraview'."
  }
]