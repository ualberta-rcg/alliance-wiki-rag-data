[
  {
    "question": "What is autoconf?",
    "answer": "Autoconf is a tool that belongs to the autotools suite, also known as the GNU build system, which automates the process of generating custom Makefiles."
  },
  {
    "question": "What is another name for the autotools suite?",
    "answer": "The autotools suite is also known as the GNU build system."
  },
  {
    "question": "What is the purpose of autoconf?",
    "answer": "Autoconf automates the process of generating custom Makefiles necessary to build a program on different systems, possibly with different compilers."
  },
  {
    "question": "What is the first step when building a program using autoconf?",
    "answer": "The first step when building a program with autoconf is to call the 'configure' script by running './configure'."
  },
  {
    "question": "What does the ./configure script do?",
    "answer": "The ./configure script verifies that compilers and other relevant software are installed with appropriate versions, and then generates a Makefile customized for your system."
  },
  {
    "question": "What command follows ./configure in the standard build process?",
    "answer": "After running ./configure, you typically call 'make'."
  },
  {
    "question": "What is the function of 'make install'?",
    "answer": "The 'make install' command installs the files at the right places."
  },
  {
    "question": "How can you install software for a single user rather than for all users of a server?",
    "answer": "To install software for a single user, you normally need to specify where to install your software, typically by using the '--prefix' option."
  },
  {
    "question": "What commands are used to install software into a custom directory like $HOME/SOFTWARE?",
    "answer": "You would use 'mkdir $HOME/SOFTWARE' and then 'make install --prefix=$HOME/SOFTWARE'."
  },
  {
    "question": "When might the --prefix option be supplied to ./configure instead of make install?",
    "answer": "In some cases, the '--prefix' option must be supplied to './configure' instead of to 'make install'."
  },
  {
    "question": "What is a basic command sequence for compiling and installing a program using autoconf to a custom location?",
    "answer": "A basic compilation of a program using autoconf can be as simple as './configure && make && make install --prefix=$HOME/SOFTWARE'."
  },
  {
    "question": "What might be useful to do after installing software to a custom location for a single user?",
    "answer": "You may also wish to create a module to show the system the paths to your newly installed software."
  },
  {
    "question": "How can you get a detailed list of all supported options for a configure script?",
    "answer": "You can run './configure --help' to get a detailed list of all supported options for a configure script."
  },
  {
    "question": "What is the purpose of the --prefix option in configure scripts?",
    "answer": "The '--prefix' option allows you to define the directory where the 'make install' command installs the application or library."
  },
  {
    "question": "How would you configure an application to install into a 'programs' subdirectory within your home directory?",
    "answer": "You could use the command './configure --prefix=$HOME/programs/'."
  },
  {
    "question": "How do configuration scripts typically allow enabling or disabling program features?",
    "answer": "Most configuration scripts allow enabling or disabling features using options generally of the type '--enable-feature' or '--disable-feature'."
  },
  {
    "question": "What are examples of feature options in advanced computing?",
    "answer": "Feature options often include parallelization using threads or using MPI, such as '--enable-mpi' or '--enable-threads'."
  },
  {
    "question": "How would you enable MPI parallelization when configuring a program?",
    "answer": "You would use the option '--enable-mpi', for example, './configure --enable-mpi'."
  },
  {
    "question": "How would you enable threads parallelization when configuring a program?",
    "answer": "You would use the option '--enable-threads', for example, './configure --enable-threads'."
  },
  {
    "question": "What is the general recommendation regarding '--with-...' options in autoconf?",
    "answer": "It is generally recommended to not use '--with-...' options and let autoconf find the parameters automatically."
  },
  {
    "question": "When might it be necessary to use '--with-...' options?",
    "answer": "It is sometimes necessary to specify some parameters using '--with-...' options."
  },
  {
    "question": "How can you specify the MPI directory when configuring with --enable-mpi?",
    "answer": "You could specify the MPI directory using an option like '--with-mpi-dir=$MPIDIR', for example, './configure --enable-mpi --with-mpi-dir=$MPIDIR'."
  },
  {
    "question": "How can you define the compiler and its options for a ./configure command?",
    "answer": "You can generally specify the compiler and its options by declaring variables after the './configure' command, like 'CC' for the C compiler and 'CFLAGS' for its options."
  },
  {
    "question": "What command would define 'icc' as the C compiler and '-O3 -xHost' as CFLAGS?",
    "answer": "You could run './configure CC=icc CFLAGS=\"-O3 -xHost\"'."
  },
  {
    "question": "What does the CFLAGS variable define?",
    "answer": "CFLAGS defines options to pass to the C compiler."
  },
  {
    "question": "What is the purpose of the CPPFLAGS variable?",
    "answer": "CPPFLAGS defines options to pass to the preprocessor and to C, C++, Objective C, and Objective C++ compilers."
  },
  {
    "question": "Which variable is used to pass options to the C++ compiler?",
    "answer": "CXXFLAGS is used to pass options to the C++ compiler."
  },
  {
    "question": "What is the function of the DEFS variable?",
    "answer": "DEFS allows the definition of a preprocessor macro."
  },
  {
    "question": "What does FCFLAGS specify?",
    "answer": "FCFLAGS specifies options to pass to the Fortran compiler."
  },
  {
    "question": "Which variable is for options to pass to the Fortran 77 compiler?",
    "answer": "FFLAGS is for options to pass to the Fortran 77 compiler."
  },
  {
    "question": "What are LDFLAGS used for?",
    "answer": "LDFLAGS are options to pass to the linker."
  },
  {
    "question": "What does the LIBS variable specify?",
    "answer": "LIBS specifies libraries to link."
  },
  {
    "question": "Where can one find a more exhaustive list of autoconf variables and options?",
    "answer": "A more exhaustive list of variables and typical options is available in the autoconf documentation."
  }
]