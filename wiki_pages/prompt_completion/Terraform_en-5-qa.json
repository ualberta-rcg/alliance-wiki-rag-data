[
  {
    "question": "How do you allocate a floating IP in Terraform for OpenStack?",
    "answer": "You declare an `openstack_networking_floatingip_v2` resource, specifying the `pool` from which to allocate the IP, for example, `pool = \"ext_net\"`."
  },
  {
    "question": "What Terraform resource is used to allocate a floating IP from an OpenStack pool?",
    "answer": "The `openstack_networking_floatingip_v2` resource is used to allocate a floating IP from a specified pool in OpenStack."
  },
  {
    "question": "After allocating a floating IP, how do you associate it with an existing OpenStack VM using Terraform?",
    "answer": "You define an `openstack_compute_floatingip_associate_v2` resource. In this resource, set `floating_ip` to reference the `address` attribute of the allocated floating IP (e.g., `openstack_networking_floatingip_v2.myvm_fip.address`), and `instance_id` to reference the `id` of the VM instance (e.g., `openstack_compute_instance_v2.myvm.id`)."
  },
  {
    "question": "What is the typical syntax for referencing attributes of other resources in Terraform configurations?",
    "answer": "References are typically structured as `<resource type>.<resource name>.<attribute>`."
  },
  {
    "question": "What is a critical consideration when adding a root volume to a VM using Terraform?",
    "answer": "Adding a root volume to a VM is a destructive operation that will replace its boot disk, meaning existing VMs might need to be rebuilt. It is crucial to read Terraform plans carefully before applying changes to avoid surprises."
  },
  {
    "question": "How is a root volume defined as part of an OpenStack compute instance in Terraform?",
    "answer": "A root volume is defined using a `block_device` subblock within the `openstack_compute_instance_v2` resource. Key attributes include `uuid` (of the image), `source_type`, `destination_type` (set to \"volume\"), `volume_size`, `boot_index`, and `delete_on_termination`."
  },
  {
    "question": "What specific attribute should be removed from the outer compute instance definition when using a `block_device` subblock to define a root volume?",
    "answer": "The `image_id` attribute should be removed from the outer compute instance definition."
  },
  {
    "question": "Why is it important to remove the `image_id` attribute from the main compute instance definition when booting from a volume via `block_device`?",
    "answer": "If the `image_id` attribute remains in the outer definition, Terraform might repeatedly detect a change from 'boot from volume' to 'boot directly from image' on subsequent runs, causing it to attempt to rebuild your instance every time."
  },
  {
    "question": "What does setting `destination_type = \"volume\"` in a `block_device` configuration imply?",
    "answer": "Setting `destination_type = \"volume\"` indicates that the boot disk will be stored with an OpenStack-provided volume rather than directly using disk space on the hypervisor."
  },
  {
    "question": "What is the recommended setting for `delete_on_termination` when defining a volume for an OpenStack VM, and why?",
    "answer": "For testing, `delete_on_termination` should probably be `true` to ensure volumes are cleaned up automatically. For real use, it should be considered `false` as a last defense against accidental deletion of resources."
  },
  {
    "question": "What post-creation steps are necessary after a VM is rebuilt by Terraform (e.g., due to adding a root volume)?",
    "answer": "After a rebuild, the VM will have a new SSH key, so you'll need to remove the old SSH key from your workstation's `known_hosts` file. Additionally, it's recommended to log into the VM and apply all available operating system updates (e.g., `sudo yum update -y`)."
  }
]