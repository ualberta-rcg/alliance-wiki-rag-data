[
  {
    "question": "How do you validate the local XML batch file for CESM?",
    "answer": "You can validate the XML batch file using the command `xmllint --noout --schema /path/to/CESM/cime/config/xml_schemas/config_batch.xsd ~/.cime/config_batch.xml`."
  },
  {
    "question": "Where can I find more documentation about CESM batch configuration parameters?",
    "answer": "Additional configuration parameters and examples can be found in the documentation at `https://esmci.github.io/cime/versions/maint-5.6/html/xml_files/cesm.html`."
  },
  {
    "question": "What file is used to configure local compilers for CESM?",
    "answer": "The file `~/.cime/config_compilers.xml` needs to be created and edited for local compiler configurations."
  },
  {
    "question": "What `CPPDEFS` flags are typically enabled for the `gptl` model in the `config_compilers.xml`?",
    "answer": "The `CPPDEFS` flags `-DHAVE_NANOTIME -DBIT64 -DHAVE_VPRINTF -DHAVE_BACKTRACE -DHAVE_SLASHPROC -DHAVE_COMM_F2C -DHAVE_TIMES -DHAVE_GETTIMEOFDAY` are typically enabled."
  },
  {
    "question": "What are the common paths and hints configured for NetCDF and PIO in the `config_compilers.xml` file?",
    "answer": "The `NETCDF_PATH` is set to `$ENV{NETCDF_FORTRAN_ROOT}`, `PIO_FILESYSTEM_HINTS` to `lustre`, and `PNETCDF_PATH` to `$ENV{PARALLEL_NETCDF_ROOT}`."
  },
  {
    "question": "What shared libraries (`SLIBS`) are appended in the `config_compilers.xml` for various clusters?",
    "answer": "The following `SLIBS` are appended: `-L$(NETCDF_PATH)/lib -lnetcdff -L$(NETCDF_C_ROOT)/lib -lnetcdf -L$(NETLIB_LAPACK_PATH)/lib/intel64 -lmkl -ldl`."
  },
  {
    "question": "How do you validate the local XML compiler file for CESM?",
    "answer": "You can validate the XML compiler file using the command `xmllint --noout --schema /path/to/CESM/cime/config/xml_schemas/config_compilers_v2.xsd ~/.cime/config_compilers.xml`."
  },
  {
    "question": "What directories need to be created before setting up a new CESM test case?",
    "answer": "You need to create the directories `$SCRATCH/cesm/inputdata` and `$SCRATCH/cesm/output`."
  },
  {
    "question": "How do you create a new CESM test case with a specific component set and resolution?",
    "answer": "Use the command `/path/to/CESM/cime/scripts/create_newcase --case test_case --compset IHistClm50Bgc --res f19_g17` to create a new case."
  },
  {
    "question": "After creating a new CESM case, what are the subsequent steps to set up and build it?",
    "answer": "You should change to the case directory (`cd test_case`), then run `./case.setup`, `./case.build`, and `./check_input_data --download`."
  },
  {
    "question": "What commands are used to preview and submit a CESM case?",
    "answer": "To preview the run, use `./preview_run`, and to submit it, use `./case.submit`."
  }
]