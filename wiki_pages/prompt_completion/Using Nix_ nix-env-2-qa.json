[
  {
    "question": "How can you install multiple software compositions like Git and Mercurial using `nix-env`?",
    "answer": "You can install multiple compositions by specifying their attribute paths in a single `nix-env --install --attr` command, for example: `nix-env --install --attr nixpkgs.git nixpkgs.mercurial`."
  },
  {
    "question": "Why might installing software with Nix be faster on subsequent attempts?",
    "answer": "Installing software with Nix can be much faster the second time because the software already exists in the local Nix store from previous installs, so Nix reuses it instead of downloading or building it again."
  },
  {
    "question": "What is the purpose of garbage collection in Nix?",
    "answer": "Nix's garbage collection periodically removes any software that is no longer accessible from any existing environments, helping to free up space."
  },
  {
    "question": "How does Nix reclaim storage space?",
    "answer": "Nix reclaims space by garbage collecting software that is no longer linked to any existing environments. Users must explicitly delete environments they no longer want to allow Nix to reclaim that space."
  },
  {
    "question": "How can you delete old Nix environments?",
    "answer": "You can delete old Nix environments using the `nix-env --delete-generations` command, specifying a duration like `30d` to remove environments older than 30 days, e.g., `nix-env --delete-generations 30d`."
  }
]