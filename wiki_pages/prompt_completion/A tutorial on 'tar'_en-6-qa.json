[
  {
    "question": "How do you extract multiple specific files from a `.tar` archive to a particular directory?",
    "answer": "You can use the `tar -C <destination_dir> --extract --file=<archive_name>.tar \"file1_full_path\" \"file2_full_path\" ...` command, specifying the full path for each file."
  },
  {
    "question": "What command extracts a specific file from a gzipped tar archive (`.tar.gz`) to a new directory?",
    "answer": "To extract a specific file from a `.tar.gz` archive to a new directory, use `tar -C ./new_results/ --extract -z --file=results.tar.gz results/Res-01/log.15Feb16.4` (replacing paths as needed)."
  },
  {
    "question": "How do you extract a specific file from a bzipped tar archive (`.tar.bz2`) to a new directory?",
    "answer": "To extract a specific file from a `.tar.bz2` archive to a new directory, use `tar -C ./new_results/ --extract -j --file=results.tar.bz2 results/Res-01/log.15Feb16.4` (replacing paths as needed)."
  },
  {
    "question": "How can you extract multiple files from a `.tar` archive using wildcards, such as all `.dat` files in a `results` directory, to a specified destination?",
    "answer": "You can use the command `tar -C ./new_results/ -xvf results.tar --wildcards \"results/*.dat\"` to extract files matching a wildcard pattern."
  },
  {
    "question": "How do you extract all files starting with 'log' from a directory within a tar archive to a specific destination?",
    "answer": "To extract files starting with 'log' from a specific directory within an archive, use `tar -C ./new_results/ -xvf results.tar --wildcards \"results/log*\"`."
  },
  {
    "question": "Do wildcard extractions work with compressed archives like `.tar.gz` or `.tar.bz2`?",
    "answer": "Yes, wildcard extractions are valid for compressed archives by including the `j` option for bzip2 or the `z` option for gzip."
  },
  {
    "question": "How do you list the contents of a `.tar` file without unpacking it?",
    "answer": "To list the contents of a `.tar` file without unpacking, use the `tar -t` command, for example, `tar -tf results.tar`."
  },
  {
    "question": "How can you list the contents of a `.tar` file and include metadata like permissions, date, and owner?",
    "answer": "To list the contents with metadata, add the `-v` (verbose) option to the list command, like `tar -tvf results.tar`."
  },
  {
    "question": "How do you count the number of files or entries within a `.tar` archive?",
    "answer": "You can count the number of entries by piping the output of `tar -tf results.tar` or `tar -tvf results.tar` to `wc -l`, for example: `tar -tvf results.tar | wc -l`."
  },
  {
    "question": "Why are file details not shown when `tar -tvf` output is piped to `wc -l`?",
    "answer": "The details of the files are not shown because the output of `tar -tvf` is filtered through `wc -l`, which only displays the number of lines, not their content."
  }
]