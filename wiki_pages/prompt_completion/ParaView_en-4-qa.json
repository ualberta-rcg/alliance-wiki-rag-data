[
  {
    "question": "How can I check the available versions of the ParaView module?",
    "answer": "You can show the available ParaView module versions by using the command `module spider paraview`."
  },
  {
    "question": "What command is used to display information about a specific ParaView module version, such as 5.11.0?",
    "answer": "To show how to load a specific version like 5.11.0, use the command `module spider paraview/5.11.0`."
  },
  {
    "question": "Which modules need to be loaded before starting ParaView 5.11.0, and what is the command to launch it?",
    "answer": "You need to load `StdEnv/2020`, `gcc/9.3.0`, `openmpi/4.0.3`, and `paraview/5.11.0` modules, then start ParaView by running `paraview`."
  },
  {
    "question": "What is a necessary step for running the most recent versions of ParaView?",
    "answer": "The most recent versions of ParaView require disabling the VirtualGL dynamic linker faker `LD_PRELOAD` by running the command `LD_PRELOAD=${LD_PRELOAD/libdlfaker.so/} paraview`."
  },
  {
    "question": "When is off-screen batch visualization recommended for ParaView?",
    "answer": "Off-screen batch visualization is strongly recommended for large-scale and automated visualization."
  },
  {
    "question": "How can one perform batch rendering with ParaView?",
    "answer": "ParaView supports Python scripting, allowing users to script their workflow and submit it as a regular, potentially parallel production job on a cluster."
  },
  {
    "question": "Where can users find help with ParaView Python scripting for batch rendering?",
    "answer": "For help with ParaView Python scripting, users should contact technical support."
  }
]