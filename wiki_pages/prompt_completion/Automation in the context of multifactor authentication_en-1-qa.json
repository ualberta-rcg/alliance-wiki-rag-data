[
  {
    "question": "Why can't automated workflows use a second authentication factor?",
    "answer": "Automated workflows involving an outside machine connecting to a cluster without human intervention cannot make use of a second authentication factor."
  },
  {
    "question": "What must you do to execute an automated workflow when multi-factor authentication (MFA) is required?",
    "answer": "You must request access to an automation node."
  },
  {
    "question": "What is a key characteristic of an automation node regarding authentication?",
    "answer": "An automation node does not require the use of a second authentication factor."
  },
  {
    "question": "How does an automation node differ from a regular login node?",
    "answer": "An automation node is much more limited than a regular login node in terms of the type of authentication it accepts and the types of actions it can be used to perform."
  },
  {
    "question": "Who should you contact to request access to an automation node?",
    "answer": "You should contact technical support to request access to an automation node."
  },
  {
    "question": "What information should be provided when requesting access to an automation node?",
    "answer": "When contacting technical support, you should explain in detail the type of automation you intend to use, what commands will be executed, and what tools or libraries you will be using to manage the automation."
  },
  {
    "question": "What is the only accepted authentication method for automation nodes?",
    "answer": "The only accepted means of authentication for automation nodes is through SSH keys uploaded to the CCDB."
  },
  {
    "question": "Are SSH keys stored in your `~/.ssh/authorized_keys` file accepted for automation nodes?",
    "answer": "No, SSH keys written in your `~/.ssh/authorized_keys` file are not accepted for automation nodes."
  },
  {
    "question": "What is the recommended practice for using SSH keys with automation nodes?",
    "answer": "It is recommended to follow the rule of 'one SSH key per use' and generate a new SSH key specifically for your automation workflow, without reusing it for interactive login."
  },
  {
    "question": "What is the purpose of the `restrict` SSH key constraint for automation nodes?",
    "answer": "The `restrict` constraint disables port forwarding, agent forwarding, X11 forwarding, and the pseudo teletype (PTY), blocking most interactive workloads, because automation nodes are not intended for long-running or interactive processes."
  },
  {
    "question": "What does the `from=\"pattern-list\"` SSH key constraint do?",
    "answer": "The `from=\"pattern-list\"` constraint specifies that the key can only be used from IP addresses that match the provided patterns, ensuring it is not used from unintended computers."
  },
  {
    "question": "What are the requirements for the IP address pattern in the `from` constraint?",
    "answer": "The pattern list must include only public IP addresses that fully specify at least the network class, the network, and the subnet (the first three elements of an IP address), for example, `x.y.z.*`."
  },
  {
    "question": "What is the function of the `command=\"COMMAND\"` SSH key constraint?",
    "answer": "The `command=\"COMMAND\"` constraint forces a specific command to be executed when the connection is established, allowing you to restrict which commands can be used with that key."
  },
  {
    "question": "Where can users find convenience wrapper scripts to use with the `command` constraint?",
    "answer": "Convenience wrapper scripts for the `command` constraint are defined in the `https://github.com/ComputeCanada/software-stack-custom/tree/main/bin/computecanada/allowed_commands` git repository."
  },
  {
    "question": "Which wrapper script allows file transfer commands like `scp`, `sftp`, or `rsync`?",
    "answer": "The `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/transfer_commands.sh` script allows only file transfer commands."
  },
  {
    "question": "What commands are allowed by the `slurm_commands.sh` wrapper script?",
    "answer": "The `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/slurm_commands.sh` script allows some Slurm commands, such as `squeue` and `sbatch`."
  },
  {
    "question": "Is there a single wrapper script that allows all common actions like file transfers, archiving, file manipulation, Git, and Slurm commands?",
    "answer": "Yes, the `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/allowed_commands.sh` script allows all of the common actions listed."
  }
]