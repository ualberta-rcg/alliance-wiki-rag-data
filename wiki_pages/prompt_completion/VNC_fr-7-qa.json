[
  {
    "question": "How can I manage software packages in my personal nix environment?",
    "answer": "Once the `nix` module is loaded, the `nix` and `nix-env` commands will be in your path to manage software packages in your personal `nix` environment."
  },
  {
    "question": "What is the first step to install software in a nix environment?",
    "answer": "To install a `nix` package in your environment, you should first open a terminal by clicking on the terminal icon in the top menu bar or by selecting \"Applications -> System Tools -> Terminal\"."
  },
  {
    "question": "How do I search for available software packages using nix?",
    "answer": "You can search for programs with the command `nix search <regexp>`."
  },
  {
    "question": "What command is used to install a software package via nix?",
    "answer": "To install a software package, you use the command `nix-env --install --attr <attribute>`."
  },
  {
    "question": "Can you provide an example of installing QGIS using nix?",
    "answer": "To install QGIS, you would use `nix search qgis` to find it, which shows `nixpkgs.qgis` as the attribute, then install it with `nix-env --install --attr nixpkgs.qgis`."
  },
  {
    "question": "Do I need to reinstall software every time I connect to my nix environment?",
    "answer": "No, your nix environment persists between your connections, so you only need to run the installation command once."
  },
  {
    "question": "How is OpenGL accelerated for applications installed using nix on gra-vdi?",
    "answer": "For OpenGL accelerated applications installed with nix on gra-vdi, the necessary adjustment to compiled binaries for preloading `vglfaker.so` from VirtualGL is performed automatically."
  },
  {
    "question": "What tool is suggested for manually adjusting binaries to pre-load `vglfaker.so` for OpenGL applications not installed via nix?",
    "answer": "For manually adjusting binaries, it is suggested to use `patchelf` to modify the final binary."
  },
  {
    "question": "How can I install `patchelf` in the nix environment?",
    "answer": "`patchelf` can be installed in nix with `nix-env --install --attr nixpkgs.patchelf` if it is not already on the system."
  },
  {
    "question": "How do I add the VirtualGL library `libvglfaker.so` to an OpenGL application using `patchelf`?",
    "answer": "After loading the nix module, you can add `/usr/lib64/VirtualGL/libvglfaker.so` to your application, for example, `~/.local/bin/myglapp`, using `patchelf --add-needed /usr/lib64/VirtualGL/libvglfaker.so ~/.local/bin/myglapp`."
  },
  {
    "question": "Is it possible to preload `vglfaker.so` using the `LD_PRELOAD` environment variable?",
    "answer": "Yes, it is possible to preload `vglfaker.so` via the environment variable `LD_PRELOAD`."
  },
  {
    "question": "Why is using `LD_PRELOAD` for `vglfaker.so` generally not recommended?",
    "answer": "It is generally not a good idea because it applies to all binaries without exception, and those requiring a different `vglfaker.so` than the one defined in `LD_PRELOAD` will fail."
  },
  {
    "question": "When can `LD_PRELOAD` be used safely for preloading `vglfaker.so`?",
    "answer": "`LD_PRELOAD` can be used safely in some cases within wrapper scripts."
  }
]