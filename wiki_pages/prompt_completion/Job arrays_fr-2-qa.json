[
  {
    "question": "What is the primary function of the `my_script.py` example?",
    "answer": "The `my_script.py` example performs calculations using `x` and iterates through a range of `beta` values defined by `np.linspace(10, 36.5, 100)` in a sequential loop, simulating a long execution with `time.sleep(2)`."
  },
  {
    "question": "How can the `my_script.py` task be adapted for parallel processing?",
    "answer": "The task can be processed using a job array (vecteur de t\u00e2ches) in SLURM to treat each value of the `beta` parameter in parallel."
  },
  {
    "question": "What key variable needs to be passed to the Python script for parallel execution with SLURM job arrays?",
    "answer": "The `SLURM_ARRAY_TASK_ID` environment variable needs to be passed to the Python script."
  },
  {
    "question": "How does `my_script_parallel.py` obtain the specific task ID for calculation?",
    "answer": "It obtains the task ID by reading the first command-line argument (`sys.argv[1]`), converting it to an integer (`i`), and then using `i` as an index to select a specific `beta` value from the `betas` NumPy array."
  },
  {
    "question": "What is the SLURM array range specified in the `data_parallel_python.sh` submission script?",
    "answer": "The SLURM array range specified is `--array=0-99`."
  },
  {
    "question": "Why is the SLURM array range `0-99` used in the `data_parallel_python.sh` script?",
    "answer": "The array range `0-99` is used because it corresponds to the indices of the NumPy array `betas = np.linspace(10,36.5,100)` in the Python script."
  },
  {
    "question": "What is the maximum time allocated for each individual task in the `data_parallel_python.sh` job array?",
    "answer": "Each task in the `data_parallel_python.sh` job array has a maximum time allocation of `1:00:00` (1 hour)."
  },
  {
    "question": "What software module is loaded before executing the Python script in `data_parallel_python.sh`?",
    "answer": "The `scipy-stack` module is loaded before executing the Python script."
  },
  {
    "question": "How is `my_script_parallel.py` executed within the `data_parallel_python.sh` SLURM script?",
    "answer": "It is executed using `python my_script_parallel.py $SLURM_ARRAY_TASK_ID`, passing the `$SLURM_ARRAY_TASK_ID` as a command-line argument to the Python script."
  }
]