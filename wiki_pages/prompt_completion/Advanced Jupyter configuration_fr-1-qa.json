[
  {
    "question": "What kind of tasks are Jupyter Lab and notebooks suitable for?",
    "answer": "Jupyter Lab and notebooks are suitable for brief interactive tasks like testing, debugging, or quickly visualizing data (a few minutes)."
  },
  {
    "question": "What should be used for longer data analyses instead of Jupyter Lab notebooks?",
    "answer": "For longer analyses, a non-interactive task with sbatch must be used."
  },
  {
    "question": "What is Project Jupyter?",
    "answer": "Project Jupyter is an open-source non-profit project, born in 2014 from the IPython Project, designed to allow all programming languages to be used for interactive data science and scientific computing."
  },
  {
    "question": "What is JupyterLab?",
    "answer": "JupyterLab is an interactive web development environment for notebooks, code, and data, whose flexible interface allows the configuration and use of workflows in data science, scientific computing, computational journalism, and machine learning. Its modular design allows for the addition of extensions that enrich its functionalities."
  },
  {
    "question": "Where should a JupyterLab server always be located?",
    "answer": "A JupyterLab server should always be located on a compute node or a cloud instance."
  },
  {
    "question": "Why are login nodes not recommended for running a JupyterLab server?",
    "answer": "Login nodes are not a good choice because they impose limits that can interrupt an application consuming too much CPU time or RAM."
  },
  {
    "question": "How can one obtain a compute node for JupyterLab?",
    "answer": "To obtain a compute node, you can reserve resources by submitting a task that requests a predetermined number of CPUs or GPUs, a certain amount of memory, and an execution time limit."
  },
  {
    "question": "What is the general method for installing JupyterLab?",
    "answer": "JupyterLab is installed using the `pip` command within a Python virtual environment."
  },
  {
    "question": "How do you load the default Python module before creating a virtual environment for JupyterLab?",
    "answer": "You load the default Python module with the command `module load python`."
  },
  {
    "question": "What module should be loaded first if you intend to use RStudio Server with JupyterLab?",
    "answer": "If you intend to use RStudio Server, you should first load `rstudio-server` with `module load rstudio-server python`."
  },
  {
    "question": "How do you create a new Python virtual environment for JupyterLab?",
    "answer": "You create a new Python virtual environment using `virtualenv --no-download $HOME/jupyter_py3`."
  },
  {
    "question": "How do you activate a newly created Python virtual environment?",
    "answer": "You activate the new virtual environment with `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "How do you install JupyterLab within an active Python virtual environment?",
    "answer": "You install JupyterLab by running `pip install --no-index --upgrade pip` followed by `pip install --no-index jupyterlab`."
  },
  {
    "question": "How do you create a wrapper script to automatically launch JupyterLab in the virtual environment?",
    "answer": "You create a wrapper script by running `echo -e '#!/bin/bash\\nunset XDG_RUNTIME_DIR\\njupyter lab --ip $(hostname -f) --no-browser' > $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "How do you make the JupyterLab wrapper script executable?",
    "answer": "You make the script executable with `chmod u+x $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "What is the purpose of extensions in JupyterLab?",
    "answer": "Extensions add functionalities and can modify the user interface of JupyterLab."
  },
  {
    "question": "What is Jupyter Lmod?",
    "answer": "Jupyter Lmod is an extension module allowing interaction with environment modules before launching kernels, using Lmod's Python interface to perform module-related tasks like loading, unloading, and saving collections."
  },
  {
    "question": "What are the commands to install and activate the Jupyter Lmod extension?",
    "answer": "The commands to install and activate Jupyter Lmod are `module load nodejs`, `pip install jupyterlmod`, and `jupyter labextension install jupyterlab-lmod`."
  }
]