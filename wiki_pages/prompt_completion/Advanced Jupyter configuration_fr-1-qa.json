[
  {
    "question": "What is the recommended use case for Jupyter Lab and notebooks?",
    "answer": "Jupyter Lab and notebooks are suitable for brief interactive tasks like testing, debugging, or quickly visualizing data (a few minutes)."
  },
  {
    "question": "What should be used for longer data analyses instead of Jupyter Lab notebooks?",
    "answer": "For longer analyses, a non-interactive task submitted with sbatch must be used."
  },
  {
    "question": "What is Project Jupyter?",
    "answer": "Project Jupyter is an open-source, non-profit project that emerged in 2014 from the IPython Project, designed to enable all programming languages for interactive data science and scientific computing."
  },
  {
    "question": "What is JupyterLab?",
    "answer": "JupyterLab is an interactive web development environment for notebooks, code, and data. Its flexible interface allows for the configuration and use of workflows in data science, scientific computing, computational journalism, and machine learning."
  },
  {
    "question": "Where should a JupyterLab server be located?",
    "answer": "A JupyterLab server should always be located on a compute node or a cloud instance."
  },
  {
    "question": "Why are login nodes not recommended for running a JupyterLab server?",
    "answer": "Login nodes are not a good choice because they impose limits that can interrupt an application that consumes too much CPU time or memory."
  },
  {
    "question": "How can one obtain a compute node for JupyterLab?",
    "answer": "You can obtain a compute node by reserving resources through submitting a task that requests a predetermined number of CPUs or GPUs, a certain amount of memory, and an execution time limit."
  },
  {
    "question": "How is JupyterLab installed according to these guidelines?",
    "answer": "JupyterLab is installed with the `pip` command in a Python virtual environment."
  },
  {
    "question": "What is the initial step for installing JupyterLab if you don't have a Python virtual environment?",
    "answer": "If you don't already have a Python virtual environment, create one, then activate it."
  },
  {
    "question": "Which module should be loaded first if you intend to use RStudio Server before creating a Python virtual environment?",
    "answer": "If you intend to use RStudio Server, load the `rstudio-server` module first, then `python`."
  },
  {
    "question": "How do you create a new Python virtual environment named 'jupyter_py3'?",
    "answer": "You can create a new Python virtual environment using `virtualenv --no-download $HOME/jupyter_py3`."
  },
  {
    "question": "How do you activate a Python virtual environment located at `$HOME/jupyter_py3`?",
    "answer": "Activate the virtual environment with `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "What commands are used to install JupyterLab in an activated virtual environment?",
    "answer": "First, run `pip install --no-index --upgrade pip`, then `pip install --no-index jupyterlab`."
  },
  {
    "question": "How do you create a wrapper script to automatically launch JupyterLab in the virtual environment?",
    "answer": "Create a wrapper script with the command `echo -e '#!/bin/bash\nunset XDG_RUNTIME_DIR\njupyter lab --ip $(hostname -f) --no-browser' > $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "What is the final step for the JupyterLab wrapper script after its creation?",
    "answer": "Finally, make the script executable with `chmod u+x $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "What is the purpose of installing extension modules in JupyterLab?",
    "answer": "Extension modules add functionalities and can modify the user interface of JupyterLab."
  },
  {
    "question": "What is Jupyter Lmod?",
    "answer": "Jupyter Lmod is an extension module that allows interaction with environment modules before kernels are launched, using the Python Lmod interface for tasks like loading, unloading, and saving module collections."
  },
  {
    "question": "What are the commands to install and activate the Jupyter Lmod extension?",
    "answer": "To install Jupyter Lmod, you need to run `module load nodejs`, then `pip install jupyterlmod`, followed by `jupyter labextension install jupyterlab-lmod`."
  }
]