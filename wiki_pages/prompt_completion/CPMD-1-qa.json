[
  {
    "question": "What is CPMD?",
    "answer": "CPMD is a plane wave/pseudo-potential DFT code for ab initio molecular dynamics simulations."
  },
  {
    "question": "Is registration required to access CPMD on their website?",
    "answer": "No, registration on the CPMD website is no longer needed."
  },
  {
    "question": "How do you gain access to CPMD on the clusters?",
    "answer": "Access to CPMD on the clusters is protected by a POSIX group. You need to send a support request to be added to this group."
  },
  {
    "question": "What modules are required to access CPMD centrally on the clusters?",
    "answer": "To access CPMD, you need to load `StdEnv/2020`, `intel/2020.1.217 openmpi/4.0.3`, and `cpmd/4.3`."
  },
  {
    "question": "Why might a user opt for a local installation of CPMD?",
    "answer": "Users might opt for a local installation because a response from CPMD admins for central installation support can take weeks or even months."
  },
  {
    "question": "Who can perform a local installation of CPMD?",
    "answer": "Registered CPMD users who have access to the CPMD source files can build the software themselves."
  },
  {
    "question": "What software environment is used for local CPMD installations?",
    "answer": "The EasyBuild software environment is used for local installations."
  },
  {
    "question": "How do you create the necessary local directory for CPMD source files?",
    "answer": "You can create the local directory using the command: `mkdir -p ~/.local/easybuild/sources/c/CPMD`."
  },
  {
    "question": "What types of files should be placed in the local CPMD source directory?",
    "answer": "All CPMD source tarballs and patches, such as `cpmd2cube.tar.gz`, `cpmd2xyz-scripts.tar.gz`, `cpmd-v4.3.tar.gz`, `fourier.tar.gz`, and various `patch.to.XXXX` files, should be placed in the `~/.local/easybuild/sources/c/CPMD` directory."
  },
  {
    "question": "What is the EasyBuild command to build CPMD 4.3 locally?",
    "answer": "The EasyBuild command is `eb CPMD-4.3-iomkl-2020a.eb --rebuild`."
  },
  {
    "question": "What does the `--rebuild` option do in the EasyBuild command for CPMD?",
    "answer": "The `--rebuild` option forces EasyBuild to ignore any centrally installed CPMD 4.3 and proceed with the installation in your `/home` directory."
  },
  {
    "question": "What should be done after a local CPMD installation is complete?",
    "answer": "After the software is installed, you should log out and log back in."
  },
  {
    "question": "How can a user verify that their local CPMD installation is being used?",
    "answer": "After logging back in, when you type `module load cpmd`, the software installed in your `/home` directory will be picked up. You can confirm this with `which cpmd.x`, which should show a path like `~/.local/easybuild/software/.../cpmd/4.3/bin/cpmd.x`."
  },
  {
    "question": "What files are required to run a CPMD job?",
    "answer": "To run a CPMD job, you will need an input file and access to the pseudo-potentials."
  },
  {
    "question": "How do you run a CPMD job in parallel if the input file and pseudo-potentials are in the same directory?",
    "answer": "The command to run the program in parallel is `srun cpmd.x <input files> > <output file>`."
  },
  {
    "question": "How do you run a CPMD job if the pseudo-potentials are in a different directory?",
    "answer": "You can run the program using the command `srun cpmd.x <input files> <path to pseudo potentials location> > <output file>`."
  },
  {
    "question": "What are the main sections of the example CPMD input file `1-h2-wave.inp`?",
    "answer": "The main sections of the example input file `1-h2-wave.inp` are `&INFO`, `&CPMD`, `&SYSTEM`, `&DFT`, and `&ATOMS`."
  },
  {
    "question": "What SLURM directives are included in the example CPMD job scripts?",
    "answer": "The example job scripts include `#SBATCH` directives for `--account`, `--nodes`, `--ntasks-per-node`, `--mem-per-cpu`, and `--time`."
  },
  {
    "question": "What modules are loaded in the example CPMD job scripts?",
    "answer": "The example job scripts load `StdEnv/2020`, `intel/2020.1.217 openmpi/4.0.3`, and `cpmd/4.3`."
  },
  {
    "question": "What are the default input and output filenames used in the example CPMD job scripts?",
    "answer": "The default input filename is `1-h2-wave.inp` (assigned to `CPMD_INPUT`) and the output filename is `1-h2-wave_output.txt` (assigned to `CPMD_OUTPUT`)."
  },
  {
    "question": "What is the URL for the CPMD home page?",
    "answer": "The CPMD home page is [https://www.cpmd.org/wordpress/](https://www.cpmd.org/wordpress/)."
  }
]