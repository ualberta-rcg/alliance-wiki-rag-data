[
  {
    "question": "What is parasail?",
    "answer": "parasail is a SIMD C (C99) library containing implementations of the Smith-Waterman (local), Needleman-Wunsch (global), and various semi-global pairwise sequence alignment algorithms."
  },
  {
    "question": "What is the difference in handling the parasail-python extension between StdEnv/2023 and StdEnv/2020?",
    "answer": "From StdEnv/2023 onwards, the parasail-python extension is bundled in the parasail module. However, with StdEnv/2020, the parasail module needs to be loaded for the Python extension to be installed in a virtual environment."
  },
  {
    "question": "How can I find the available versions of the parasail library?",
    "answer": "You can find the required versions by using the command `module spider parasail`."
  },
  {
    "question": "How do you load the parasail library module?",
    "answer": "You load the library using the command `module load parasail/2.6.2`."
  },
  {
    "question": "When using the `parasail_aligner` binary, what is an important setting to configure?",
    "answer": "It is important to set the number of threads according to the number of cores allocated in your job. We can set it with `parasail_aligner -t ${SLURM_CPUS_PER_TASK:-1} ...`."
  },
  {
    "question": "How can I discover compatible Python versions for the parasail module?",
    "answer": "To discover which are the compatible Python versions, run the command `module spider parasail/1.3.4`."
  },
  {
    "question": "What modules are required to use the parasail Python extension?",
    "answer": "The required modules are `parasail/2.6.2`, `python/3.11`, and `scipy-stack/2023b`."
  },
  {
    "question": "How do you import parasail 1.3.4 in a Python script?",
    "answer": "You can import it using the Python command `python -c \"import parasail\"`."
  },
  {
    "question": "How can you verify a successful import of parasail in Python?",
    "answer": "If the command `python -c \"import parasail\"` displays nothing, the import was successful."
  },
  {
    "question": "What is the purpose of the `parasail-sw.py` example script?",
    "answer": "The `parasail-sw.py` script runs a quick local alignment score comparison between BioPython and parasail."
  },
  {
    "question": "What modules are loaded in the `submit-parasail.sh` script for the Default StdEnv?",
    "answer": "The script loads `parasail/2.6.2`, `python/3.11`, and `scipy-stack/2023b`."
  },
  {
    "question": "How is Biopython installed within the virtual environment in the Default StdEnv job submission script?",
    "answer": "Biopython is installed using `pip install --no-index biopython==1.83` after creating and activating a virtual environment in `$SLURM_TMPDIR/env`."
  },
  {
    "question": "How do you identify available parasail wheels when using StdEnv/2020?",
    "answer": "You can identify available wheels by running the command `avail_wheel parasail`."
  },
  {
    "question": "What modules are loaded in the `submit-parasail.sh` script for StdEnv/2020?",
    "answer": "The script loads `StdEnv/2020`, `gcc`, `parasail/2.5`, and `python/3.10`."
  },
  {
    "question": "How are parasail and Biopython installed within the virtual environment in the StdEnv/2020 job submission script?",
    "answer": "They are installed using `pip install --no-index parasail==1.2.4 biopython==1.83` after creating and activating a virtual environment in `$SLURM_TMPDIR/env`."
  },
  {
    "question": "How do you submit the job script named `submit-parasail.sh`?",
    "answer": "You submit the job with the command `sbatch submit-parasail.sh`."
  },
  {
    "question": "How can you check the output of the completed Slurm job?",
    "answer": "The output will be in the Slurm output file, which can be viewed using `less slurm-*.out`."
  },
  {
    "question": "What are the expected scores for parasail and biopython from the example script's output?",
    "answer": "The expected output shows `parasail: 4000` and `biopython: 4000.0`."
  },
  {
    "question": "How does loading the parasail module assist with other Python packages that depend on parasail?",
    "answer": "Other Python packages that depend on parasail will have their requirement satisfied by loading the parasail module."
  },
  {
    "question": "How can you list installed Python packages and filter for parasail to verify its version?",
    "answer": "You can use the command `pip list | grep parasail`, which might show `parasail 1.3.4` as a result."
  }
]