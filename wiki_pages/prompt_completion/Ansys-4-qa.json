[
  {
    "question": "How do you export a data file from Ansys Fluent if you want to continue a previous calculation?",
    "answer": "You can export a \"data\" file by navigating to `File > Export > Data\u2026` within Fluent, or locate it directly in the project folder where it's typically named `FFF-1.dat.gz`."
  },
  {
    "question": "Where should Ansys Fluent case and data files be transferred on a cluster?",
    "answer": "The case and data files should be transferred to a directory on either the `/project` or `/scratch` filesystem on the cluster."
  },
  {
    "question": "Can Fluent files be renamed when transferring them to a cluster?",
    "answer": "Yes, you can save the file(s) with a more descriptive name during export or rename them once they are uploaded to the cluster."
  },
  {
    "question": "What is the primary purpose of a journal file in Ansys Fluent simulations?",
    "answer": "The purpose of a journal file is to load the case file (and optionally the data file), execute the solver, and then write out the simulation results."
  },
  {
    "question": "What is a recommended action if Fluent jobs frequently fail to start due to license shortages?",
    "answer": "If Fluent jobs frequently fail due to license shortages, you should consider modifying your script to requeue your job, up to 4 times, as described under the 'by node + requeue' tab."
  },
  {
    "question": "What is a potential risk of using job requeue functionality, and how can it be monitored?",
    "answer": "A potential risk is that requeuing can also occur for non-license related issues like divergence, leading to wasted compute time. It is strongly recommended to monitor and inspect each Slurm output file to confirm if each requeue attempt is license-related."
  },
  {
    "question": "How should you respond if a Fluent job is requeued due to a simulation issue rather than a license shortage?",
    "answer": "If a job is requeued due to a simulation issue, you should immediately manually kill the job progression using `scancel jobid` and then correct the underlying problem."
  },
  {
    "question": "How do you import a data file back into Fluent after a job has been run on the cluster?",
    "answer": "After the job has finished running, you can download the data file and then import it back into Fluent by selecting `File > Import > Data\u2026`."
  },
  {
    "question": "What type of Slurm script is generally recommended for most Ansys Fluent jobs to optimize performance?",
    "answer": "Most Fluent jobs should use a 'by node' script to minimize solution latency and maximize performance by utilizing as few nodes as possible."
  },
  {
    "question": "When might a 'by core' script be more beneficial for Fluent jobs?",
    "answer": "A 'by core' script might be more beneficial for very large Fluent jobs, as they could experience less waiting time in the queue."
  },
  {
    "question": "What are the potential drawbacks of running very large Fluent jobs across many nodes?",
    "answer": "Running very large jobs over many nodes can significantly increase startup time, offsetting benefits, and makes them far more vulnerable to crashing if any compute nodes fail during the simulation."
  },
  {
    "question": "How do Fluent scripts manage memory communication when running on a single node versus multiple nodes?",
    "answer": "Fluent scripts are designed to use shared memory for communication when running on a single node and distributed memory (utilizing MPI and HPC interconnect) when running across multiple nodes."
  },
  {
    "question": "What alternative is suggested if Fluent crashes during the initial auto mesh partitioning phase using standard Intel-based scripts on Narval?",
    "answer": "The 'narval' tabs offer a more robust alternative in the Slurm scripts if Fluent crashes during the initial auto mesh partitioning phase when using standard Intel-based scripts with the parallel solver."
  },
  {
    "question": "What is another strategy to address Fluent crashes during auto mesh partitioning, besides using specific Narval scripts?",
    "answer": "Another strategy is to manually perform the mesh partitioning within the Fluent GUI, then run the job again on the cluster with the Intel scripts, allowing for inspection of partition statistics and selection of an optimal partitioning method."
  },
  {
    "question": "What are the guidelines for optimal efficiency regarding mesh partitions and cells per core in Fluent?",
    "answer": "For optimal efficiency, the number of mesh partitions should be an integral multiple of the number of cores, and ensure there are at least 10,000 cells per core."
  },
  {
    "question": "What Slurm setting is used to specify the number of compute nodes in a 'Multinode (by node)' Fluent script?",
    "answer": "The `#SBATCH --nodes=1` line is used to specify the number of compute nodes, with a note that Narval has a maximum of 1 node for this configuration."
  },
  {
    "question": "Which module loads the Ansys Fluent software in the provided 'Multinode (by node)' script example?",
    "answer": "`module load ansys/2023R2` or newer versions load the Ansys Fluent software for clusters like Beluga, Cedar, Graham, and Narval."
  },
  {
    "question": "What are the `MYJOURNALFILE` and `MYVERSION` variables used for in the Fluent Slurm scripts?",
    "answer": "`MYJOURNALFILE` specifies the name of your journal file (e.g., `sample.jou`), and `MYVERSION` specifies the Fluent version (e.g., `2d`, `2ddp`, `3d`, or `3ddp`)."
  }
]