[
  {
    "question": "What are BLAS and LAPACK?",
    "answer": "BLAS (Basic Linear Algebra Subprogram) and LAPACK (Linear Algebra PACK) are two widely used libraries in high-performance computing for research, used for vector and matrix operations."
  },
  {
    "question": "What standard do BLAS and LAPACK define?",
    "answer": "They define a standard programming interface, which is a set of function definitions for calculations like the scalar product of two double-precision vectors or the product of two hermitian complex matrices."
  },
  {
    "question": "Are there alternative implementations of BLAS and LAPACK besides Netlib's reference?",
    "answer": "Yes, there are several other implementations available."
  },
  {
    "question": "How does the performance of BLAS/LAPACK implementations vary?",
    "answer": "The performance can vary significantly depending on the software used."
  },
  {
    "question": "Which library typically offers better performance with Intel processors for BLAS/LAPACK operations?",
    "answer": "The Intel Math Kernel Library (Intel MKL) is known to offer better performance with Intel processors in most situations."
  },
  {
    "question": "Is Intel MKL an open-source implementation?",
    "answer": "No, Intel owns this implementation."
  },
  {
    "question": "Which BLAS/LAPACK implementations are recommended for AMD processors?",
    "answer": "The OpenBLAS or BLIS implementations are recommended as their performance is better with AMD processors."
  },
  {
    "question": "What are two BLAS projects that are no longer maintained?",
    "answer": "Two projects that are no longer maintained are gotoblas and ATLAS BLAS."
  },
  {
    "question": "What problem arises when trying to select the most performant BLAS/LAPACK implementation?",
    "answer": "It usually requires recompiling a software to find the most performant implementation for a specific code and hardware, which is problematic for creating portable software environments across multiple clusters."
  },
  {
    "question": "How can the issue of recompiling for different BLAS/LAPACK implementations be resolved?",
    "answer": "By using FlexiBLAS, an abstraction layer that allows changing the BLAS and LAPACK implementation at runtime instead of during compilation."
  },
  {
    "question": "What was the previous recommendation for BLAS/LAPACK implementation on clusters with Intel processors?",
    "answer": "Intel MKL was recommended as the reference implementation."
  },
  {
    "question": "Why has the recommendation shifted to compiling with FlexiBLAS?",
    "answer": "The recommendation changed after the Narval cluster, which has AMD processors, was put into service."
  },
  {
    "question": "How is FlexiBLAS configured to achieve optimal performance on different processor types?",
    "answer": "The FlexiBLAS module is configured to use BLIS for AMD processors and Intel MKL for other processor types, which typically offers optimal performance."
  },
  {
    "question": "Is FlexiBLAS recognized by all systems by default?",
    "answer": "No, as FlexiBLAS is relatively recent, not all systems recognize it by default."
  },
  {
    "question": "How can a user configure their software to use FlexiBLAS during compilation?",
    "answer": "By configuring the linking options to include `-lflexiblas` for both BLAS and LAPACK, typically in a Makefile or as parameters to `configure` or `cmake`."
  },
  {
    "question": "Which CMake versions can automatically detect FlexiBLAS?",
    "answer": "CMake versions 3.19 and later can automatically find FlexiBLAS."
  },
  {
    "question": "What are the specific CMake module versions recommended for FlexiBLAS detection?",
    "answer": "To use a compatible CMake version, one can load the `cmake/3.20.1` or `cmake/3.21.4` module."
  },
  {
    "question": "What is the primary benefit of FlexiBLAS?",
    "answer": "Its main advantage is the ability to change the BLAS/LAPACK implementation at runtime by configuring the `FLEXIBLAS` environment variable."
  },
  {
    "question": "What BLAS/LAPACK implementations were available through FlexiBLAS as of January 2022?",
    "answer": "As of January 2022, the available implementations were `netlib`, `blis`, `imkl`, and `openblas`."
  },
  {
    "question": "How can one get a complete list of FlexiBLAS implementations?",
    "answer": "A complete list of available implementations can be obtained using the command `flexiblas list`."
  },
  {
    "question": "What is the default FlexiBLAS configuration on the Narval cluster?",
    "answer": "On Narval, `FLEXIBLAS=blis` is configured to use BLIS by default."
  },
  {
    "question": "What BLAS/LAPACK implementation is used by default on other clusters if `FLEXIBLAS` is not defined?",
    "answer": "Intel MKL is used by default on other clusters if `FLEXIBLAS` is not defined."
  }
]