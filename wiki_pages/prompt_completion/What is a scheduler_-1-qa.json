[
  {
    "question": "How do server environments typically differ from graphical user interfaces (GUIs) on computers?",
    "answer": "On servers, the environment is controlled by typing commands through a command line interface, unlike GUIs which use clicking windows, menus, and buttons."
  },
  {
    "question": "Why might a program not start immediately on a server?",
    "answer": "A program might be placed on a waiting list to ensure necessary CPU cores are available, preventing jobs from interfering with each other and causing performance loss."
  },
  {
    "question": "What is a job script?",
    "answer": "A job script is a small text file that specifies what program to run, where to get input, and where to put output for a computational task."
  },
  {
    "question": "What role does the scheduler play in running a job?",
    "answer": "The scheduler is a piece of software that receives the job script and decides when and where the job will run."
  },
  {
    "question": "Is there normally interaction between a user and a program while a job is running on a server?",
    "answer": "Normally, there is no interaction between the user and the program while the job is running, although users can check its progress."
  },
  {
    "question": "What is the purpose of lines starting with `#SBATCH` in a job script?",
    "answer": "Lines starting with `#SBATCH` are directives to the scheduler, providing information about the resources or requirements needed for the job to run, such as `--time=00:01:00` for one minute of run time."
  },
  {
    "question": "What are the main responsibilities of a job scheduler?",
    "answer": "A job scheduler's responsibilities include maintaining a database of jobs, enforcing policies on limits and priorities, ensuring resources are not overloaded (e.g., assigning one CPU core per job), deciding which jobs run on which compute nodes, launching them, and cleaning up after they finish."
  },
  {
    "question": "Which specific job scheduler is used on the clusters mentioned in the document?",
    "answer": "The Slurm Workload Manager is responsible for handling job scheduling on these clusters, and all examples provided are for Slurm."
  },
  {
    "question": "How do you request resources for a calculation using a job script?",
    "answer": "You use the job script to specify the resources needed, such as the requested 'time' and 'number of processors'."
  },
  {
    "question": "What resources are allocated by default for a job if not explicitly specified?",
    "answer": "By default, a job is allocated one processor and the example suggests a default time requested of one minute if not specifically given."
  },
  {
    "question": "What happens if a job requests less time or memory than it actually needs?",
    "answer": "If a job requests less than the calculation needs, it will be killed for exceeding the requested time or memory limit."
  },
  {
    "question": "What is the consequence of requesting more resources than a job actually needs?",
    "answer": "If a job requests more resources than it needs, it may wait longer than necessary before starting and will needlessly prevent others from using those resources once it is running."
  },
  {
    "question": "How do you submit a job script in Slurm?",
    "answer": "A job script can be submitted using the `sbatch` command, for example, `sbatch simple_job.sh`."
  },
  {
    "question": "What information is provided immediately after submitting a batch job with `sbatch`?",
    "answer": "Upon submission, `sbatch` prints a unique job ID, such as 'Submitted batch job 1234'."
  },
  {
    "question": "How can you check the status of your jobs in Slurm?",
    "answer": "You can check the status of your jobs by using the `sq` command and examining the 'ST' (Status) column in its output."
  },
  {
    "question": "What are the two most common job statuses shown in `sq` output?",
    "answer": "The two most common job statuses are 'PD' for pending and 'R' for running."
  },
  {
    "question": "When does a job no longer appear in the `sq` output?",
    "answer": "A job no longer appears in the `sq` output once it has finished."
  },
  {
    "question": "What is a job ID and how is it useful?",
    "answer": "A job ID is a unique identification number assigned to each submitted job. It is used to distinguish multiple jobs, even if they have the same name."
  },
  {
    "question": "What is the default filename for job output if not specified in the job script?",
    "answer": "By default, the output is placed in a file named `slurm-JOBID.out`, where 'JOBID' is the unique identification number assigned to the job."
  }
]