[
  {
    "question": "What information is typically included in a complete OpenStack provider specification in Terraform?",
    "answer": "A complete OpenStack provider specification includes `tenant_name`, `tenant_id`, `auth_url`, `user_name`, `password`, and `user_domain_name`."
  },
  {
    "question": "How can Terraform handle OpenStack credentials if some values are not specified directly in the provider configuration?",
    "answer": "Terraform supports partial credentials, allowing some values (e.g., password) to be left out of the configuration file and supplied via environment variables, such as `$OS_PASSWORD`."
  },
  {
    "question": "How do you configure the OpenStack provider in Terraform if you prefer to use a `clouds.yaml` file?",
    "answer": "If you prefer to use `clouds.yaml`, you specify `cloud` in the provider stanza, for example: `cloud = \"my_cloud\"`."
  },
  {
    "question": "What is required in the environment if the OpenStack provider definition in Terraform is left completely empty?",
    "answer": "If the OpenStack provider definition is completely empty, either `$OS_CLOUD` or the variables set by an appropriate RC file must be in the executing environment for Terraform to proceed."
  },
  {
    "question": "What is a key security consideration when storing OpenStack credentials in Terraform configurations?",
    "answer": "It is important to avoid storing credentials, especially passwords, in the Terraform configuration files, even on a personal workstation, to prevent security risks."
  },
  {
    "question": "What command is used to initialize Terraform and set up the OpenStack provider?",
    "answer": "The command `terraform init` is used to initialize Terraform and download the necessary provider plugins, such as the OpenStack provider."
  },
  {
    "question": "What actions does `terraform init` perform when executed?",
    "answer": "`terraform init` initializes the backend, checks for and downloads available provider plugins, and suggests version constraints for provider blocks in the configuration."
  },
  {
    "question": "Does `terraform init` verify OpenStack credentials?",
    "answer": "No, `terraform init` does not test the credentials because this operation doesn't actually try to connect to the defined provider."
  },
  {
    "question": "Why is it recommended to specify OpenStack flavors and images using their IDs rather than names in Terraform configurations?",
    "answer": "It is recommended to always specify flavors and images using their IDs because IDs are stable and will never change, whereas names can change, which could lead to Terraform detecting an updated ID and attempting to rebuild or resize the associated resource destructively."
  }
]