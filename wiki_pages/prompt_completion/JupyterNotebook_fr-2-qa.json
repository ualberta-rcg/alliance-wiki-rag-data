[
  {
    "question": "What is the purpose of `nbserverproxy` in Jupyter Notebook?",
    "answer": "`nbserverproxy` allows access to proxy web services started within a Jupyter server, especially those that only listen on a local port, such as TensorBoard."
  },
  {
    "question": "How do you install `nbserverproxy`?",
    "answer": "You install `nbserverproxy` by running `pip install nbserverproxy` followed by `jupyter serverextension enable --py nbserverproxy --sys-prefix` within your activated Jupyter virtual environment."
  },
  {
    "question": "How can you start a web service, such as TensorBoard, from within Jupyter Notebook?",
    "answer": "A web service can be started via 'Terminal' in the 'New' dropdown list in Jupyter. For example, you can use the command `tensorboard --port=8008`."
  },
  {
    "question": "How do you access a web service that was started using `nbserverproxy` in Jupyter Notebook?",
    "answer": "The service is accessible via `/proxy/` on the Jupyter Notebook server URL, for example, `https://address.of.notebook.server/user/theuser/proxy/8008`."
  },
  {
    "question": "What is the function of RStudio Launcher in Jupyter Notebook?",
    "answer": "RStudio Launcher enables Jupyter Notebook to start an RStudio session that uses Jupyter Notebook's token authentication and adds an 'RStudio Session' option to the 'New' dropdown list."
  },
  {
    "question": "Which software environments are required for RStudio Launcher to function?",
    "answer": "RStudio Launcher works exclusively with the `StdEnv/2016.4` and `StdEnv/2018.3` software environments."
  },
  {
    "question": "How do you install RStudio Launcher in Jupyter Notebook?",
    "answer": "To install RStudio Launcher, you need to install `nbserverproxy` and `nbrsessionproxy` via pip (e.g., `pip install nbserverproxy` and `pip install https://github.com/jupyterhub/nbrsessionproxy/archive/v0.8.0.zip`), then enable the `nbserverproxy` and `nbrsessionproxy` server extensions, and finally enable the `nbrsessionproxy` nbextension."
  },
  {
    "question": "How do you activate your Jupyter Notebook virtual environment after installation?",
    "answer": "First, load the appropriate Python module (e.g., `module load python/3.7`), then activate your virtual environment by running `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "What module needs to be loaded to use RStudio Launcher?",
    "answer": "To use RStudio Launcher, you need to load the RStudio Server module using the command `module load rstudio-server`."
  },
  {
    "question": "How do you launch Jupyter Notebook on a compute node?",
    "answer": "To launch Jupyter Notebook, you submit an interactive task. For instance, using `salloc` with resource specifications and then running your notebook script: `salloc --time=1:0:0 --ntasks=1 --cpus-per-task=2 --mem-per-cpu=1024M --account=def-yourpi srun $VIRTUAL_ENV/bin/notebook.sh`."
  },
  {
    "question": "Why is an SSH tunnel necessary to connect to Jupyter Notebook from a workstation?",
    "answer": "An SSH tunnel is required because compute nodes are not directly accessible from the internet, and it establishes a secure connection between the cluster and your workstation, allowing your web browser to access Jupyter Notebook."
  },
  {
    "question": "What is the recommended tool for creating an SSH tunnel to Jupyter Notebook from Linux or macOS X?",
    "answer": "The Python package `sshuttle` is recommended for creating an SSH tunnel from Linux or macOS X."
  },
  {
    "question": "How do you create an SSH tunnel using `sshuttle` on Linux or macOS X?",
    "answer": "Open a new terminal window on your workstation and execute the command `sshuttle --dns -Nr <username>@<cluster>.alliancecan.ca`."
  },
  {
    "question": "What tool is used to create an SSH tunnel to Jupyter Notebook from Windows?",
    "answer": "MobaXTerm is used to create an SSH tunnel from Windows."
  },
  {
    "question": "What are the steps to connect to Jupyter Notebook using MobaXTerm on Windows?",
    "answer": "1. In MobaXTerm, launch Jupyter Notebook in a first terminal tab to obtain the server URL (hostname:port and token). 2. Open a second terminal tab and execute `ssh -L 8888:<hostname:port> <username>@<cluster>.alliancecan.ca`. 3. In your browser, navigate to `http://localhost:8888/?token=<token>`, replacing `<token>` with the value obtained in the first step."
  }
]