[
  {
    "question": "What are the three classes of users that UNIX file permissions apply to?",
    "answer": "Permissions apply to three different classes of users: the owner (u), the group (g), and all others or the world (o)."
  },
  {
    "question": "What command is used to view the permissions associated with files and subdirectories in the current directory?",
    "answer": "To know which permissions are associated to files and subdirectories of the current directory, use the command `ls -la`."
  },
  {
    "question": "How do you identify the file type from the 10 characters at the beginning of an `ls -la` output line?",
    "answer": "The first character of the 10 characters at the beginning of each line indicates the file type. A hyphen (`-`) means a normal file, `d` means a directory, and `l` means a symbolic link."
  },
  {
    "question": "What do the characters `r`, `w`, and `x` represent in UNIX file permissions, and in what order are they shown?",
    "answer": "The characters `r` (read), `w` (write), and `x` (execute) represent the permissions. They are shown from left to right for the owner, then the group, and then other users."
  },
  {
    "question": "What does `drwxrwxrwx` signify for a directory's permissions?",
    "answer": "The permission string `drwxrwxrwx` indicates a world-readable and world-writable directory."
  },
  {
    "question": "Explain the permissions represented by `drwxr-xr-x`.",
    "answer": "The permissions `drwxr-xr-x` mean it's a directory that can be listed by everybody, but only the owner can add or remove files."
  },
  {
    "question": "What does the permission string `-rwxr-xr-x` tell you about a file?",
    "answer": "The string `-rwxr-xr-x` indicates a world-readable and world-executable file that can only be changed by its owner."
  },
  {
    "question": "What are the permissions `-rw-r--r--` for a file?",
    "answer": "This signifies a world-readable file that can only be changed by its owner."
  },
  {
    "question": "What does it mean if a file has `-rw-rw----` permissions?",
    "answer": "A file with `-rw-rw----` permissions can be read and changed by its owner and by its group."
  },
  {
    "question": "Describe a file with `-rw-------` permissions.",
    "answer": "A file with `-rw-------` permissions can only be read and changed by its owner."
  },
  {
    "question": "What is required in parent directories to be able to read or write in a subdirectory?",
    "answer": "To be able to read or write in a directory, you need to have execute permissions (`x`) set in all parent directories, all the way up to the filesystem's root (`/`)."
  },
  {
    "question": "Besides permissions, what other information does the `ls -la` command provide about files?",
    "answer": "After listing the permissions, the `ls -la` command gives a number, followed by the file owner's name, the file group's name, its size, last modification date, and name."
  },
  {
    "question": "Which command is used to change file permissions?",
    "answer": "The `chmod` command allows you to change file permissions."
  },
  {
    "question": "When using `chmod`, how do you specify the users you want to apply permissions to?",
    "answer": "You specify the list of users using `u` for the owner, `g` for the group, `o` for other users, and `a` for all three."
  },
  {
    "question": "How do you add or remove permissions with the `chmod` command?",
    "answer": "To add permissions, use `+`, and to remove permissions, use `-`."
  },
  {
    "question": "How would you prevent group members and all others from reading or modifying the file `secret.txt`?",
    "answer": "You would use the command `chmod go-rwx secret.txt`."
  },
  {
    "question": "What command allows everybody to read the file `public.txt`?",
    "answer": "The command `chmod a+r public.txt` allows everybody to read the file `public.txt`."
  },
  {
    "question": "How do you make the file `script.sh` executable for all users?",
    "answer": "To make `script.sh` executable for all users, use the command `chmod a+x script.sh`."
  },
  {
    "question": "What command allows group members to read and write in the directory `shared`?",
    "answer": "The command `chmod g+rwx shared` allows group members to read and write in the directory `shared`."
  },
  {
    "question": "How can you prevent other users from reading or modifying your home directory?",
    "answer": "To prevent other users from reading or modifying your home directory, use the command `chmod go-rw ~`."
  },
  {
    "question": "What command is used to view a file in read-only mode?",
    "answer": "To view a file read-only, use the `less` command (e.g., `less file_to_view`)."
  },
  {
    "question": "How can you navigate through a document when using the `less` command?",
    "answer": "You can use the arrow keys or the mouse wheel to navigate the document when using `less`."
  },
  {
    "question": "How do you search for text within a file while using the `less` command?",
    "answer": "You can search for something in the document by typing `/what_to_search_for`."
  },
  {
    "question": "How do you quit the `less` program?",
    "answer": "You can quit `less` by pressing the `q` key."
  },
  {
    "question": "What command allows you to compare two files?",
    "answer": "The `diff` command allows you to compare two files (e.g., `diff file1 file2`)."
  },
  {
    "question": "How can you show two files side-by-side when comparing them with the `diff` command?",
    "answer": "The `-y` option with `diff` shows both files side by side (e.g., `diff -y file1 file2`)."
  },
  {
    "question": "What command is used to search for a given expression within one or multiple files?",
    "answer": "The `grep` command allows you to look for a given expression in one file or multiple files."
  },
  {
    "question": "How do you search for the expression 'tata' in `file1` using `grep`?",
    "answer": "You would use the command `grep 'tata' file1`."
  },
  {
    "question": "What do the `*` and `?` wildcards represent in Linux when used with commands like `grep`?",
    "answer": "In Linux, the `*` wildcard matches zero or more characters, and the `?` wildcard matches exactly one character."
  }
]