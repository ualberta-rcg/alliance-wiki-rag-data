[
  {
    "question": "How do I reset my password for an Alliance national cluster?",
    "answer": "You can reset your password by visiting https://ccdb.computecanada.ca/security/forgot."
  },
  {
    "question": "When will I be able to reset my password for an Alliance national cluster?",
    "answer": "You will not be able to reset your password until your first role gets approved by our staff."
  },
  {
    "question": "Why can't I use Ctrl+C to copy text in the Linux terminal?",
    "answer": "In the Linux terminal, Ctrl+C means \"Cancel\" or \"Interrupt\" and is used to stop a running program, not to copy text."
  },
  {
    "question": "What key combinations can I use to copy and paste in most Windows and Linux terminal programs?",
    "answer": "You can use Ctrl+Insert to copy and Shift+Insert to paste in most cases under Windows and Linux."
  },
  {
    "question": "How do macOS users copy and paste in the terminal?",
    "answer": "Users of macOS can continue to use Cmd+C to copy and Cmd+V to paste."
  },
  {
    "question": "Are there other ways to copy and paste text in a Linux terminal depending on the software?",
    "answer": "Yes, depending on the terminal software, you may simply need to select the text to copy it into the clipboard, and then paste from the clipboard by using either the right-click or middle-click (the default setting can vary)."
  },
  {
    "question": "What problem can arise when using text files prepared in a Windows environment in a Linux environment?",
    "answer": "Text files prepared in a Windows environment will have an additional invisible \"carriage return\" character at the end of each line, which can cause problems when reading the file in a Linux environment."
  },
  {
    "question": "How can I avoid problems with text file line endings when working with Linux?",
    "answer": "You should either create and edit your text files on the cluster itself using standard Linux text editors like emacs, vim, and nano, or, if you prefer Windows, use the command `dos2unix <filename>` on the cluster login node to convert the line endings."
  },
  {
    "question": "Why does saving files in Emacs sometimes take several seconds on shared filesystems?",
    "answer": "Emacs uses the fsync system call when saving files to reduce the risk of data loss during a system crash, which provides extra reliability but can slow down saves on shared filesystems like `home`, `scratch`, or `project`."
  },
  {
    "question": "How can I improve Emacs file saving performance?",
    "answer": "You can add the line `(setq write-region-inhibit-fsync t)` to your `~/.emacs` file to increase performance."
  },
  {
    "question": "Where can I find more information about customizing save settings in Emacs?",
    "answer": "More information about this setting can be found at: https://www.gnu.org/savannah-checkouts/gnu/emacs/manual/html_node/emacs/Customize-Save.html."
  },
  {
    "question": "What are the quota types for scratch, home, and project filesystems on general purpose clusters?",
    "answer": "The scratch and home filesystems have per-user quotas, while the project filesystem has per-project quotas."
  },
  {
    "question": "Why is file group ownership important for quotas on Lustre filesystems?",
    "answer": "Because the underlying implementation of quotas on the Lustre filesystem is based on group ownership of files, it is important to ensure files have the correct group for quota purposes."
  },
  {
    "question": "What is the correct group for files on scratch and home filesystems?",
    "answer": "On the scratch and home filesystems, the correct group is typically the group with the same name as your username."
  },
  {
    "question": "What is the naming pattern for group names on the project filesystem?",
    "answer": "On the project filesystem, group names should follow the pattern `prefix-piusername` where `prefix` is typically one of `def`, `rrg`, or `rpp`."
  },
  {
    "question": "How do you move files between the scratch and home filesystems?",
    "answer": "You can move files between the scratch and home filesystems using the `mv` command, for example: `mv $HOME/scratch/some_file $HOME/some_file`."
  },
  {
    "question": "Should the `mv` command be used to move files from scratch or home to a project space?",
    "answer": "No, you should not use the `mv` command to move files from your scratch or home space into a project space."
  },
  {
    "question": "What commands are recommended for moving files from scratch or home to a project space?",
    "answer": "It is recommended to use the `cp` or `rsync` commands when moving files from scratch or home to a project space."
  },
  {
    "question": "What is important to ensure when copying or rsyncing files to a project space?",
    "answer": "It is very important to run `cp` and `rsync` correctly to ensure that the files copied over to the project space have the correct group ownership."
  },
  {
    "question": "Which `cp` option should not be used when moving files to a project space?",
    "answer": "When using `cp`, you should not use the archive `-a` option."
  },
  {
    "question": "What `rsync` options should be used when moving files from scratch or home to a project space?",
    "answer": "When using `rsync`, you should specify the `--no-g --no-p` options, for example: `rsync -axvH --no-g --no-p $HOME/scratch/some_directory $HOME/projects/<project>/some_other_directory`."
  }
]