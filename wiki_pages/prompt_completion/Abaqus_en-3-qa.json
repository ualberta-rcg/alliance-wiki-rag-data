[
  {
    "question": "How do you specify writing restart data every N time increments in an Abaqus input file?",
    "answer": "In the input file, specify `*RESTART, WRITE, OVERLAY, FREQUENCY=12` (replacing 12 with N)."
  },
  {
    "question": "How do you specify writing restart data for a total number of time increments?",
    "answer": "In the input file, specify `*RESTART, WRITE, OVERLAY, NUMBER INTERVAL=12, TIME MARKS=NO` (replacing 12 with the desired total number)."
  },
  {
    "question": "How can you check for completed restart information for Abaqus jobs using temporary directory scripts?",
    "answer": "Run the command `egrep -i \"step|start\" testst*.com testst*.msg testst*.sta`."
  },
  {
    "question": "What is the purpose of the `while sleep 6h; do ... done &` block in the temporary directory script?",
    "answer": "This block is used to periodically save data (copy files) from the temporary directory (`$SLURM_TMPDIR`) to the submission directory (`$SLURM_SUBMIT_DIR`) due to time limits."
  },
  {
    "question": "How is the Abaqus job's memory configured in the provided temporary directory script?",
    "answer": "The memory is set using `memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"`, which subtracts 3072MB from the total node memory."
  },
  {
    "question": "How can GPU usage be enabled for an Abaqus job in the temporary directory script?",
    "answer": "Uncomment the line `# gpus=$SLURM_GPUS_ON_NODE` in the script."
  },
  {
    "question": "What command line arguments are used to restart an Abaqus job with the temporary directory restart script?",
    "answer": "The `abaqus` command uses `job=testst2 oldjob=testst1 input=$SLURM_SUBMIT_DIR/mystd-sim-restart.inp`."
  },
  {
    "question": "What must the restart input file contain for a standard analysis job being restarted using a temporary directory restart script?",
    "answer": "The restart input file should contain `*HEADING` and `*RESTART, READ`."
  },
  {
    "question": "Who should use the multiple node computing scripts for Abaqus Standard Analysis?",
    "answer": "Users with large memory or compute needs and correspondingly large licenses should use these scripts."
  },
  {
    "question": "What type of parallelization do multiple node computing scripts use for Abaqus Standard Analysis?",
    "answer": "They use MPI-based computing."
  },
  {
    "question": "Are restart scripts available for multi-node Abaqus Standard Analysis jobs?",
    "answer": "No, a companion template script to perform restart of multi-node jobs is not provided due to additional limitations."
  },
  {
    "question": "How is the number of cores specified for a multi-node Abaqus job in the Slurm script?",
    "answer": "The number of cores is specified using `#SBATCH --ntasks=8`."
  },
  {
    "question": "How is memory per CPU specified for a multi-node Abaqus job in the Slurm script?",
    "answer": "Memory per CPU is specified using `#SBATCH --mem-per-cpu=4G`."
  },
  {
    "question": "Which environment variables are echoed in the multi-node Abaqus script to check license file paths?",
    "answer": "`LM_LICENSE_FILE` and `ABAQUSLM_LICENSE_FILE` are echoed."
  },
  {
    "question": "How does the multi-node Abaqus script for Standard Analysis determine the host list for MPI?",
    "answer": "It uses `slurm_hl2hl.py --format MPIHOSTLIST` to get the nodes and then constructs `mp_host_list` in `abaqus_v6.env`."
  }
]