[
  {
    "question": "What is the primary purpose of this document page?",
    "answer": "This page describes remote visualization of your dataset residing on one of the Alliance's HPC clusters using ParaView."
  },
  {
    "question": "What are the three main scenarios for remote visualization with ParaView on Alliance's HPC clusters?",
    "answer": "The three main scenarios are: visualizing small datasets interactively with a few CPU cores, interactively visualizing larger datasets using a client-server setup, and running production visualizations as scripted batch, off-screen jobs."
  },
  {
    "question": "How can I visualize a small dataset (a few GBs) interactively using ParaView on the clusters?",
    "answer": "You can visualize small datasets interactively by starting a remote desktop session through JupyterHub or Open OnDemand, depending on the cluster, and running ParaView inside it."
  },
  {
    "question": "What is the recommended approach for interactively visualizing larger datasets?",
    "answer": "For larger datasets, a client-server setup is recommended, where the ParaView client runs on your computer and the server runs in parallel inside a Slurm job on the HPC cluster."
  },
  {
    "question": "What is considered a 'large' dataset for Trillium when using a client-server setup?",
    "answer": "On Trillium, whole-node jobs in multiples of 192 cores are allowed, so a dataset of 50\u2013100 GB is considered 'large' to efficiently utilize all 192 cores."
  },
  {
    "question": "How do other clusters like Fir, Narval, Nibi, and Rorqual differ from Trillium regarding core scheduling for large datasets?",
    "answer": "On Fir, Narval, Nibi, and Rorqual, you can schedule by core, allowing visualization of much smaller datasets, even on a single core, though more cores speed up rendering."
  },
  {
    "question": "When should I use JupyterHub or Open OnDemand for visualization compared to a client-server configuration?",
    "answer": "JupyterHub or Open OnDemand is generally recommended for smaller datasets before attempting a more complex client-server configuration."
  },
  {
    "question": "What is the recommended workflow for production visualizations, such as generating movie frames?",
    "answer": "Production visualizations should ideally be scripted and run as batch, off-screen jobs on the clusters, rendering directly to files without opening interactive windows."
  },
  {
    "question": "How can I set up a ParaView Python script for a batch job?",
    "answer": "You should use the GUI workflows (small-scale or large-scale interactive) as initial steps to set up your visualization and then save it as a ParaView Python script, which can be executed as a batch job."
  },
  {
    "question": "Why should H100 GPUs not be used for visualization on the clusters?",
    "answer": "H100 GPUs are not optimized for graphics rendering, utilizing only about 3% of their capacity for OpenGL and Vulkan applications, resulting in poor cluster utilization and performance comparable to a mid-range laptop GPU."
  },
  {
    "question": "Can Multi-Instance GPU (MIG) instances be used for graphics APIs like OpenGL or Vulkan?",
    "answer": "No, MIG instances (static GPU partitions) cannot run graphics APIs such as OpenGL or Vulkan."
  },
  {
    "question": "If GPU rendering is absolutely necessary, which GPUs are recommended?",
    "answer": "If GPU rendering is absolutely necessary, it is recommended to use Nibi's AMD MI300A nodes or older NVIDIA GPUs (e.g., T4) where available."
  },
  {
    "question": "Which clusters use JupyterLab for small-scale interactive visualization?",
    "answer": "Fir, Rorqual, and Narval use JupyterLab for small-scale interactive visualization."
  },
  {
    "question": "Which clusters use Open OnDemand for small-scale interactive visualization?",
    "answer": "Nibi and Trillium use Open OnDemand for small-scale interactive visualization."
  },
  {
    "question": "What is the first step to launch a JupyterLab instance for single-core visualization?",
    "answer": "The first step is to sign in to JupyterHub on one of the clusters with your Alliance account."
  },
  {
    "question": "Which GPU configuration should be selected in the JupyterHub Server Options for visualization?",
    "answer": "Under 'GPU configuration', you should select 'None'."
  },
  {
    "question": "How many cores should be selected for single-core visualization via JupyterLab?",
    "answer": "Under 'Number of Cores', you should select '1'."
  },
  {
    "question": "After launching a JupyterLab session, what are two options to start ParaView for single-core visualization?",
    "answer": "One option is to load the 'boost/1.85.0' and 'paraview/6.0.0' modules and then click the 'ParaView (VNC) button'. Alternatively, you can open your preferred virtual desktop, launch a terminal, load the modules, and then type 'paraview'."
  }
]