[
  {
    "question": "How is a vector updated on the CPU and then synchronized to the GPU using OpenACC?",
    "answer": "First, the vector is updated on the CPU (e.g., `v.coefs[i]=val;`). Then, the `#pragma acc update device(v.coefs[:v.n])` directive is used to copy the updated data to the GPU."
  },
  {
    "question": "What observation is made regarding the performance of some tests with managed memory?",
    "answer": "Some tests show that managed memory can improve speed, which is probably due to pinned memory."
  },
  {
    "question": "When does data movement generally have a minor impact on performance?",
    "answer": "Generally, when most operations are performed on the GPU and data remains there for a long time, data movement does not have a major impact on performance."
  },
  {
    "question": "What OpenACC directives are recommended for an exercise on explicit data management?",
    "answer": "The exercise suggests using the `kernels` or `parallel loop` directives for explicit data management."
  },
  {
    "question": "How should compiler flags be modified to run code without managed memory according to the exercise?",
    "answer": "The compiler flags should be modified to `-ta=tesla` (non-managed) for the exercise."
  },
  {
    "question": "What should be checked after implementing explicit data management and changing compiler flags in the exercise?",
    "answer": "It should be verified if the results and performance are the same as before the changes."
  }
]