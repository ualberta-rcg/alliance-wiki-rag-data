[
  {
    "question": "Does a program need to terminate with a segmentation fault or other error for Valgrind to detect issues?",
    "answer": "No, it is not necessary for your program to terminate with a segmentation fault or other error for Valgrind to detect issues."
  },
  {
    "question": "Can Valgrind detect minor memory access problems that might otherwise go unnoticed?",
    "answer": "Yes, Valgrind can frequently detect minor memory access problems, such as reading a single element beyond the limits of an array, that might otherwise pass unnoticed."
  },
  {
    "question": "What type of memory problem does Valgrind refer to as 'Fuites de m\u00e9moire'?",
    "answer": "Valgrind refers to memory leaks as 'Fuites de m\u00e9moire'."
  },
  {
    "question": "What does a typical Valgrind error message for a memory leak look like?",
    "answer": "A typical Valgrind error message for a memory leak will resemble: `==2116== 100 bytes in 1 blocks are definitely lost in loss record 1 of 1 at 0x1B900DD0: malloc (vg_replace_malloc.c:131) by 0x804840F: main (in /home/cprogram/example1)`."
  },
  {
    "question": "What kind of issues does Valgrind detect under the category 'Utilisation non valide de pointeurs et d\u00e9passement de bornes'?",
    "answer": "Under 'Utilisation non valide de pointeurs et d\u00e9passement de bornes', Valgrind detects issues such as attempting to write to an unallocated pointer or outside the allocated memory bounds."
  },
  {
    "question": "How does Valgrind report an 'Invalid write of size' error?",
    "answer": "Valgrind reports an 'Invalid write of size' error with a message similar to: `==9814== Invalid write of size 1 at 0x804841E: main (example2.c:6) Address 0x1BA3607A is 0 bytes after a block of size 10 alloc'd at 0x1B900DD0: malloc (vg_replace_malloc.c:131) by 0x804840F: main (example2.c:5)`."
  },
  {
    "question": "What kind of problem is indicated by 'Utilisation de variables non initialis\u00e9es'?",
    "answer": "'Utilisation de variables non initialis\u00e9es' indicates that an uninitialized variable is being used."
  },
  {
    "question": "What error message does Valgrind display for the use of uninitialized variables?",
    "answer": "For the use of uninitialized variables, Valgrind displays an error message such as: `==17943== Conditional jump or move depends on uninitialised value(s) at 0x804840A: main (example3.c:6)`."
  }
]