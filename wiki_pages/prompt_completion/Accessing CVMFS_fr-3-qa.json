[
  {
    "question": "How do you test the CVMFS configuration?",
    "answer": "You can validate the configuration by running the command `sudo cvmfs_config chksetup`."
  },
  {
    "question": "What is the command to verify CVMFS repositories?",
    "answer": "To verify the CVMFS repositories, use the command `cvmfs_config probe`."
  },
  {
    "question": "What should be done first before testing CVMFS?",
    "answer": "Before testing, ensure that the repositories to be tested are included in `CVMFS_REPOSITORIES`."
  },
  {
    "question": "What should you do if you encounter problems during CVMFS testing?",
    "answer": "In case of problems, consult the debugging guide available at `https://cvmfs.readthedocs.io/en/stable/cpt-quickstart.html#troubleshooting`."
  },
  {
    "question": "How do you activate the CVMFS environment in your session?",
    "answer": "Once the CVMFS directory is mounted, activate the environment by sourcing the script `/cvmfs/soft.computecanada.ca/config/profile/bash.sh`."
  },
  {
    "question": "How can you load default modules for a specific computing cluster?",
    "answer": "To load default modules for a specific computing cluster, define the `CC_CLUSTER` variable (e.g., `export CC_CLUSTER=rorqual`) before sourcing the environment activation script."
  },
  {
    "question": "What are the possible values for the `CC_CLUSTER` variable?",
    "answer": "Possible values for `CC_CLUSTER` are `fir`, `nibi`, or `rorqual` for specific clusters, or `computecanada` by default."
  },
  {
    "question": "Under what condition will the environment activation command not execute?",
    "answer": "The command will not execute if your user ID is under 1000, as a security measure to prevent granting operating privileges."
  },
  {
    "question": "How can you temporarily force the activation of the CVMFS environment if your user ID is under 1000?",
    "answer": "You can temporarily force activation by defining the variable `FORCE_CC_CVMFS=1` using the command `export FORCE_CC_CVMFS=1`."
  },
  {
    "question": "How can you permanently force the activation of the CVMFS environment if your user ID is under 1000?",
    "answer": "To permanently force activation, create the file `$HOME/.force_cc_cvmfs` in your `/home` directory with the command `touch $HOME/.force_cc_cvmfs`."
  },
  {
    "question": "How can you prevent the CVMFS environment from activating in your session?",
    "answer": "You can prevent activation by defining `SKIP_CC_CVMFS=1` or by creating the file `$HOME/.skip_cc_cvmfs`."
  },
  {
    "question": "What is the purpose of the `CC_CLUSTER` environment variable?",
    "answer": "The `CC_CLUSTER` variable identifies the cluster, routes information to the system log, and defines behavior according to software licenses. Its default value is `computecanada`."
  },
  {
    "question": "What does the `RSNT_ARCH` environment variable identify?",
    "answer": "The `RSNT_ARCH` variable identifies the CPU instruction set for the system."
  },
  {
    "question": "How is `RSNT_ARCH` automatically detected?",
    "answer": "By default, `RSNT_ARCH` is automatically detected based on the information in `/proc/cpuinfo`."
  },
  {
    "question": "What are the possible values for `RSNT_ARCH`?",
    "answer": "The possible values for `RSNT_ARCH` are `sse3`, `avx`, `avx2`, or `avx512`."
  },
  {
    "question": "What is the `RSNT_INTERCONNECT` environment variable used for?",
    "answer": "The `RSNT_INTERCONNECT` variable identifies the type of network interconnect for the system."
  },
  {
    "question": "How is `RSNT_INTERCONNECT` automatically detected?",
    "answer": "`RSNT_INTERCONNECT` is automatically detected based on the presence of `/sys/module/opa_vnic` for OmniPath or `/sys/module/ib_core` for InfiniBand."
  },
  {
    "question": "What is the default fallback value for `RSNT_INTERCONNECT`?",
    "answer": "The default fallback value for `RSNT_INTERCONNECT` is `ethernet`."
  },
  {
    "question": "What are the possible values for `RSNT_INTERCONNECT`?",
    "answer": "The possible values for `RSNT_INTERCONNECT` are `omnipath`, `infiniband`, or `ethernet`."
  },
  {
    "question": "How does the `RSNT_INTERCONNECT` variable influence behavior?",
    "answer": "The value of `RSNT_INTERCONNECT` triggers different transport protocol options for OpenMPI."
  },
  {
    "question": "What is the function of the `RSNT_CUDA_DRIVER_VERSION` environment variable?",
    "answer": "The `RSNT_CUDA_DRIVER_VERSION` variable is used to hide or show versions of CUDA modules based on the required NVidia driver version."
  },
  {
    "question": "How are CUDA module versions determined if `RSNT_CUDA_DRIVER_VERSION` is not defined?",
    "answer": "If `RSNT_CUDA_DRIVER_VERSION` is not defined, the files in `/usr/lib64/nvidia` determine which CUDA module versions are shown or hidden."
  },
  {
    "question": "What assumption is made about CUDA driver versions if no libraries are found in `/usr/lib64/nvidia`?",
    "answer": "If no libraries are found in `/usr/lib64/nvidia`, it is assumed that the driver versions are sufficient for CUDA 10.2 to ensure compatibility with older versions."
  },
  {
    "question": "How can all CUDA versions be hidden using an environment variable?",
    "answer": "All CUDA versions can be hidden by defining the environment variable `RSNT_CUDA_DRIVER_VERSION=0.0`."
  }
]