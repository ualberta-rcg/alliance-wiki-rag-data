[
  {
    "question": "How do you manually adjust a compiled OpenGL application to preload 'vglfaker.so' for accelerated OpenGL on gra-vdi, if it was not installed via nix?",
    "answer": "First, load the `nix` module with `module load nix`. Then, use the `patchelf` utility to add the VirtualGL system library by running `patchelf --add-needed /usr/lib64/VirtualGL/libvglfaker.so ~/.local/bin/myglapp`, where `~/.local/bin/myglapp` is the path to your application's binary."
  },
  {
    "question": "What is an alternative method to preload 'vglfaker.so' besides using `patchelf`?",
    "answer": "It is also possible to preload 'vglfaker.so' via the `LD_PRELOAD` environment variable."
  },
  {
    "question": "Why is using the `LD_PRELOAD` environment variable to preload 'vglfaker.so' generally considered a bad practice?",
    "answer": "It is generally a bad idea because it applies indiscriminately to all binaries, and those that require a different `vglfaker.so` than the one set in `LD_PRELOAD` will then fail."
  },
  {
    "question": "When can the `LD_PRELOAD` environment variable be safely used for preloading `vglfaker.so`?",
    "answer": "It can be used safely in some cases within wrapper scripts."
  }
]