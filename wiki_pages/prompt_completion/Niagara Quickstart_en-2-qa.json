[
  {
    "question": "What are the two available software stacks on Niagara?",
    "answer": "On Niagara, there are two available software stacks: the Niagara software stack and the Alliance software stack."
  },
  {
    "question": "How do you load the Niagara software stack?",
    "answer": "You can load the Niagara software stack using the command `module load NiaEnv`."
  },
  {
    "question": "How do you load the standard Alliance software stack on Niagara?",
    "answer": "To load the standard Alliance software stack on Niagara, use the command `module load CCEnv arch/avx512`."
  },
  {
    "question": "What happens if you load the Alliance software stack without the `arch/avx512` module?",
    "answer": "Without the `arch/avx512` module, you would get modules for a previous generation of CPUs when loading the Alliance software stack."
  },
  {
    "question": "How can you load the same default modules as on Cedar, Graham, and Beluga for the Alliance software stack?",
    "answer": "You can load the same default modules as on Cedar, Graham, and Beluga by using the command `module load CCEnv arch/avx512 StdEnv/2018.3`."
  },
  {
    "question": "Is it recommended to load modules in your `.bashrc` file on Niagara?",
    "answer": "No, it is advised against loading modules in your `.bashrc` file on Niagara, as this could lead to very confusing behavior."
  },
  {
    "question": "Where should modules be loaded for run-specific tasks?",
    "answer": "Run-specific modules should be loaded inside your job submission script."
  },
  {
    "question": "Why is it better to be explicit about module versions instead of using short names?",
    "answer": "It is usually better to be explicit about module versions for future reproducibility."
  },
  {
    "question": "How can you solve module dependencies if a module requires others to be loaded first?",
    "answer": "You can solve module dependencies by using `module spider`."
  },
  {
    "question": "Which compilers are recommended for most compiled software on Niagara?",
    "answer": "For most compiled software, the Intel compilers (`icc` for C, `icpc` for C++, and `ifort` for Fortran) are recommended."
  },
  {
    "question": "How do you make Intel compilers available?",
    "answer": "Loading an `intel` module makes the Intel compilers available."
  },
  {
    "question": "What command makes the GNU compiler suite available?",
    "answer": "Loading one of the `gcc` modules makes the GNU compiler suite (`gcc, g++, gfortran`) available."
  },
  {
    "question": "What open-source interpreted software is available on Niagara?",
    "answer": "Open source interpreted, interactive software available includes Python, R, Julia, and Octave."
  },
  {
    "question": "Can I use commercial software on Niagara?",
    "answer": "Possibly, but you have to bring your own license for it and can connect to an external license server using SSH tunneling."
  },
  {
    "question": "Why does SciNet and Alliance not provide licenses for all commercial software?",
    "answer": "SciNet and Alliance have an extremely large and broad user base, so they cannot provide licenses for everyone's favorite software."
  },
  {
    "question": "What type of commercial software is installed on Niagara by default?",
    "answer": "The only commercial software installed on Niagara by default is software that can benefit everyone, such as compilers, math libraries, and debuggers."
  },
  {
    "question": "Which commercial software like MATLAB, Gaussian, or IDL are not provided on Niagara?",
    "answer": "Commercial software such as MATLAB, Gaussian, and IDL are not provided on Niagara."
  },
  {
    "question": "What are the optimization flags for the Intel compiler to use architecture-specific CPU instructions?",
    "answer": "The optimization flags for the Intel compiler are `-O3 -xHost`."
  },
  {
    "question": "How do you link with the Intel MKL library when using the Intel compiler?",
    "answer": "Linking with the Intel MKL library using the Intel compiler requires the `-mkl` flags."
  },
  {
    "question": "What are the optimization flags for compiling with GCC?",
    "answer": "If compiling with GCC, the optimization flags would be `-O3 -march=native`."
  },
  {
    "question": "Why should you test your code before submitting it to the cluster?",
    "answer": "You should test your code before submitting it to the cluster to verify correctness and determine necessary resources."
  },
  {
    "question": "What are the guidelines for running small test jobs on login nodes?",
    "answer": "Small test jobs on login nodes should run no more than a couple of minutes, take at most about 1-2GB of memory, and use no more than a couple of cores."
  },
  {
    "question": "How can you run the DDT debugger on the login nodes?",
    "answer": "You can run the DDT debugger on the login nodes after `module load ddt`."
  },
  {
    "question": "How do you request an interactive debug job on Niagara?",
    "answer": "You request an interactive debug job with the command `debugjob N`, where N is the number of nodes."
  },
  {
    "question": "What is the duration of an interactive debug job for 1 node?",
    "answer": "If `N=1`, an interactive debug job provides an interactive session for 1 hour."
  },
  {
    "question": "What is the maximum number of nodes for an interactive debug job and its duration?",
    "answer": "The maximum number of nodes for an interactive debug job is 4, which provides a 30-minute session."
  },
  {
    "question": "How can you request an interactive job from the regular queue if a debug job takes more than 1 hour?",
    "answer": "You can request an interactive job from the regular queue using the `salloc --nodes N --time=M:00:00` command, where N is the number of nodes and M is the number of hours."
  },
  {
    "question": "What job scheduler does Niagara use?",
    "answer": "Niagara uses SLURM as its job scheduler."
  },
  {
    "question": "How do you submit a job on Niagara?",
    "answer": "You submit jobs from a login node by passing a script to the `sbatch` command, for example: `sbatch jobscript.sh`."
  },
  {
    "question": "Which directory should you submit jobs from to ensure output can be written?",
    "answer": "You should submit jobs from your `$SCRATCH` directory, as `$HOME` is read-only on compute nodes."
  },
  {
    "question": "Under what allocation do jobs run on Niagara?",
    "answer": "Jobs will run under their group's RRG allocation, or, if the group has none, under a RAS allocation."
  },
  {
    "question": "What is the maximum walltime for a job on Niagara?",
    "answer": "Your job's maximum walltime is 24 hours."
  },
  {
    "question": "Do compute nodes on Niagara have internet access?",
    "answer": "No, compute nodes have no internet access."
  },
  {
    "question": "How are job resource requests scheduled on Niagara?",
    "answer": "All job resource requests on Niagara are scheduled as a multiple of nodes."
  },
  {
    "question": "What happens to memory requests made to the scheduler on Niagara?",
    "answer": "Memory requests to the scheduler are of no use; your job always gets N x 202GB of RAM, where N is the number of nodes."
  },
  {
    "question": "How many cores should serial jobs use on a node?",
    "answer": "If you run serial jobs, you must still use all 40 cores on the node."
  },
  {
    "question": "What is the maximum number of running compute jobs for a user with an allocation in the `compute` partition?",
    "answer": "A user with an allocation in the `compute` partition can have 50 running jobs."
  },
  {
    "question": "What is the maximum walltime for compute jobs in the `compute` partition?",
    "answer": "The maximum walltime for compute jobs in the `compute` partition is 24 hours."
  },
  {
    "question": "What is the minimum job size for compute jobs in the `compute` partition?",
    "answer": "The minimum job size for compute jobs in the `compute` partition is 1 node (40 cores)."
  },
  {
    "question": "What are the limits for running jobs in the `debug` partition?",
    "answer": "In the `debug` partition, a user can have 1 running job and 1 submitted job (including running), with a max size of 4 nodes (160 cores) and a maximum walltime of 1 hour."
  },
  {
    "question": "Which file system do `$HOME`, `$SCRATCH`, and `$PROJECT` use on Niagara?",
    "answer": "$HOME, $SCRATCH, and $PROJECT all use the parallel file system called GPFS."
  },
  {
    "question": "Why is accessing data sets with many small files not recommended on GPFS?",
    "answer": "Accessing data sets which consist of many, small files leads to poor performance on GPFS."
  },
  {
    "question": "What is recommended if you must write many small files?",
    "answer": "If you must write many small files, it is recommended to use `ramdisk`."
  },
  {
    "question": "What command submits an MPI job script named `mpi_job.sh` from the scratch directory?",
    "answer": "The command `sbatch mpi_job.sh` submits an MPI job script named `mpi_job.sh` from the scratch directory."
  },
  {
    "question": "How can hyperthreading be enabled for an MPI job in a submission script?",
    "answer": "To use hyperthreading for an MPI job, change `--ntasks=80` to `--ntasks=160` and add `--bind-to none` to the `mpirun` command (for OpenMPI)."
  },
  {
    "question": "How do you set the number of OpenMP threads in an OpenMP submission script?",
    "answer": "You set the number of OpenMP threads by exporting the `OMP_NUM_THREADS` environment variable, typically as `export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK`."
  },
  {
    "question": "What command shows the job queue for a specific user?",
    "answer": "The command `squeue -u $USER` shows the job queue for a specific user."
  },
  {
    "question": "How do you cancel a job with a given JOBID?",
    "answer": "You can cancel a job using the command `scancel -i JOBID`."
  },
  {
    "question": "What command provides an instantaneous view of CPU and memory usage of a running job's nodes?",
    "answer": "The command `jobperf JOBID` provides an instantaneous view of the CPU and memory usage of the nodes of the job while it is running."
  }
]