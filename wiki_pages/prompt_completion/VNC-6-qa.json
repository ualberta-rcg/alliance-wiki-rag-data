[
  {
    "question": "What is the default module loading state on gra-vdi?",
    "answer": "When logging into gra-vdi, no modules are loaded by default."
  },
  {
    "question": "What must users do before running graphical software on gra-vdi?",
    "answer": "Before running any graphical software on gra-vdi, users must manually load one of the available software environments."
  },
  {
    "question": "Which module is generally sufficient for most users on gra-vdi?",
    "answer": "Most users will find it sufficient to load the StdEnv module on gra-vdi."
  },
  {
    "question": "What software access does loading the StdEnv module provide on gra-vdi?",
    "answer": "Loading the StdEnv module on gra-vdi provides access to the same software modules that are loaded by default on the clusters."
  },
  {
    "question": "How do you load the StdEnv module on gra-vdi?",
    "answer": "You can load the StdEnv module on gra-vdi using the command `module load CcEnv StdEnv/2023`."
  },
  {
    "question": "When might a user need to load the SnEnv module on gra-vdi?",
    "answer": "Users might need to load the SnEnv module on gra-vdi in rare cases to load locally installed module(s)."
  },
  {
    "question": "What is the command to load the SnEnv module?",
    "answer": "The command to load the SnEnv module is `module load SnEnv`."
  },
  {
    "question": "Is the `nix` module currently available on gra-vdi?",
    "answer": "No, the `nix` module is no longer available on gra-vdi (or graham), and there is no guarantee it will return."
  },
  {
    "question": "What was the purpose of the `nix` module when it was available?",
    "answer": "When it was available, the `nix` module provided open-source software optimized to use accelerated OpenGL whenever possible."
  },
  {
    "question": "How did users manage software packages via NIX in their personal environment (when `nix` was available)?",
    "answer": "After loading the `nix` module, the `nix` and `nix-env` commands would be in the user's path to manage software packages within their personal nix environment."
  },
  {
    "question": "What steps were involved in installing a `nix` package (when the module was available)?",
    "answer": "To install a `nix` package, a user would open a terminal, run `module load nix`, then use `nix search <regexp>` to find programs and `nix-env --install --attr <attribute>` to install them."
  },
  {
    "question": "How did the `nix` environment handle software persistence?",
    "answer": "The `nix` environment persists from one login to the next, meaning software only needed to be installed once and would be available each time the `nix` module was loaded."
  },
  {
    "question": "What is required for accelerated OpenGL to work with compiled binaries?",
    "answer": "For accelerated OpenGL to work, it is necessary to adjust compiled binaries to pre-load \"vglfaker.so\" from VirtualGL."
  },
  {
    "question": "How is OpenGL customization handled for software installed via `nix` on gra-vdi?",
    "answer": "This level of customization is automatically done for you on gra-vdi when you install any OpenGL based software package with nix."
  },
  {
    "question": "What utility is recommended for manually adjusting compiled binaries for OpenGL outside of `nix`?",
    "answer": "The `patchelf` utility is suggested for manually adjusting the final binary to include the VirtualGL system library \"/usr/lib64/VirtualGL/libvglfaker.so\" for software installed outside of `nix`."
  },
  {
    "question": "How can the `patchelf` utility be installed into a `nix` environment?",
    "answer": "The `patchelf` utility can be installed into `nix` using the command `nix-env --install --attr nixpkgs.patchelf`."
  },
  {
    "question": "Is it recommended to preload `vglfaker.so` via the `LD_PRELOAD` environment variable?",
    "answer": "No, it is generally a bad idea to preload `vglfaker.so` via the `LD_PRELOAD` environment variable as it applies indiscriminately to all binaries and can cause failures for those requiring a different version."
  },
  {
    "question": "When can `LD_PRELOAD` be used safely for `vglfaker.so`?",
    "answer": "`LD_PRELOAD` can be used safely in some cases in wrapper scripts."
  }
]