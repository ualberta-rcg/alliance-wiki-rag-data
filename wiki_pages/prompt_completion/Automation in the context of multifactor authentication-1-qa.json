[
  {
    "question": "Why do I need to request access to an automation node for an automated workflow?",
    "answer": "You need to request access to an automation node because automated workflows connecting to a cluster without human intervention cannot use a second authentication factor, and Multi-Factor Authentication (MFA) is now a requirement."
  },
  {
    "question": "What are the limitations of an automation node compared to a regular login node?",
    "answer": "An automation node is much more limited than a regular login node in terms of the type of authentication it accepts and the types of actions it can be used to perform."
  },
  {
    "question": "How do I request access to an automation node?",
    "answer": "You should contact technical support and request access to an automation node, explaining in detail the type of automation you intend to use, including commands, tools, and libraries."
  },
  {
    "question": "What is the only accepted method of authentication for automation nodes?",
    "answer": "The only accepted means of authentication for automation nodes is through SSH keys uploaded to the CCDB; SSH keys in your `.ssh/authorized_keys` file are not accepted."
  },
  {
    "question": "What is the policy for using SSH keys with automation nodes?",
    "answer": "You should follow the rule of 'one SSH key per use' and generate a new SSH key specifically for your automation workflow, without reusing it for interactive login."
  },
  {
    "question": "What specific constraints must SSH keys for automation nodes obey?",
    "answer": "SSH keys for automation nodes must obey `restrict`, `from=\"pattern-list\"`, and `command=\"COMMAND\"` constraints."
  },
  {
    "question": "What does the `restrict` constraint do for automation node SSH keys?",
    "answer": "The `restrict` constraint disables port, agent, and X11 forwarding, and also disables the pseudo teletype (PTY), blocking most interactive workloads."
  },
  {
    "question": "Why is the `restrict` constraint required for automation nodes?",
    "answer": "The `restrict` constraint is required because automation nodes are not intended for starting long-running or interactive processes; regular login nodes must be used for those instead."
  },
  {
    "question": "What is the purpose of the `from=\"pattern-list\"` constraint for automation node SSH keys?",
    "answer": "The `from=\"pattern-list\"` constraint specifies that the key can only be used from IP addresses that match the provided patterns, ensuring it's not used from unintended computers."
  },
  {
    "question": "What is the required format for IP addresses in the `from=\"pattern-list\"` constraint?",
    "answer": "The pattern list must include only public IP addresses that fully specify at least the network class, the network, and the subnet (the first three elements of an IP address), like `x.y.z.*`."
  },
  {
    "question": "What types of IP addresses are not accepted in the `from=\"pattern-list\"` constraint?",
    "answer": "Private IP address ranges like `10.0.0.0 \u2013 10.255.255.255`, `172.16.0.0 \u2013 172.31.255.255`, and `192.168.0.0 \u2013 192.168.255.255` are not accepted, nor are patterns that don't fully specify the first three elements, such as `x.y.*.*`."
  },
  {
    "question": "How can I find my public IP address?",
    "answer": "You can find your public IP address using a site like [https://whatismyipaddress.com/ What Is My IP Address?] or by running the shell command `curl ifconfig.me`."
  },
  {
    "question": "What does the `command=\"COMMAND\"` constraint do for automation node SSH keys?",
    "answer": "The `command=\"COMMAND\"` constraint forces the specified `COMMAND` to be executed when the connection is established, restricting which commands can be used with that key."
  },
  {
    "question": "Where can I find convenience wrapper scripts for the `command=` constraint?",
    "answer": "Convenience wrapper scripts for the `command=` constraint are provided and defined in the git repository at [https://github.com/ComputeCanada/software-stack-custom/tree/main/bin/computecanada/allowed_commands]."
  },
  {
    "question": "Which wrapper script allows only file transfer commands like `scp` and `rsync`?",
    "answer": "The script `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/transfer_commands.sh` allows only file transfers, such as `scp`, `sftp`, or `rsync`."
  },
  {
    "question": "Which wrapper script allows Slurm commands?",
    "answer": "The script `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/slurm_commands.sh` allows some Slurm commands, such as `squeue` and `sbatch`."
  },
  {
    "question": "Which wrapper script allows all common actions, including file transfers, archiving, and Slurm commands?",
    "answer": "The script `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/allowed_commands.sh` allows all common actions, combining the functionalities of the other provided scripts."
  },
  {
    "question": "What constraints must an SSH key include to be accepted for an automation node?",
    "answer": "Accepted SSH keys must include all three constraints: `restrict`, `from=\"pattern-list\"`, and `command=\"COMMAND\"`."
  },
  {
    "question": "How are constraints added to an SSH key before uploading it to the CCDB?",
    "answer": "The constraints must be added directly as text in front of your key string, before uploading the complete string to your account in the CCDB."
  },
  {
    "question": "What is the hostname for the automation node on the Fir cluster?",
    "answer": "The hostname for the automation node on the Fir cluster is `robot.fir.alliancecan.ca`."
  },
  {
    "question": "What is the hostname for the automation node on the Rorqual cluster?",
    "answer": "The hostname for the automation node on the Rorqual cluster is `robot.rorqual.alliancecan.ca`."
  },
  {
    "question": "How can I specify a particular SSH key when using `ssh` or `scp` commands?",
    "answer": "You can specify a particular SSH key by passing the `-i` parameter to the command, for example: `ssh -i .ssh/private_key_to_use ...` or `scp -i .ssh/private_key_to_use ...`."
  },
  {
    "question": "How can I specify a particular SSH key when using the `rsync` command?",
    "answer": "You can specify a particular SSH key for `rsync` by using the `-e` option to pass SSH parameters, for example: `rsync -e \"ssh -i .ssh/private_key_to_use\" ...`."
  },
  {
    "question": "How can I conveniently configure SSH to automatically use the correct key for an automation node?",
    "answer": "You can conveniently configure SSH by adding parameters to your `~/.ssh/config` file, specifying the hostname, user, identity file, and other options like `identitiesonly yes` and `requesttty no`."
  },
  {
    "question": "What is the potential issue when connecting to an automation node regarding IP addressing?",
    "answer": "The potential issue is that your SSH client might choose to use IPv6 addressing over IPv4, especially in a Windows environment, which could cause the `restrict,from=` IP address mask in your key not to match the connection type."
  },
  {
    "question": "How can I determine if my SSH client is connecting using IPv4 or IPv6?",
    "answer": "You can determine this by running a debug SSH command like `ssh -i ~/.ssh/automation_key -vvv username@robot.rorqual.alliancecan.ca \"ls -l\"` and looking for the 'Connecting to...' message, which will show either an IPv4 or IPv6 address."
  },
  {
    "question": "What are the possible solutions if my SSH client is using the wrong IP version (IPv4/IPv6) for connection?",
    "answer": "Possible solutions include explicitly using IPv4 or IPv6 with `-4` or `-6` SSH options, using an IP address instead of the hostname (e.g., `username@132.219.138.79` for IPv4), or as a last resort, disabling IPv6 addressing on your computer."
  }
]