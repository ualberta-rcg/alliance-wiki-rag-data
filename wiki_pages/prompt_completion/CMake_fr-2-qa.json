[
  {
    "question": "How do you edit an option's value in the `ccmake` interface?",
    "answer": "You can edit a value in `ccmake` by pressing the `Enter` key."
  },
  {
    "question": "After modifying a value in `ccmake`, what key should be pressed to test the new configuration?",
    "answer": "After modifying a value, you should press the `c` key to test the configuration with the new value."
  },
  {
    "question": "What option becomes available in `ccmake` if the configuration with new values is successful?",
    "answer": "If the configuration is successful, the `g` option becomes available, allowing you to generate the `Makefile`."
  },
  {
    "question": "How do you generate the `Makefile` after a successful configuration in `ccmake`?",
    "answer": "After a successful configuration, you press the `g` key to generate the `Makefile` with the new configuration."
  },
  {
    "question": "How can you quit `ccmake` without generating a `Makefile`?",
    "answer": "You can quit `ccmake` without generating a `Makefile` by pressing the `q` key."
  },
  {
    "question": "What key do you press to activate the advanced mode in `ccmake`?",
    "answer": "To activate the advanced mode in `ccmake`, you press the `t` key."
  },
  {
    "question": "What is the purpose of activating the advanced mode in `ccmake`?",
    "answer": "Activating the advanced mode produces a much longer list of variables, which allows for more precise configuration of the application."
  },
  {
    "question": "What type of information about libraries is displayed in `ccmake`'s advanced mode?",
    "answer": "In advanced mode, `ccmake` displays both libraries that have been found and those that have not been found, such as various BLAS and LAPACK libraries."
  },
  {
    "question": "What information does `ccmake`'s advanced mode show regarding compilers and linkers?",
    "answer": "The advanced mode in `ccmake` displays the list of options passed to compilers and the linker, categorized by the type of build."
  },
  {
    "question": "What is the CMake version displayed in the example `ccmake` output?",
    "answer": "The example `ccmake` output shows CMake Version 2.8.8."
  },
  {
    "question": "What is the default `CMAKE_INSTALL_PREFIX` shown in the initial `ccmake` output example?",
    "answer": "The default `CMAKE_INSTALL_PREFIX` shown in the initial `ccmake` output is `/usr/local`."
  },
  {
    "question": "How do you access help within the `ccmake` interface?",
    "answer": "You can access help within the `ccmake` interface by pressing the `h` key."
  }
]