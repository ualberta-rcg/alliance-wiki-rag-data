[
  {
    "question": "What is Parabricks?",
    "answer": "Parabricks is a software suite designed for performing secondary analysis of next generation sequencing (NGS) DNA data."
  },
  {
    "question": "How does Parabricks achieve fast analysis of NGS data?",
    "answer": "Parabricks is fast due to its tight integration with GPUs, which allows it to analyze 30x Whole Human Genome Sequencing (WGS) in hours instead of days."
  },
  {
    "question": "Where can users find more information about Parabricks?",
    "answer": "Users can learn more at www.nvidia.com/parabricks."
  },
  {
    "question": "When was Parabricks provided for free by NVidia for COVID-19 research?",
    "answer": "Parabricks was provided freely by NVidia to help with COVID-19 research until Sunday, 17 May 2020."
  },
  {
    "question": "Is a license required to use Parabricks on Compute Canada equipment after May 17, 2020?",
    "answer": "Yes, since the free period expired, users must have their own license arrangement with NVidia to use Parabricks on Compute Canada equipment."
  },
  {
    "question": "How can you search for the Parabricks module on Compute Canada clusters?",
    "answer": "Parabricks can be looked for as a regular module using the command 'module spider parabricks'."
  },
  {
    "question": "What command is used to load Parabricks version 2.5.0?",
    "answer": "Parabricks version 2.5.0 can be loaded using the command 'module load parabricks/2.5.0'."
  },
  {
    "question": "What documentation should users review before using Parabricks?",
    "answer": "Before using Parabricks, users should review the official Parabricks documentation and learn how to request GPUs in Compute Canada clusters."
  },
  {
    "question": "What is an example of the Parabricks command for germline analysis?",
    "answer": "An example command is 'pbrun germline --ref ${DATA_DIR}/Homo_sapiens_assembly38.fa --in-fq ${DATA_DIR}/some_1.fastq ${DATA_DIR}/some_2.fastq --knownSites ${DATA_DIR}/dbsnp_146.hg38.vcf.gz --tmp-dir ${SLURM_TMPDIR}/ --out-bam ${OUT_DIR}/output.bam --out-variants ${OUT_DIR}/output.vcf --out-recal-file ${OUT_DIR}/report.txt'."
  },
  {
    "question": "What type of paths should be used for files when running Parabricks commands?",
    "answer": "Users should make the path to the files absolute real paths."
  },
  {
    "question": "What should be done if a Parabricks test fails immediately due to a missing module or environmental variable clash?",
    "answer": "To resolve this, try running 'module --force purge' followed by 'module load StdEnv/2016.4 nixpkgs/16.09 parabricks/2.5.0'."
  },
  {
    "question": "What is a common cause for Parabricks failures when no clear traceback is provided?",
    "answer": "A common cause for Parabricks failures without a clear traceback is not requesting enough memory."
  },
  {
    "question": "What memory allocation is suggested when reserving a full node for Parabricks?",
    "answer": "If reserving a full node with '--nodes=1', it is suggested to use '--mem=0' to allocate all memory in the node."
  },
  {
    "question": "Does Parabricks utilize both CPUs and GPUs?",
    "answer": "Yes, Parabricks uses both CPU and GPUs."
  },
  {
    "question": "How many CPUs are recommended for a Parabricks job?",
    "answer": "It is recommended to ask for at least 10 CPUs, using '--cpus-per-task=10'."
  }
]