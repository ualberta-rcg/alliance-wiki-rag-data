[
  {
    "question": "What is VirSorter2 used for?",
    "answer": "VirSorter2 is a tool designed to identify new viral sequences."
  },
  {
    "question": "Which version of VirSorter2 is covered in this document?",
    "answer": "This document discusses the installation and use of VirSorter2 v2.2.4."
  },
  {
    "question": "Where can the source code and documentation for VirSorter2 be found?",
    "answer": "The source code and documentation for VirSorter2 are available on its GitHub page."
  },
  {
    "question": "Is it necessary to cite VirSorter2 if used for analysis?",
    "answer": "Yes, it is important to cite VirSorter2 if you use it for your analyses."
  },
  {
    "question": "How is VirSorter2 typically installed according to these instructions?",
    "answer": "VirSorter2 is installed in the $HOME directory using Alliance's prebuilt Python wheels, within a Python virtual environment."
  },
  {
    "question": "Where are custom Python wheels stored on the system?",
    "answer": "Custom Python wheels are stored in `/cvmfs/soft.computecanada.ca/custom/python/wheelhouse/`."
  },
  {
    "question": "What modules need to be loaded before installing VirSorter2?",
    "answer": "You need to load the modules: `StdEnv/2020`, `python/3.8`, `hmmer/3.3.2`, and `prodigal/2.6.3`."
  },
  {
    "question": "How do you create a Python virtual environment for VirSorter2 without downloading packages?",
    "answer": "You can create it using the command `virtualenv --no-download ~/ENV_virsorter`."
  },
  {
    "question": "How do you activate the created VirSorter2 Python virtual environment?",
    "answer": "Activate it by running `source ~/ENV_virsorter/bin/activate`."
  },
  {
    "question": "What command installs VirSorter2 v2.2.4 in the virtual environment?",
    "answer": "Use `pip install --no-index virsorter==2.2.4` to install VirSorter2 v2.2.4."
  },
  {
    "question": "How can you validate the installation of VirSorter2?",
    "answer": "You can validate the installation by running `virsorter -h`."
  },
  {
    "question": "How do you freeze the Python environment and its requirements?",
    "answer": "Freeze the environment by running `pip freeze > ~/virsorter-2.2.4-requirements.txt`."
  },
  {
    "question": "What command is used to download the VirSorter2 database?",
    "answer": "Download the database using `virsorter setup --db-dir $SCRATCH/db -j 4 --skip-deps-install`."
  },
  {
    "question": "Why is the `--skip-deps-install` option used when setting up the VirSorter2 database?",
    "answer": "It is used to bypass conda installation because dependencies are already installed."
  },
  {
    "question": "How do you deactivate a Python virtual environment?",
    "answer": "Deactivate it by running the `deactivate` command."
  },
  {
    "question": "How do you download the VirSorter2 test dataset?",
    "answer": "Download the test dataset using `wget -O $SCRATCH/test.fa https://raw.githubusercontent.com/jiarong/VirSorter2/master/test/8seq.fa`."
  },
  {
    "question": "What are the SBATCH time, memory, and CPU requests specified in the `test-virsorter.sh` script?",
    "answer": "The script requests `00:30:00` for time, `2G` for memory per CPU, and `2` CPUs per task."
  },
  {
    "question": "How is VirSorter2 and its dependencies installed within the `test-virsorter.sh` script?",
    "answer": "It's installed using `pip install --no-index -r ~/virsorter-2.2.4-requirements.txt`."
  },
  {
    "question": "What command runs VirSorter2 with the test dataset in the submission script?",
    "answer": "The command is `virsorter run -w $SCRATCH/test.out -i $SCRATCH/test.fa --min-length 1500 -j $SLURM_CPUS_PER_TASK --verbose --use-conda-off --db-dir $SCRATCH/db all`."
  },
  {
    "question": "How do you start an interactive job for testing VirSorter2?",
    "answer": "Start an interactive job with `salloc --mem-per-cpu=2G --cpus-per-task=2 --account=<your-account>`."
  },
  {
    "question": "How do you run the submission script after starting an interactive job?",
    "answer": "You run the script with `bash test-virsorter.sh`."
  },
  {
    "question": "How can you terminate an interactive job allocation?",
    "answer": "You can terminate the allocation by typing `exit`."
  },
  {
    "question": "What method is suggested for submitting non-interactive jobs after a successful VirSorter2 test run?",
    "answer": "After a successful test, it is suggested to submit a non-interactive job with your own dataset using `sbatch`."
  }
]