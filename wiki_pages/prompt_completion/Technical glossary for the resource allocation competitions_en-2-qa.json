[
  {
    "question": "What is a 'Job' in the context of a batch system?",
    "answer": "A 'Job' is the basic execution object managed by the batch system, representing a collection of one or more related computing processes managed as a whole."
  },
  {
    "question": "What information do users provide when submitting a job to the batch system?",
    "answer": "Users define resource requirements for the job, including the amount of required memory, the duration of the job, and the number of compute cores it will require."
  },
  {
    "question": "What are the two main types of jobs?",
    "answer": "Jobs can be either serial (running on one compute core) or parallel (running on multiple compute cores)."
  },
  {
    "question": "What is a 'Parallel job'?",
    "answer": "A 'Parallel job' is a job that runs simultaneously on multiple CPU cores. They can be threaded/SMP jobs on a single compute node or distributed memory jobs across several compute nodes."
  },
  {
    "question": "What is a 'Serial job'?",
    "answer": "A 'Serial job' is a job that requires only one compute CPU core to run."
  },
  {
    "question": "How are most schedulers tuned regarding core-years?",
    "answer": "Most schedulers are tuned to deliver a certain number of core-years over a fixed period of time, assuming relatively consistent usage of the system."
  },
  {
    "question": "What should a user do if they anticipate inconsistent workloads or 'bursts' of compute resources?",
    "answer": "If users anticipate having bursty workloads or variable usage, they should indicate that in their RAC application."
  },
  {
    "question": "Who should be contacted if a user is having problems running jobs?",
    "answer": "If you are having problems running jobs, you should contact Technical support."
  },
  {
    "question": "How is 'Memory per core' defined?",
    "answer": "'Memory per core' is the amount of memory (RAM) per CPU core."
  },
  {
    "question": "Can you give an example of how 'Memory per core' is calculated?",
    "answer": "If a compute node has 2 CPUs, each with 6 cores, and 24GB of installed RAM, then the memory per core is 2GB (24GB / (2 CPUs * 6 cores/CPU) = 2GB/core)."
  },
  {
    "question": "What does 'Memory per node' refer to?",
    "answer": "'Memory per node' refers to the total amount of installed RAM in a compute node."
  },
  {
    "question": "How is 'System memory per core' calculated?",
    "answer": "'System memory per core' is calculated as the amount of system memory requested by a job in GB divided by the number of CPU cores requested by the job."
  },
  {
    "question": "How is 'System memory per GPU' calculated?",
    "answer": "'System memory per GPU' is calculated as the amount of system memory requested by a job in GB divided by the number of GPUs requested by the job."
  },
  {
    "question": "What is a 'Disk'?",
    "answer": "A 'Disk', also known as a hard drive or solid-state drive, is a form of permanent storage that holds programs, input files, output results, and more."
  },
  {
    "question": "What are 'Filesystems'?",
    "answer": "'Filesystems' are directory structures made available for use by systems in a cluster."
  },
  {
    "question": "What are some characteristics that can vary among filesystems?",
    "answer": "Filesystems may have different performance characteristics, space available, and intended use."
  },
  {
    "question": "What is the 'Scratch' filesystem used for?",
    "answer": "The 'Scratch' filesystem is used for temporary or transient files, bulk results of computations and simulations, or any material that can be easily recreated or reacquired during computational jobs."
  },
  {
    "question": "Where is the 'Scratch' filesystem available?",
    "answer": "The 'Scratch' filesystem is available on compute nodes and is composed of high-performance storage."
  },
  {
    "question": "Is 'Scratch' storage formally allocated?",
    "answer": "No, 'Scratch' storage is not formally allocated but is limited by generous quotas."
  },
  {
    "question": "What is the 'Home' filesystem typically used for?",
    "answer": "The 'Home' filesystem is commonly used for storing a user\u2019s personal files, executable programs, job execution scripts, and relatively small input datasets."
  },
  {
    "question": "What is a 'home directory'?",
    "answer": "A 'home directory' is a user's folder within the home filesystem."
  },
  {
    "question": "Is the home directory persistent and backed up?",
    "answer": "Yes, the home directory is persistent and, in most systems, backed up regularly."
  },
  {
    "question": "What is the 'Project' filesystem used for?",
    "answer": "The 'Project' filesystem is generally used to store frequently-used project data, with minimum data churning."
  },
  {
    "question": "How does the 'Project' filesystem compare to the 'Home' filesystem in terms of size and performance?",
    "answer": "The 'Project' filesystem is larger in available storage than 'Home', is of medium to high performance disk, and is also available on compute nodes."
  },
  {
    "question": "How is the 'Project' filesystem allocated?",
    "answer": "The 'Project' filesystem is allocated through the RAC (Research Allocation Competition) process."
  },
  {
    "question": "What is the 'Nearline' filesystem?",
    "answer": "The 'Nearline' filesystem is a disk-tape hybrid storage system that automatically migrates data above a certain size threshold from disk to tape and back upon read operations."
  },
  {
    "question": "How do users access data stored in the 'Nearline' filesystem?",
    "answer": "Access to 'Nearline' storage requires deliberate actions by users, such as using Linux command-line tools (cp, mv, rsync) to place files into or transfer files from this designated location."
  },
  {
    "question": "What kind of datasets should be stored in 'Nearline' storage?",
    "answer": "'Nearline' storage should be used for datasets that are infrequently accessed and need to be retained for long periods, but are still part of an 'active' project."
  },
  {
    "question": "Is 'Nearline' storage considered true 'archival' storage?",
    "answer": "No, 'Nearline' storage is not true 'archival' storage because the datasets must be part of an 'active' project."
  },
  {
    "question": "How is 'Nearline' capacity managed and allocated?",
    "answer": "'Nearline' capacity is managed by quotas and allocations are done via the RAC process."
  },
  {
    "question": "What is 'dCache' storage?",
    "answer": "'dCache' is a storage filesystem developed for very large datasets (petabytes) in high-energy physics projects, providing an object file storage layer on top of classical storage."
  },
  {
    "question": "For whom are 'dCache' allocations typically intended?",
    "answer": "'dCache' allocations tend to be for large projects with many Principal Investigators and researchers."
  },
  {
    "question": "How is 'dCache' capacity allocated?",
    "answer": "'dCache' capacity is allocated via the RAC process."
  },
  {
    "question": "Who should be contacted to use 'dCache' storage?",
    "answer": "If you wish to use 'dCache' storage, you should contact the Subatomic Physics National Team by writing to Technical support."
  }
]