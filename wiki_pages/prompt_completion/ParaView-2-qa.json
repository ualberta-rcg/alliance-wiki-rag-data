[
  {
    "question": "How can you start ParaView from a terminal in a JupyterLab desktop session?",
    "answer": "After clicking your preferred desktop button and opening a terminal inside it, type `module load boost/1.85.0 paraview/6.0.0` and then `paraview`."
  },
  {
    "question": "Is the ParaView GUI application inherently multi-threaded?",
    "answer": "No, the ParaView GUI application itself is single-threaded."
  },
  {
    "question": "Which ParaView filters support multithreading?",
    "answer": "Some filters, such as contouring, clipping, or resampling, support multithreading via VTK backends like TBB or OpenMP."
  },
  {
    "question": "What is necessary for true parallel rendering with ParaView in JupyterHub?",
    "answer": "For true parallel rendering, you need to connect the single-core ParaView client to a parallel ParaView server, both of which can be launched within JupyterHub."
  },
  {
    "question": "How do you specify the number of cores for multi-core visualization in JupyterHub settings?",
    "answer": "In JupyterHub settings, you select your desired number of cores under 'Number of Cores'."
  },
  {
    "question": "What is a recommended memory allocation for 4 cores in a JupyterHub multi-core session?",
    "answer": "For 4 cores, it is recommended to select 14400 MB of memory."
  },
  {
    "question": "How do you start the ParaView server for multi-core visualization in a JupyterHub remote desktop?",
    "answer": "Open a terminal in your remote desktop and type `module load boost/1.85.0 paraview/6.0.0`, then `mpirun --oversubscribe -np 4 pvserver`."
  },
  {
    "question": "How do you start the ParaView client in the same JupyterHub remote desktop for multi-core visualization?",
    "answer": "Start another terminal inside the remote desktop and type `module load boost/1.85.0 paraview/6.0.0` followed by `paraview`."
  },
  {
    "question": "What are the steps to connect a ParaView client to a parallel server within a JupyterHub session?",
    "answer": "In the ParaView GUI, click the Connect button, then Add Server. Select Server Type = Client/Server, Host = localhost, Port = 11111, and Startup Type = Manual. Then, click Connect again."
  },
  {
    "question": "How can you confirm that parallel rendering is active in ParaView?",
    "answer": "You can confirm parallel rendering by coloring your dataset by the 'Process Id' variable, which is unavailable when running in serial."
  },
  {
    "question": "What are the web portals for accessing Open OnDemand on Nibi and Trillium?",
    "answer": "For Nibi, the portal is https://ondemand.sharcnet.ca, and for Trillium, it is https://ondemand.scinet.utoronto.ca/pun/sys/dashboard."
  },
  {
    "question": "How do you launch a Nibi Desktop for single-core visualization via Open OnDemand?",
    "answer": "After logging in, find 'Desktop' under 'Compute Nodes | Nibi Desktop', specify a CPU-only Slurm account and 1 CPU core, click Launch, wait for the job to start, and then click Launch Nibi Desktop."
  },
  {
    "question": "What commands are used to start ParaView for single-core visualization within an Open OnDemand desktop session?",
    "answer": "Inside the desktop, open a terminal and type `module load paraview/6.0.0` followed by `paraview`."
  },
  {
    "question": "What is the method for true parallel rendering with ParaView in Open OnDemand?",
    "answer": "For true parallel rendering, you need to connect the single-core ParaView client to a parallel ParaView server, both of which can be launched within Open OnDemand."
  },
  {
    "question": "What are the maximum memory and core limits for multi-core visualization on Nibi's Open OnDemand?",
    "answer": "On Nibi's Open OnDemand, you can ask for up to 128GB memory and up to 8 cores."
  },
  {
    "question": "If 4 cores are specified for multi-core visualization in an Open OnDemand session, what resources become available?",
    "answer": "If 4 cores are specified, the Open OnDemand desktop session will provide access to 1 MPI task with 4 CPU cores."
  },
  {
    "question": "How do you initiate the ParaView server for multi-core visualization in an Open OnDemand remote desktop?",
    "answer": "Open a terminal in your remote desktop, type `module load paraview/6.0.0`, and then execute `mpirun --oversubscribe -np 4 pvserver`."
  },
  {
    "question": "How do you start the ParaView client within the same Open OnDemand remote desktop for multi-core visualization?",
    "answer": "In another terminal inside the remote desktop, type `module load paraview/6.0.0` followed by `paraview`."
  },
  {
    "question": "What steps are needed to connect a ParaView client to a parallel server in an Open OnDemand session?",
    "answer": "In the ParaView GUI, click the Connect button, then Add Server. Select Server Type = Client/Server, Host = localhost, Port = 11111, and Startup Type = Manual. Then, click Connect again to connect the remote ParaView client to the remote parallel server."
  }
]