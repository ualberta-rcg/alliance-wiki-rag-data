[
  {
    "question": "How do you specify an input Java filename in a STAR-CCM+ Slurm script?",
    "answer": "To specify an input Java filename, uncomment the `JAVA_FILE` line and set it to your macro's filename, for example: `JAVA_FILE='mymacros.java'`."
  },
  {
    "question": "How do you specify your Siemens Power on Demand (PoD) Key in a Slurm script for STAR-CCM+?",
    "answer": "You specify your Siemens Power on Demand (PoD) Key by setting the `LM_PROJECT` variable, for example: `LM_PROJECT='my22digitpodkey'`."
  },
  {
    "question": "What license settings are used on Niagara instead of the `~/.licenses/starccm.lic` file?",
    "answer": "On Niagara, specific settings for `FLEXPORT`, `VENDPORT`, and `LICSERVER` are used directly in the Slurm script instead of the `~/.licenses/starccm.lic` file."
  },
  {
    "question": "What are the default license server settings for a CD-Adapco PoD license on Niagara?",
    "answer": "The default settings are `FLEXPORT=1999`, `VENDPORT=2099`, and `LICSERVER=flex.cd-adapco.com`."
  },
  {
    "question": "How is the `CDLMD_LICENSE_FILE` environment variable set for STAR-CCM+ on Niagara?",
    "answer": "The `CDLMD_LICENSE_FILE` environment variable is set using `export CDLMD_LICENSE_FILE=\"$FLEXPORT@127.0.0.1\"`."
  },
  {
    "question": "What SSH command is used on Niagara for STAR-CCM+ license access?",
    "answer": "The SSH command `ssh nia-gw -L $FLEXPORT:$LICSERVER:$FLEXPORT -L $VENDPORT:$LICSERVER:$VENDPORT -N -f` is used for license access on Niagara."
  },
  {
    "question": "How is the machine file for STAR-CCM+ generated within a Slurm script?",
    "answer": "The machine file is generated by running `slurm_hl2hl.py --format STAR-CCM+ > $SLURM_TMPDIR/machinefile`."
  },
  {
    "question": "How is the `NCORE` variable calculated in the STAR-CCM+ Slurm script?",
    "answer": "The `NCORE` variable is calculated as the product of nodes, CPUs per task, and tasks per node: `NCORE=$((SLURM_NNODES * SLURM_CPUS_PER_TASK * SLURM_NTASKS_PER_NODE))`."
  },
  {
    "question": "What workaround is available for license failures when running STAR-CCM+ jobs on Niagara?",
    "answer": "There's a workaround that attempts to start STAR-CCM+ up to 5 times in a loop, pausing for 5 seconds after the first attempt, until the exit status is zero."
  },
  {
    "question": "What is the general command structure to run STAR-CCM+ with a Siemens PoD license in a Slurm script?",
    "answer": "The command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -power -podkey $LM_PROJECT -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE`."
  },
  {
    "question": "What is the general command structure to run STAR-CCM+ with an institutional license in a Slurm script?",
    "answer": "The command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE`."
  },
  {
    "question": "How do you set up your account for remote visualization with STAR-CCM+?",
    "answer": "To set up for remote visualization, you must create `~/.licenses/starccm.lic`. For POD license users, also set `export LM_PROJECT='CD-ADAPCO PROJECT ID'` and add `-power` to command line options."
  },
  {
    "question": "How do users connect for remote visualization of STAR-CCM+ on compute nodes?",
    "answer": "Users connect with TigerVNC and then open a terminal window."
  },
  {
    "question": "What modules and command are used to launch STAR-CCM+ version 15.04.010 or newer for remote visualization on compute nodes?",
    "answer": "Load `module load StdEnv/2020`, then either `module load starccm-mixed/17.02.007` or `starccm/17.02.007-R8`, and finally run `starccm+`."
  },
  {
    "question": "How do you launch STAR-CCM+ versions 14.06.010, 14.04.013, or 14.02.012 for remote visualization on compute nodes?",
    "answer": "Load `module load StdEnv/2016`, then either `module load starccm-mixed/14.06.010` or `starccm/14.06.010-R8`, and finally run `starccm+`."
  },
  {
    "question": "What is the procedure to launch STAR-CCM+ version 13.06.012 or older for remote visualization on compute nodes?",
    "answer": "Load `module load StdEnv/2016`, then either `module load starccm-mixed/13.06.012` or `starccm/13.06.012-R8`, and finally run `starccm+ -mesa`."
  },
  {
    "question": "How do users connect to VDI nodes for remote visualization with STAR-CCM+?",
    "answer": "Connect to `gra-vdi.alliancecan.ca` with TigerVNC, log in, and then open a terminal window by clicking `Applications -> Systems Tools -> Mate Terminal`."
  },
  {
    "question": "How can you check available STAR-CCM+ versions on VDI nodes after loading a `StdEnv` module?",
    "answer": "You can use the `module avail starccm-mixed` command to display available STAR-CCM+ versions."
  },
  {
    "question": "Which OpenGL implementation is currently usable with STAR-CCM+ on gra-vdi?",
    "answer": "Currently, only the MESA implementation of OpenGL is usable on gra-vdi with STAR-CCM+ due to virtualgl issues."
  },
  {
    "question": "What commands are needed to launch STAR-CCM+ version 18.04.008 or newer for remote visualization on VDI nodes?",
    "answer": "Load `module load CcEnv StdEnv/2023`, then either `module load starccm-mixed/18.04.008` or `starccm/18.04.008-R8`, and finally run `starccm+ -rr server`."
  },
  {
    "question": "How do you launch STAR-CCM+ versions from 15.04.010 to 18.02.008 for remote visualization on VDI nodes?",
    "answer": "Load `module load CcEnv StdEnv/2020`, then either `module load starccm-mixed/15.04.010` or `starccm/15.04.010-R8`, and finally run `starccm+ -mesa`."
  },
  {
    "question": "What is the procedure to launch STAR-CCM+ version 13.06.012 or older for remote visualization on VDI nodes?",
    "answer": "Load `module load CcEnv StdEnv/2016`, then either `module load starccm-mixed/13.06.012` or `starccm/13.06.012-R8`, and finally run `starccm+ -mesa`."
  }
]