[
  {
    "question": "What is RDKit?",
    "answer": "RDKit is a collection of cheminformatics and machine-learning software written in C++ and Python."
  },
  {
    "question": "In what programming languages is RDKit written?",
    "answer": "RDKit is written in C++ and Python."
  },
  {
    "question": "How can I find the available versions of the `rdkit` module?",
    "answer": "You can find available versions by executing the command `module spider rdkit`."
  },
  {
    "question": "How do I get more specific information about a particular `rdkit` module version?",
    "answer": "To get more information on a specific version, use the command `module spider rdkit/X.Y.Z`, replacing `X.Y.Z` with the exact desired version (e.g., `2024.03.5`)."
  },
  {
    "question": "What command would you use to get information about `rdkit` version `2024.03.5`?",
    "answer": "You would use the command `module spider rdkit/2024.03.5`."
  },
  {
    "question": "How can I determine which Python versions are compatible with a specific `rdkit` module version?",
    "answer": "To discover compatible Python versions, run `module spider rdkit/X.Y.Z`, where `X.Y.Z` represents the desired `rdkit` version."
  },
  {
    "question": "What is the initial step when `rdkit` is a dependency for another Python package?",
    "answer": "The first step is to deactivate any currently active Python virtual environment by running `test $VIRTUAL_ENV && deactivate`."
  },
  {
    "question": "What is an important note regarding virtual environments when loading the `rdkit` module?",
    "answer": "If a virtual environment was active, it is crucial to deactivate it first, then load the `rdkit` module, before reactivating your virtual environment."
  },
  {
    "question": "How do you load the `rdkit` module along with a specific Python version, for example, `rdkit/2024.03.5` and `python/3.12`?",
    "answer": "You load the modules using the command `module load rdkit/2024.03.5 python/3.12`."
  },
  {
    "question": "How can I verify that `rdkit` is visible to `pip` after loading its module?",
    "answer": "You can check its visibility by running `pip list | grep rdkit`."
  },
  {
    "question": "How do you confirm that `rdkit` can be successfully imported in Python?",
    "answer": "Run `python -c 'import rdkit'`. If no errors are raised, the import was successful."
  },
  {
    "question": "What action should be taken after loading the `rdkit` module and confirming its visibility and importability?",
    "answer": "After verification, you should create a virtual environment and install your packages."
  },
  {
    "question": "What common error indicates that the `rdkit` module is not accessible?",
    "answer": "The error `ModuleNotFoundError: No module named 'rdkit'` indicates that the module is not accessible."
  },
  {
    "question": "What are possible solutions for the `ModuleNotFoundError: No module named 'rdkit'`?",
    "answer": "Possible solutions include checking compatible Python versions with `module spider rdkit/X.Y.Z` and ensuring you load the `rdkit` module before activating your virtual environment."
  },
  {
    "question": "How can one check Python compatibility when troubleshooting a `ModuleNotFoundError` for `rdkit`?",
    "answer": "You can check which Python versions are compatible with your loaded RDKit module using `module spider rdkit/X.Y.Z` and then load a compatible Python module."
  }
]