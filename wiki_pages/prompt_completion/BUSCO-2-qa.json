[
  {
    "question": "How do you download a genome file for testing BUSCO?",
    "answer": "Use the command: `wget https://gitlab.com/ezlab/busco/-/raw/master/test_data/bacteria/genome.fna`."
  },
  {
    "question": "What is the command to run BUSCO for a single genome?",
    "answer": "The command is: `busco --offline --in genome.fna --out TEST --lineage_dataset bacteria_odb10 --mode genome --cpu ${SLURM_CPUS_PER_TASK:-1} --download_path busco_download/`."
  },
  {
    "question": "What is the command to run BUSCO for multiple genomes?",
    "answer": "The command is: `busco --offline --in genome/ --out TEST --lineage_dataset bacteria_odb10 --mode genome --cpu ${SLURM_CPUS_PER_TASK:-1} --download_path busco_download/`."
  },
  {
    "question": "How long should a BUSCO single genome command take to complete?",
    "answer": "The single genome command should take less than 60 seconds to complete."
  },
  {
    "question": "What should be done if a BUSCO production run takes longer than 60 seconds?",
    "answer": "Production runs which take longer must be submitted to the scheduler."
  },
  {
    "question": "How do you specify a single input file for BUSCO analysis?",
    "answer": "Specify `--in genome.fna` for single file analysis."
  },
  {
    "question": "How do you specify multiple input files for BUSCO analysis?",
    "answer": "Specify `--in genome/` for multiple files analysis."
  },
  {
    "question": "How can you prevent BUSCO from using the internet during a run?",
    "answer": "Specify `--offline` to avoid using the internet."
  },
  {
    "question": "How do you configure BUSCO to use the number of CPUs allocated by Slurm?",
    "answer": "Specify `--cpu` to `$SLURM_CPUS_PER_TASK` in your job submission script."
  },
  {
    "question": "How do you restart BUSCO from a partial run?",
    "answer": "Specify `--restart` to restart from a partial run."
  },
  {
    "question": "How do you submit the example BUSCO job script `run_busco.sh`?",
    "answer": "Submit it using: `sbatch run_busco.sh`."
  },
  {
    "question": "What modules are loaded in the example BUSCO submission script?",
    "answer": "The example script loads: `StdEnv/2020 gcc/9.3.0 python/3.10 augustus/3.5.0 hmmer/3.3.2 blast+/2.13.0 metaeuk/6 prodigal/2.6.3 r/4.3.1 bbmap/38.86`."
  },
  {
    "question": "How is the virtual environment generated and activated within the example BUSCO submission script?",
    "answer": "It is generated with `virtualenv --no-download ${SLURM_TMPDIR}/env` and activated with `source ${SLURM_TMPDIR}/env/bin/activate`."
  },
  {
    "question": "How are BUSCO and its dependencies installed in the example submission script?",
    "answer": "They are installed using `pip install --no-index --upgrade pip` and `pip install --no-index --requirement ~/busco-requirements.txt`."
  },
  {
    "question": "How can advanced users specify Augustus parameters in BUSCO?",
    "answer": "Advanced users can specify Augustus parameters using `--augustus_parameters=\"--yourAugustusParameter\"`."
  },
  {
    "question": "What is the first step to use Augustus parameters with BUSCO?",
    "answer": "Copy the Augustus `config` directory to a writable location using `cp -r $EBROOTAUGUSTUS/config $HOME/augustus_config`."
  },
  {
    "question": "What environment variable must be defined to use Augustus parameters?",
    "answer": "The `AUGUSTUS_CONFIG_PATH` environment variable must be defined."
  },
  {
    "question": "How do you define the `AUGUSTUS_CONFIG_PATH` environment variable?",
    "answer": "Define it using: `export AUGUSTUS_CONFIG_PATH=$HOME/augustus_config`."
  },
  {
    "question": "What is required to use SEPP parameters with BUSCO?",
    "answer": "To use SEPP parameters, you need to install SEPP locally in your virtual environment from the login node."
  },
  {
    "question": "What is the first step to install SEPP locally for BUSCO?",
    "answer": "Activate your BUSCO virtual environment using `source busco_env/bin/activate`."
  },
  {
    "question": "How do you install DendroPy when setting up SEPP for BUSCO?",
    "answer": "Install DendroPy using `pip install 'dendropy<4.6'`."
  },
  {
    "question": "What are the commands to install SEPP locally?",
    "answer": "The commands are: `git clone https://github.com/smirarab/sepp.git`, `cd sepp`, `python setup.py config`, and `python setup.py install`."
  },
  {
    "question": "How do you validate the SEPP installation?",
    "answer": "Validate the installation by running `cd` and then `run_sepp.py -h`."
  },
  {
    "question": "How do you activate a local virtual environment when SEPP is installed locally in a job submission script?",
    "answer": "Add `source ~/busco_env/bin/activate` immediately under the line to load the modules."
  }
]