[
  {
    "question": "What are the four input files required for a VASP job?",
    "answer": "VASP uses four input files named INCAR, KPOINTS, POSCAR, and POTCAR."
  },
  {
    "question": "How should VASP input files be prepared for a job?",
    "answer": "It is best to prepare VASP input files in a separate directory for each job."
  },
  {
    "question": "How do you submit a VASP job script?",
    "answer": "To submit a VASP job from its directory, use `sbatch vasp_job.sh`."
  },
  {
    "question": "How much CPU and memory are requested by the example VASP GPU job script?",
    "answer": "The example VASP GPU job script requests one CPU core and 1024MB memory."
  },
  {
    "question": "What type of GPU is specified in the example VASP GPU job script, and on which cluster is it available?",
    "answer": "The example VASP GPU job script requests one `p100` type GPU, which is only available on Cedar."
  },
  {
    "question": "What command does the example GPU job script use to run VASP?",
    "answer": "The example GPU job script uses `srun` to run VASP."
  },
  {
    "question": "Which modules are loaded in the example VASP GPU job script?",
    "answer": "The example VASP GPU job script loads `intel/2020.1.217`, `cuda/11.0`, `openmpi/4.0.3`, and `vasp/<VERSION>`."
  },
  {
    "question": "How can a user estimate the memory needed for a VASP job if the requirement is unknown?",
    "answer": "To estimate memory, prepare input files and then run `makeparam` in an interactive job submission, using the result for the next run."
  },
  {
    "question": "For more accurate memory estimates for future VASP jobs, what should be checked?",
    "answer": "For a more accurate estimate, check the maximum stack size used by completed jobs and use this as the memory requirement per processor for the next job."
  },
  {
    "question": "When should users read about whole-node scheduling for VASP jobs?",
    "answer": "Users should read about whole-node scheduling if they want to use 32 or more cores."
  },
  {
    "question": "What are the prerequisites for building VASP yourself?",
    "answer": "You must be licensed to use VASP and have access to the VASP source code."
  },
  {
    "question": "On which clusters can VASP be installed by users in their home directory?",
    "answer": "VASP can be installed in a user's `/home` directory on all clusters except Niagara."
  },
  {
    "question": "What is the EasyBuild command used to install VASP from source?",
    "answer": "The EasyBuild command is `eb -f [RECIPE NAME] --sourcepath=[SOURCEPATH]`."
  },
  {
    "question": "What do `[SOURCEPATH]` and `[RECIPE NAME]` represent when using EasyBuild to install VASP?",
    "answer": "`[SOURCEPATH]` is the directory containing the VASP source code, and `[RECIPE NAME]` is the name of the recipe."
  },
  {
    "question": "Where can the VASP source code be downloaded for building?",
    "answer": "The VASP source code can be downloaded from the official VASP website."
  },
  {
    "question": "How long does it typically take to run the EasyBuild command for VASP?",
    "answer": "Running the EasyBuild command for VASP can take perhaps more than an hour."
  },
  {
    "question": "How can built VASP versions be used after installation with EasyBuild?",
    "answer": "After installation, built VASP versions can be loaded and run using `module` commands."
  },
  {
    "question": "What alternative resources are available for building a custom version of VASP?",
    "answer": "Alternative resources include [[Installing software in your home directory]], [https://www.vasp.at/wiki/index.php/Installing_VASP.5.X.X Installing VASP 5], or [https://www.vasp.at/wiki/index.php/Installing_VASP.6.X.X Installing VASP 6]."
  },
  {
    "question": "Which VASP version is associated with the `VASP-6.4.2-iimpi-2023a.eb` EasyBuild recipe?",
    "answer": "The `VASP-6.4.2-iimpi-2023a.eb` EasyBuild recipe is for VASP version 6.4.2."
  },
  {
    "question": "Does the `VASP-6.5.0-iimpi-2023a.eb` EasyBuild recipe include VTSTtools and VASPsol?",
    "answer": "No, the `VASP-6.5.0-iimpi-2023a.eb` recipe does not include VTSTtools or VASPsol extensions."
  },
  {
    "question": "What is the required source file for the `VASP-6.3.1-iimpi-2020a.eb` EasyBuild recipe?",
    "answer": "The required source file for the `VASP-6.3.1-iimpi-2020a.eb` recipe is `vasp.6.3.1.tgz`."
  },
  {
    "question": "Which EasyBuild recipes for VASP version 6 include Wannier Function, Beef, HDF5, and LibXC?",
    "answer": "Recipes `VASP-6.3.0-iimpi-2020a.eb`, `VASP-6.3.1-iimpi-2020a.eb`, `VASP-6.4.2-iimpi-2023a.eb`, `VASP-6.4.3-iimpi-2023a.eb`, `VASP-6.5.0-iimpi-2023a.eb`, and `VASP-6.5.1-iimpi-2023a.eb` include these libraries."
  },
  {
    "question": "Which EasyBuild recipes for VASP include ELPA and Libmbd?",
    "answer": "The `VASP-6.5.0-iimpi-2023a.eb` and `VASP-6.5.1-iimpi-2023a.eb` recipes include ELPA and Libmbd."
  },
  {
    "question": "Where can I find a 'Getting Started' guide for VASP from its developers?",
    "answer": "A 'Getting Started' guide is available on the developers' website at [https://www.vasp.at/tutorials/latest/part1/]."
  },
  {
    "question": "Is there a Python interface for extracting data from VASP calculations?",
    "answer": "Yes, `py4vasp` is a Python interface to extract data from VASP calculations, available at [https://www.vasp.at/py4vasp/latest/]."
  }
]