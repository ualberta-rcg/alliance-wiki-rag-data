[
  {
    "question": "How do I submit a VASP job script?",
    "answer": "To submit a VASP job, navigate to the directory containing your input files and run `sbatch vasp_job.sh`."
  },
  {
    "question": "What is the initial method to estimate memory requirements for a VASP job?",
    "answer": "If you are unsure of the memory needed for your job, prepare all input files and then run `makeparam` within an interactive job submission. Use the result as the required memory for subsequent runs."
  },
  {
    "question": "How can I get a more accurate memory estimate for future VASP jobs?",
    "answer": "For a more accurate estimate, check the maximum stack size utilized by previously completed jobs and use that value as the memory requirement per processor for your next job."
  },
  {
    "question": "What scheduling policy should I consider when using 32 or more cores for VASP?",
    "answer": "If you intend to use 32 or more cores, you should review the information regarding whole-node scheduling."
  },
  {
    "question": "Which VASP versions can be installed in my home directory using EasyBuild?",
    "answer": "If you are licensed and have access to the source code, you can install VASP-5.4.4, 6.1.2, 6.2.1, and 6.3.0 in your `/home` directory on all clusters (except Niagara) using EasyBuild commands."
  },
  {
    "question": "What extensions are included in VASP builds performed using EasyBuild on these clusters?",
    "answer": "The VASP builds created using EasyBuild will be identical to those on Cedar and Graham, and will include the Transition State Tools and VASPsol extensions."
  },
  {
    "question": "What is the EasyBuild command to install VASP 5.4.4 for the 2020 environment?",
    "answer": "For the 2020 environment, load `StdEnv/2020` and use the command `eb -f VASP-5.4.4-iimpi-2020a.eb --sourcepath=SOURCEPATH`."
  },
  {
    "question": "How do I install VASP 6.4.2 for the 2023 environment using EasyBuild?",
    "answer": "For the 2023 environment, load `StdEnv/2023` and execute `eb -f VASP-6.4.2-iofb-2023a.eb --sourcepath=SOURCEPATH`."
  },
  {
    "question": "What does `SOURCEPATH` signify in the EasyBuild commands for VASP?",
    "answer": "`SOURCEPATH` represents the specific path to your VASP source file."
  },
  {
    "question": "What are the source file names for VASP versions 5.4.4 and 6.3.0?",
    "answer": "The source file for VASP 5.4.4 is `vasp.5.4.4.pl2.tgz`, and for VASP 6.3.0, it is `vasp.6.3.0.tgz`."
  },
  {
    "question": "Where can I obtain the VASP source code?",
    "answer": "You can download the VASP source code from the official VASP website at [https://www.vasp.at/]."
  },
  {
    "question": "How long does the VASP EasyBuild process usually take?",
    "answer": "Running the VASP EasyBuild command can take a significant amount of time, potentially more than an hour."
  },
  {
    "question": "After building VASP myself, how do I load and run it?",
    "answer": "Once VASP is built, you can load and run it using `module` commands, similar to how prebuilt VASP versions are accessed."
  },
  {
    "question": "Where can I find additional guides for building a custom version of VASP?",
    "answer": "For building a custom VASP version, refer to the 'Installing software in your home directory' guide and the VASP wiki pages for 'Installing VASP 5' or 'Installing VASP 6'."
  },
  {
    "question": "What is `py4vasp`?",
    "answer": "`py4vasp` is a Python interface designed to extract data from VASP calculations."
  }
]