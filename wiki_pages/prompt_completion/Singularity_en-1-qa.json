[
  {
    "question": "Is the information regarding Singularity up-to-date?",
    "answer": "No, much of this information is now outdated since Singularity has been deprecated in favor of Apptainer on all clusters. Users should refer to Apptainer instead."
  },
  {
    "question": "What is Singularity?",
    "answer": "Singularity is open source software created by Berkeley Lab that provides operating-system-level virtualization, commonly called containers."
  },
  {
    "question": "What are the primary purposes of Singularity?",
    "answer": "Singularity serves as a secure way to use Linux containers on Linux multi-user clusters, enables users to have full control of their environment, and packages scientific software for deployment to different clusters with the same architecture."
  },
  {
    "question": "How does a container differ from a virtual machine?",
    "answer": "A container likely has less overhead than a virtual machine and can only run programs capable of running in the same operating system kernel (e.g., Linux for Singularity) for the same hardware architecture. Virtual machines can run different operating systems and sometimes support foreign CPU architectures."
  },
  {
    "question": "What fundamental Linux technologies do containers use?",
    "answer": "Containers use Linux control groups (cgroups), kernel namespaces, and an overlay filesystem."
  },
  {
    "question": "What do Linux control groups (cgroups) do?",
    "answer": "Cgroups limit, control, and isolate resource usage such as RAM, disk I/O, and CPU access."
  },
  {
    "question": "What do kernel namespaces achieve in containers?",
    "answer": "Kernel namespaces virtualize and isolate operating system resources of a group of processes, including process and user IDs, filesystems, and network access."
  },
  {
    "question": "What is the function of an overlay filesystem in containers?",
    "answer": "Overlay filesystems can be used to enable the appearance of writing to otherwise read-only filesystems."
  },
  {
    "question": "How does Singularity compare to Docker?",
    "answer": "Singularity is similar to Docker but was specifically designed for secure container usage without special permissions, especially on multi-user compute clusters."
  },
  {
    "question": "Is Singularity available on the clusters mentioned in the document?",
    "answer": "Yes, Singularity is available on our clusters."
  },
  {
    "question": "What are the requirements for using Singularity on a personal computer?",
    "answer": "To use Singularity on your own computer, you need to download and install it per its documentation and use a relatively recent version of some Linux distribution, ideally with a kernel v3.10.0 or newer."
  },
  {
    "question": "How do you load a specific Singularity module on a cluster?",
    "answer": "You can load a specific Singularity module by running a command such as '$ module load singularity/2.5'."
  },
  {
    "question": "How can you see all available versions of Singularity modules on a cluster?",
    "answer": "To see all available versions of Singularity modules, you can run '$ module spider singularity'."
  },
  {
    "question": "What is a Singularity image?",
    "answer": "A Singularity image is either a file or a directory containing an installation of Linux."
  },
  {
    "question": "What command is used to create a Singularity image?",
    "answer": "One can create a Singularity image using the 'singularity build' command."
  },
  {
    "question": "What does 'WHAT-TO-WRITE' refer to in the 'singularity build' command?",
    "answer": "'WHAT-TO-WRITE' refers to either a filename of the singularity image file (*.sif) where the built image will be written, or a directory if building a sandbox using the '--sandbox' option."
  },
  {
    "question": "What types of sources can 'SPECIAL-URI-OR-PATH' represent when building a Singularity image?",
    "answer": "'SPECIAL-URI-OR-PATH' can be a URI starting with 'library://' (Container Library), 'docker://' (Docker Hub), 'shub://' (Singularity Hub), a path to an existing container, a path to a directory (for sandbox builds), or a path to a Singularity image file (a recipe)."
  },
  {
    "question": "What are the strong recommendations for creating Singularity images?",
    "answer": "It is strongly advised to create Singularity images using a computer or virtual machine that runs Linux, has Singularity installed, Internet access, and ideally root (e.g., sudo) permissions."
  },
  {
    "question": "What happens to file permissions if a Singularity image is created without root privileges?",
    "answer": "If an image is created without root permissions, all permissions (user and group) inside the image will be set to those of the account under which the image is made, making it difficult to re-establish proper permissions later."
  },
  {
    "question": "Why is root access important for upgrading/installing packages within an image?",
    "answer": "Commands like 'dpkg', 'apt-get', and 'apt' in Debian and Ubuntu images, used for upgrading or installing packages, require root access to function correctly."
  },
  {
    "question": "What is necessary after creating a Singularity image on your own computer before using it on a cluster?",
    "answer": "Any image created on your own computer needs to be uploaded to the cluster before it can be used there."
  }
]