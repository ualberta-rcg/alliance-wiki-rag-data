[
  {
    "question": "What does CPU stand for?",
    "answer": "CPU stands for central processing unit."
  },
  {
    "question": "What is the primary function of a CPU?",
    "answer": "The CPU is the brains of the computer where most calculations take place."
  },
  {
    "question": "What is GPU computing used for?",
    "answer": "GPU computing is the use of a graphics processing unit (GPU) to accelerate deep learning, analytics, and engineering applications."
  },
  {
    "question": "Where are GPU accelerators utilized?",
    "answer": "GPU accelerators power energy-efficient data centres in government labs, universities, enterprises, and small-and-medium businesses around the world, accelerating applications from artificial intelligence to cars, drones, and robots."
  },
  {
    "question": "What does VCPU mean?",
    "answer": "VCPU stands for virtual central processing unit."
  },
  {
    "question": "How are VCPUs assigned in a cloud environment?",
    "answer": "One or more VCPUs are assigned to every Virtual Machine (VM) within a cloud environment."
  },
  {
    "question": "How does a VM's operating system perceive a VCPU?",
    "answer": "Each VCPU is seen as a single physical CPU core by the VM\u2019s operating system."
  },
  {
    "question": "What does VGPU stand for?",
    "answer": "VGPU stands for virtual graphics processing unit."
  },
  {
    "question": "How is a VGPU seen by a VM's operating system?",
    "answer": "Each VGPU is seen as a single physical GPU device by the VM's operating system."
  },
  {
    "question": "What is a Reference GPU Unit (RGU)?",
    "answer": "RGU is a unit measuring the amount of GPU resources that are used and represents the 'cost' of utilizing a particular GPU model."
  },
  {
    "question": "Does the RGU value of a GPU vary?",
    "answer": "Yes, the RGU value of a GPU model varies based on its performance."
  },
  {
    "question": "How are GPU A100-40GB, V100-16GB, and P100-12GB rated in RGU?",
    "answer": "1 GPU A100-40GB equals 4.0 RGU, 1 GPU V100-16GB equals 2.2 RGU, and 1 GPU P100-12GB equals 1.0 RGU."
  },
  {
    "question": "How do CPU and GPU allocations differ from storage and cloud resource allocations?",
    "answer": "Allocations of storage space and cloud resources are maximum amounts that cannot be exceeded, while CPU and GPU allocations are targets for average usage, translated into scheduling priorities."
  },
  {
    "question": "What happens if a research group exceeds their cloud resource allocation?",
    "answer": "A cloud resource allocation is a maximum number of VCPUs, amount of storage, etc., which cannot be exceeded during the allocation period."
  },
  {
    "question": "Are greater usage periods for CPU and GPU allocations guaranteed?",
    "answer": "Periods of greater usage may be possible as competing demand allows, but are not guaranteed; periods of lesser usage will not be compensated."
  },
  {
    "question": "What is a Cluster in batch computing?",
    "answer": "A Cluster is a group of interconnected compute nodes managed as a unit by a scheduling program."
  },
  {
    "question": "What is a Compute node?",
    "answer": "A compute node is a computational unit of a cluster that has its own operating system image, one or more CPU cores, and some memory (RAM)."
  },
  {
    "question": "How can jobs use compute nodes?",
    "answer": "Nodes can be used by jobs in either an exclusive or shared manner depending on the cluster."
  },
  {
    "question": "What does 'Core-year' represent?",
    "answer": "A Core-year is the equivalent of using 1 CPU core continuously for a full year."
  },
  {
    "question": "Give an example of usage equivalent to 1 core-year.",
    "answer": "Using 12 cores for a month, or 365 cores for a single day are both equivalent to 1 core-year."
  },
  {
    "question": "What are compute allocations based on?",
    "answer": "Compute allocations are based on core-years allocations."
  },
  {
    "question": "What is a 'Core-equivalent'?",
    "answer": "A core-equivalent is a bundle made up of a single core and some amount of associated memory on a given system."
  },
  {
    "question": "What is a 'GPU-year'?",
    "answer": "A GPU-year is the equivalent of using 1 GPU continuously for a full year or 12 GPUs for a month."
  },
  {
    "question": "How is 'RGU-year' calculated?",
    "answer": "An RGU-year value is calculated from multiplying GPU-years by the RGU of a given GPU model."
  },
  {
    "question": "How many RGU-years would 10 GPU-years of an A100-40GB GPU equal?",
    "answer": "10 GPU-years of an A100-40GB (which costs 4 RGU) equals 40 RGU-years."
  },
  {
    "question": "What is a Head or Login node in a cluster?",
    "answer": "A Head or Login node is typically the launching point for jobs running on the cluster, configured to act as a middle point between the actual cluster and the outside network."
  },
  {
    "question": "How is batch processing priority generally determined?",
    "answer": "Batch processing priority is generally allocated based on a fair-share algorithm."
  },
  {
    "question": "What happens to a user's priority if they overuse system resources under a fair-share allocation?",
    "answer": "If a user has used a large fraction of the system recently (larger than their fair-share), their priority drops."
  },
  {
    "question": "Does the scheduling system remember past overuse indefinitely?",
    "answer": "No, after some time (e.g., weeks) of reduced usage, the scheduling system gradually 'forgets' that you overused in the past."
  },
  {
    "question": "What is the purpose of the fair-share allocation design?",
    "answer": "It is designed to ensure full system usage and not to penalize users who take advantage of idle compute resources."
  },
  {
    "question": "Is a user's total allocation a strict limit on resource consumption?",
    "answer": "No, a user's total allocation is not a limit on how many compute resources they can consume; it represents what they should be able to get over the course of the year with a constant workload on a fully busy system."
  },
  {
    "question": "What is a 'Job' in the context of a batch system?",
    "answer": "A job is the basic execution object managed by the batch system, which is a collection of one or more related computing processes managed as a whole."
  },
  {
    "question": "What information do users define when submitting a job to the batch system?",
    "answer": "Users define resource requirements for the job, such as the amount of required memory, the duration of the job, and how many compute cores it will require."
  },
  {
    "question": "What are the two types of jobs based on compute core usage?",
    "answer": "Jobs can be either serial (running on one compute core) or parallel (running on multiple compute cores)."
  },
  {
    "question": "What is a 'Parallel job'?",
    "answer": "A parallel job is a job that runs simultaneously on multiple CPU cores."
  },
  {
    "question": "How are parallel jobs broadly classified?",
    "answer": "Parallel jobs can be roughly classified as threaded/SMP jobs running on a single compute node sharing the same memory space, and distributed memory jobs that can run across several compute nodes."
  },
  {
    "question": "What is a 'Serial job'?",
    "answer": "A serial job is a job that requires one compute CPU core to run."
  },
  {
    "question": "What should users do if they anticipate inconsistent or 'bursty' workloads?",
    "answer": "Users should indicate such bursty workloads or variable usage in their RAC application."
  }
]