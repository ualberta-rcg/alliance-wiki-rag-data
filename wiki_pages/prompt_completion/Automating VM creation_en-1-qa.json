[
  {
    "question": "What tools can be used to automate the creation of cloud VMs and volumes?",
    "answer": "The OpenStack command line clients (CLI), Heat Templates, Terraform, or the OpenStack python API can be used to automate the creation of cloud VMs, volumes, etc."
  },
  {
    "question": "Which of the VM automation tools mentioned are command-line based?",
    "answer": "Both the OpenStack CLI and Terraform are command line tools."
  },
  {
    "question": "How is Heat typically accessed or used?",
    "answer": "Heat is used through the OpenStack web dashboard, Horizon."
  },
  {
    "question": "What is the purpose of cloud-init in a VM?",
    "answer": "Cloud-init is used to install and configure settings and software within the VM."
  },
  {
    "question": "What is CVMFS?",
    "answer": "CVMFS is a HTTP-based file system that provides a scalable, reliable, and low maintenance research software distribution service."
  },
  {
    "question": "How do users access software through CVMFS?",
    "answer": "At the client end, users just need to mount CVMFS and then use the software or libraries directly without worrying about compiling, building, or patching."
  },
  {
    "question": "Is CVMFS pre-installed on all Compute Canada systems?",
    "answer": "CVMFS has already been installed on Compute Canada cluster systems such as Cedar, Graham, and Beluga, while on cloud systems users need to enable it by hand."
  },
  {
    "question": "Where can instructions be found to enable CVMFS on Compute Canada cloud systems?",
    "answer": "Instructions to enable CVMFS on Compute Canada cloud systems can be found at: [https://github.com/ComputeCanada/CVMFS/tree/main/cvmfs-cloud-scripts To enable CVMFS on CC Clouds]."
  },
  {
    "question": "What kind of tasks can cloud-init files automate within a VM?",
    "answer": "Cloud-init files can be used to perform tasks such as updating the operating system, installing and configuring applications, creating files, running commands, and creating users and groups."
  },
  {
    "question": "Can cloud-init be used to set up other provisioning tools?",
    "answer": "Yes, Cloud-init can be used to set up other provisioning tools such as Ansible or Puppet."
  },
  {
    "question": "What format is used for cloud-init configuration?",
    "answer": "Cloud-init configuration is specified using plain text in the YAML format."
  },
  {
    "question": "With which OpenStack interfaces or tools can cloud-init files be used?",
    "answer": "Cloud-init files can be used with the Horizon dashboard (OpenStack's web GUI), Terraform, the CLI, or the Python API."
  },
  {
    "question": "When launching an instance in Horizon, what tab should be selected to specify a cloud-init file?",
    "answer": "Before clicking 'Launch', select the 'Post-Creation' tab to specify your 'Customization Script Source' (Cloud-init YAML file)."
  },
  {
    "question": "What are the two methods for providing a Cloud-init YAML file in the OpenStack Horizon dashboard?",
    "answer": "You can provide a Cloud-init YAML file by either copying and pasting into a text box ('Direct Input' method) or uploading from a file from your desktop computer ('File' method)."
  },
  {
    "question": "How do you check the progress of Cloud-init on a VM?",
    "answer": "To see the progress of Cloud-init on a VM, check the console log of the VM by selecting 'Project'->'Compute'->'Instances', clicking on the 'Instance Name', and then selecting the 'Log' tab."
  },
  {
    "question": "What indicates that Cloud-init has finished running in the VM's console log?",
    "answer": "When Cloud-init has finished running, a line similar to 'Cloud-init v. 0.7.5 finished at Wed, 22 Jun 2016 17:52:29 +0000. Datasource DataSourceOpenStack [net,ver=2]. Up 44.33 seconds' will appear near or at the end of the log."
  },
  {
    "question": "How do you refresh the console log to view updated Cloud-init progress?",
    "answer": "The log must be refreshed manually by clicking the 'Go' button."
  },
  {
    "question": "What kinds of tasks can Heat templates automate within the OpenStack dashboard?",
    "answer": "Heat templates can automate tasks such as creating multiple VMs at once, configuring security groups, creating and configuring networks, and creating and attaching volumes to VMs."
  },
  {
    "question": "Can Heat templates be used in conjunction with cloud-init files?",
    "answer": "Yes, Heat templates can be used in conjunction with cloud-init files; once Heat has created the VM, it can pass a cloud-init file to that VM to perform setup tasks."
  },
  {
    "question": "What format are Heat Orchestration Template (HOT) files written in?",
    "answer": "Heat Orchestration Template (HOT) files are written in the YAML format."
  },
  {
    "question": "What is a recommended practice regarding existing resources before using a Heat template?",
    "answer": "It is often good practice to remove any resources you are not currently using beforehand, as using a Heat template consumes resources towards your quota and will fail if it tries to exceed your quota."
  },
  {
    "question": "What is the initial step to create a stack using a HOT file in OpenStack Horizon?",
    "answer": "To create a stack using a HOT file, select 'Project'->'Orchestration'->'Stacks' and click the 'Launch Stack' button."
  },
  {
    "question": "How can a HOT file be provided when launching a stack?",
    "answer": "A HOT file can be provided by entering its URL, its File name, or by Direct Input."
  },
  {
    "question": "What are some default parameters for all stacks when using Heat templates?",
    "answer": "All stacks have the following default parameters: 'Stack Name', 'Creation Timeout', and 'Password for user'."
  },
  {
    "question": "How can you visually track the progress of your stack creation with Heat templates?",
    "answer": "To graphically see the progress of your stack creation, click on the 'Stack Name' and select the 'Topology' tab."
  },
  {
    "question": "In the Heat stack topology view, what do the different colored nodes indicate?",
    "answer": "Gray nodes indicate that creation is in progress, green nodes have finished being created, and red nodes indicate failures."
  },
  {
    "question": "Where can you find information about a successfully completed Heat stack, such as a URL?",
    "answer": "Once the stack has completed successfully, click the 'Overview' tab to see any information that the stack may provide, such as a URL to access a service or website."
  }
]