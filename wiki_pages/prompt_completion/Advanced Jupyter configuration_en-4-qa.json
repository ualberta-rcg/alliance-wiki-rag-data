[
  {
    "question": "How do you install additional R packages from a login node for use with the R kernel?",
    "answer": "First, ensure the R module is loaded. Then, start an R shell with `R --no-save` and use `install.packages('packageName', repos='http://cran.us.r-project.org')` to install the desired packages, such as `doParallel`."
  },
  {
    "question": "Can newly installed R packages be used immediately in notebooks?",
    "answer": "Yes, newly installed R packages should already be usable in a notebook executed by the R kernel."
  },
  {
    "question": "When is it recommended to run Jupyter notebooks as Python scripts?",
    "answer": "For longer run or analysis tasks, Jupyter notebooks should be converted to Python scripts and submitted as non-interactive jobs using `sbatch`."
  },
  {
    "question": "What is the first step to run a notebook as a Python script?",
    "answer": "From the login node, create and activate a Python virtual environment, then install `nbconvert` if it's not already available, using the command `pip install --no-index nbconvert`."
  },
  {
    "question": "How do you convert a Jupyter notebook to a Python script?",
    "answer": "Use the command `jupyter nbconvert --to python mynotebook.ipynb` within your activated virtual environment on the login node."
  },
  {
    "question": "How do you execute a converted notebook (Python script) within a job submission script?",
    "answer": "In your submission script, include the line `python mynotebook.py` to run the converted Python script."
  },
  {
    "question": "How do you submit a non-interactive job for a converted notebook?",
    "answer": "After creating your submission script, submit the non-interactive job using `sbatch my-submit.sh`."
  }
]