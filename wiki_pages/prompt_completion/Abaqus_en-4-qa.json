[
  {
    "question": "What type of parallelization do Abaqus solvers support for Explicit analysis?",
    "answer": "Abaqus solvers support thread-based and MPI-based parallelization for explicit analysis."
  },
  {
    "question": "Are template scripts currently provided for multinode job restarts in Abaqus Explicit analysis?",
    "answer": "No, template scripts to perform multinode job restarts are not currently provided for Explicit analysis, pending further testing."
  },
  {
    "question": "What are the required Slurm directives for a single-node Abaqus Explicit analysis job using the 'project directory script'?",
    "answer": "The Slurm directives are: `--account=def-group`, `--time=00-06:00`, `--mem=8000M`, `--cpus-per-task=4`, and `--nodes=1`."
  },
  {
    "question": "How do you load the necessary Abaqus modules for a single-node Explicit analysis job?",
    "answer": "You load them by running 'module load StdEnv/2020' and 'module load abaqus/2021'."
  },
  {
    "question": "What Abaqus command is used to start an Explicit analysis job named 'testep1' with input 'myexp-sim.inp' using the 'project directory script'?",
    "answer": "The command is 'abaqus job=testep1 input=myexp-sim.inp scratch=$SLURM_TMPDIR cpus=$SLURM_CPUS_ON_NODE interactive mp_mode=threads memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"'."
  },
  {
    "question": "How do you specify writing restart data for a total of 12 time increments in an Explicit analysis input file?",
    "answer": "You add the line '*RESTART, WRITE, OVERLAY, NUMBER INTERVAL=12, TIME MARKS=NO' to the input file."
  },
  {
    "question": "How can you check for completed restart information after an Abaqus Explicit analysis job?",
    "answer": "You can check by running 'egrep -i \"step|restart\" testep*.com testep*.msg testep*.sta'."
  },
  {
    "question": "What Abaqus command is used to restart an Explicit analysis job named 'testep2' from 'testep1' using the 'project directory restart script'?",
    "answer": "After copying existing 'testep1*' files to 'testep2*', the command is 'abaqus job=testep2 input=myexp-sim.inp recover scratch=$SLURM_TMPDIR cpus=$SLURM_CPUS_ON_NODE interactive mp_mode=threads memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"'."
  },
  {
    "question": "Are input file modifications required when restarting an Explicit analysis using the 'project directory restart script'?",
    "answer": "No input file modifications are required to restart the analysis when using the 'project directory restart script'."
  },
  {
    "question": "What is the primary benefit of using the 'temporary directory script' for Abaqus Explicit analysis?",
    "answer": "The 'temporary directory script' benefits jobs that create large restart files by writing them to the local disk through the use of the SLURM_TMPDIR environment variable."
  },
  {
    "question": "How does the 'temporary directory script' ensure data persistence during a long Abaqus Explicit analysis job?",
    "answer": "A background process is initiated that periodically (every 6 hours) copies all files from the temporary directory ($SLURM_TMPDIR) to the submit directory ($SLURM_SUBMIT_DIR) to prevent data loss."
  },
  {
    "question": "What Abaqus command is used to start an Explicit analysis job named 'testet1' with input 'myexp-sim.inp' using the 'temporary directory script'?",
    "answer": "After changing to the temporary directory, the command is 'abaqus job=testet1 input=$SLURM_SUBMIT_DIR/myexp-sim.inp scratch=$SLURM_TMPDIR cpus=$SLURM_CPUS_ON_NODE interactive mp_mode=threads memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"'."
  },
  {
    "question": "How is the `mp_host_list` variable generated and exported for multi-node Abaqus Standard analysis jobs?",
    "answer": "The `mp_host_list` is generated by processing the output of `slurm_hl2hl.py`, constructing a string `mp_host_list=[...]`, exporting it as an environment variable, and writing it to `abaqus_v6.env`."
  },
  {
    "question": "What Abaqus command is used to run a multi-node MPI job named `testsp1-mpi` with input `mystd-sim.inp`?",
    "answer": "The command is `abaqus job=testsp1-mpi input=mystd-sim.inp scratch=$SLURM_TMPDIR cpus=$SLURM_NTASKS interactive mp_mode=mpi`."
  }
]