[
  {
    "question": "What is JupyterLab?",
    "answer": "JupyterLab is the recommended general-purpose user interface to use on a JupyterHub."
  },
  {
    "question": "What functionalities does a JupyterLab server offer?",
    "answer": "From a JupyterLab server, you can manage your remote files and folders, and you can launch Jupyter applications like a terminal, (Python 3) notebooks, RStudio, and a Linux desktop."
  },
  {
    "question": "Can users add custom kernels to JupyterLab?",
    "answer": "Yes, users can add their own 'kernels' which appear as application tiles."
  },
  {
    "question": "Where can one find instructions for configuring custom kernels in JupyterLab?",
    "answer": "To configure such kernels, please see the 'Adding kernels' section (JupyterNotebook#Adding_kernels)."
  },
  {
    "question": "What are the primary ways to launch JupyterLab?",
    "answer": "The traditional way is to use JupyterHub, but more recently, sites have deployed Open OnDemand which can also launch the interface."
  },
  {
    "question": "Is JupyterHub available on the Fir cluster, and if so, is it fully-featured?",
    "answer": "Yes, JupyterHub is available on the Fir cluster and is fully-featured."
  },
  {
    "question": "Does the Narval cluster provide a fully-featured JupyterLab experience via JupyterHub?",
    "answer": "No, JupyterHub is available on Narval but is not fully-featured."
  },
  {
    "question": "Which clusters support launching JupyterLab via Open OnDemand?",
    "answer": "JupyterLab can be launched via Open OnDemand on the Nibi, Trillium, and Vulcan clusters."
  },
  {
    "question": "Is the JupyterLab interface available through Open OnDemand on Trillium fully-featured?",
    "answer": "No, the JupyterLab interface available through Open OnDemand on Trillium is not fully-featured."
  },
  {
    "question": "Is installing JupyterLab yourself in a virtual environment recommended?",
    "answer": "No, installing JupyterLab yourself in a virtual environment is not recommended."
  },
  {
    "question": "What is a disadvantage of self-installing JupyterLab in a virtual environment?",
    "answer": "You will not benefit from any of the pre-configured applications described in the document."
  },
  {
    "question": "What is presented when JupyterLab is opened in recent clusters?",
    "answer": "When JupyterLab is opened in one of the most recent clusters, you will be presented with a dashboard pre-populated with a few launchers."
  },
  {
    "question": "What are some of the default launchers found in the JupyterLab dashboard?",
    "answer": "Default launchers include Python 3.11, LibreQDA, Mate Desktop (VNC), OpenRefine, RStudio, VS Code, and XFCE4 Desktop (VNC)."
  },
  {
    "question": "Besides application launchers, what other links might be found on the JupyterLab dashboard?",
    "answer": "You may find links to the cluster's Globus collection, to the cluster's job portal, as well as links to relevant documentation pages."
  },
  {
    "question": "How can new launchers be made to appear in the JupyterLab dashboard?",
    "answer": "By loading modules, new launchers will appear in the dashboard."
  },
  {
    "question": "How do you close a JupyterLab session?",
    "answer": "You can close your session through the 'File' menu in the top menu bar."
  },
  {
    "question": "What is the function of the 'Hub Control Panel' option in JupyterLab's File menu?",
    "answer": "The 'Hub Control Panel' allows you to manually stop the JupyterLab server and its corresponding job on the cluster, which is useful for starting a new server with different resources."
  },
  {
    "question": "What happens when you select 'Log Out' from the File menu in JupyterLab?",
    "answer": "Selecting 'Log Out' will end the session, which will also stop the JupyterLab server and the corresponding job on the cluster."
  },
  {
    "question": "Where is the tool selector located in the JupyterLab interface?",
    "answer": "The tool selector is found on the left side of the interface."
  },
  {
    "question": "What is the purpose of the tool selector in JupyterLab?",
    "answer": "The tool selector changes the content of the frame on the right."
  },
  {
    "question": "What is the File Browser used for in JupyterLab?",
    "answer": "The File Browser is used to browse in your home, project, and scratch spaces, and it is also possible to use it to upload files."
  },
  {
    "question": "What icon represents the File Browser?",
    "answer": "The File Browser is represented by a folder icon."
  },
  {
    "question": "What is the function of the 'Running Terminals and Kernels' tool?",
    "answer": "This tool is used to stop kernel sessions and terminal sessions."
  },
  {
    "question": "What icon represents 'Running Terminals and Kernels'?",
    "answer": "'Running Terminals and Kernels' is represented by a stop icon."
  },
  {
    "question": "When is the 'GPU Dashboards' tool useful?",
    "answer": "If your job uses GPUs, the 'GPU Dashboards' tool will give you access to some resource monitoring options."
  },
  {
    "question": "What icon represents 'GPU Dashboards'?",
    "answer": "'GPU Dashboards' is represented by a GPU card icon."
  },
  {
    "question": "What is the primary function of the 'Software Modules' tool?",
    "answer": "The 'Software Modules' tool is where you can load or unload software modules available in our environment."
  },
  {
    "question": "How do loaded software modules impact the JupyterLab interface?",
    "answer": "Depending on the modules loaded, icons directing to the corresponding Jupyter applications will appear in the Launcher tab."
  },
  {
    "question": "Are any software modules loaded by default?",
    "answer": "Yes, a number of modules are loaded by default to provide access to basic tools."
  },
  {
    "question": "How can you search for available software modules within the 'Software Modules' tool?",
    "answer": "The search box can be used to search for any available module, displaying results in the 'Available Modules' subpanel."
  },
  {
    "question": "Why might some modules be hidden in the 'Software Modules' tool?",
    "answer": "Some modules are hidden until their dependency is loaded."
  },
  {
    "question": "What is recommended if you cannot find a specific module in the 'Software Modules' tool?",
    "answer": "It is recommended that you first look for a specific module with `module spider module_name` from a terminal."
  },
  {
    "question": "What information is shown in the 'Loaded Modules' subpanel?",
    "answer": "The 'Loaded Modules' subpanel displays the list of modules currently loaded in the whole JupyterLab session."
  },
  {
    "question": "How can you view detailed information about an available module?",
    "answer": "By clicking on a module's name in the 'Available modules' list, detailed information about the module is displayed."
  },
  {
    "question": "How do you load a software module using the 'Software Modules' tool?",
    "answer": "To load a module, click on the 'Load' link next to its name in the 'Available modules' list."
  }
]