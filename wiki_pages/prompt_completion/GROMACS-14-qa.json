[
  {
    "question": "What library is included in the GROMACS-LS module?",
    "answer": "The MDStress library is included in the GROMACS-LS module."
  },
  {
    "question": "Where can I find the manual for GROMACS-LS?",
    "answer": "The manual for GROMACS-LS is available at [https://vanegaslab.org/files/Local_stress.pdf Local_stress.pdf]."
  },
  {
    "question": "What type of file is required when invoking `gmx_LS mdrun -rerun` or `gmx_LS trjconv` commands?",
    "answer": "A `.tpr` file is needed when invoking commands like `gmx_LS mdrun -rerun` or `gmx_LS trjconv`."
  },
  {
    "question": "Why can't older versions of GROMACS read `.tpr` files generated by newer GROMACS versions?",
    "answer": "Older GROMACS versions cannot read `.tpr` files from newer versions because new options are added to the format specification with every major release (e.g., 2018, 2019, 2024)."
  },
  {
    "question": "How can a `.tpr` file be made compatible with GROMACS-LS 2016.3 if the simulation was run with a newer GROMACS version?",
    "answer": "You can use `gmx_LS grompp` or `gmx grompp` from the GROMACS 2016.6 version to create a new `.tpr` file using the same input files (*.mdp, topol.top, *.itp, *.gro, etc.) that were used for the original simulation. This new `.tpr` file will then be compatible with GROMACS-LS 2016.3."
  },
  {
    "question": "What should be done if an `.mdp` file contains keywords or features not present in GROMACS 2016 when preparing a `.tpr` file for GROMACS-LS 2016.3?",
    "answer": "If the `.mdp` file uses keywords or features not present in GROMACS 2016 (e.g., `pcouple = C-rescale`), you need to either change it (e.g., to `pcouple = Berendsen`) or remove it. For pressure coupling, the result won't differ as it's processed with the `-rerun` option and pressure coupling won't happen."
  },
  {
    "question": "Does GROMACS-LS 2016.3 support the `cutoff-scheme = Verlet`?",
    "answer": "Yes, GROMACS-LS 2016.3 supports `cutoff-scheme = Verlet` because GROMACS 2016 already included this feature. It can process simulations using either the 'group' or 'verlet' cutoff schemes."
  },
  {
    "question": "What are the correct command invocations for GROMACS-LS `mdrun` and `trjconv` given changes in GROMACS version 5?",
    "answer": "Due to changes in GROMACS version 5 and the GROMACS-LS v4.5.5 manual, you should use `gmx_LS mdrun` and `gmx_LS trjconv` instead of `mdrun_LS` and `trjconv_LS`."
  },
  {
    "question": "What are the limitations of GROMACS-LS in terms of performance and hardware support?",
    "answer": "GROMACS-LS requires compilation in double precision, does not support MPI, SIMD hardware acceleration, or GPUs/CUDA. It is significantly slower than normal GROMACS and can only use a single CPU core."
  },
  {
    "question": "Can `gromacs-ls/2016.3` and `gromacs/2016.6` modules be loaded simultaneously?",
    "answer": "Yes, unlike other patched versions of GROMACS, the `gromacs-ls/2016.3` and `gromacs/2016.6` modules can be loaded at the same time."
  },
  {
    "question": "Which modules are needed to run `gromacs-ls/2016.3` on CPUs in `StdEnv/2023`?",
    "answer": "To run `gromacs-ls/2016.3` on CPUs under `StdEnv/2023`, you need to load `StdEnv/2023`, `gcc/12.3`, and `gromacs-ls/2016.3`."
  },
  {
    "question": "What is the primary function of the `gromacs/2016.6` module in relation to GROMACS-LS?",
    "answer": "The `gromacs/2016.6` module can be used to prepare TPR input files that are compatible with GROMACS-LS."
  },
  {
    "question": "What is GROMACS-RAMD?",
    "answer": "GROMACS-RAMD is a fork of GROMACS that implements the Random Acceleration Molecular Dynamics (RAMD) method."
  },
  {
    "question": "What is the purpose of the Random Acceleration Molecular Dynamics (RAMD) method?",
    "answer": "The RAMD method is used to identify ligand exit routes from buried binding pockets of receptors and to investigate the mechanism of ligand dissociation by applying an additional randomly oriented force to a molecule during molecular dynamics simulations."
  },
  {
    "question": "Where can I find information on RAMD-specific MDP options?",
    "answer": "Information on RAMD-specific MDP options can be found on the GROMACS-RAMD GitHub page ([https://github.com/HITS-MCM/gromacs-ramd GROMACS-RAMD GitHub page])."
  },
  {
    "question": "How do I load the CPU version of `gromacs-ramd/2024.1-RAMD-2.1` for `StdEnv/2023`?",
    "answer": "To load the CPU version of `gromacs-ramd/2024.1-RAMD-2.1` for `StdEnv/2023`, use the command `module load StdEnv/2023 gcc/12.3 openmpi/4.1.5 gromacs-ramd/2024.1-RAMD-2.1`."
  },
  {
    "question": "What modules are required for the GPU version of `gromacs-ramd/2024.1-RAMD-2.1` under `StdEnv/2023`?",
    "answer": "For the GPU version of `gromacs-ramd/2024.1-RAMD-2.1` under `StdEnv/2023`, the required modules are `StdEnv/2023`, `gcc/12.3`, `openmpi/4.1.5`, `cuda/12.2`, and `gromacs-ramd/2024.1-RAMD-2.1`."
  }
]