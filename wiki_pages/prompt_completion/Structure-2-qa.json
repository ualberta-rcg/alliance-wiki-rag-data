[
  {
    "question": "What is StructureHarvester?",
    "answer": "StructureHarvester is a website and program for visualizing STRUCTURE output and implementing the Evanno method, as well as aggregating results from multiple Structure runs."
  },
  {
    "question": "Where can I find the homepage for StructureHarvester?",
    "answer": "The homepage for StructureHarvester is http://alumni.soe.ucsc.edu/~dearl/software/structureHarvester/, and its GitHub repository is https://github.com/dentearl/structureHarvester."
  },
  {
    "question": "What is a practical consideration for efficiently running StrAuto jobs on HPC clusters?",
    "answer": "For optimal efficiency, the total number of Structure runs should be a multiple of the number of requested tasks; otherwise, some allocated CPUs may sit idle, leading to wasted computing resources."
  },
  {
    "question": "What is the recommendation for StrAuto jobs with individual Structure runs that take more than a few hours?",
    "answer": "In cases where an individual Structure run takes more than just a few hours to finish, it is recommended to submit each Structure run as an individual job to Slurm."
  },
  {
    "question": "What is the purpose of the `create_strauto_slurm_scripts.py` script?",
    "answer": "The `create_strauto_slurm_scripts.py` script is designed to help run Structure jobs on Compute Canada HPC clusters that use the Slurm Workload manager, in conjunction with Structure, StrAuto, and StructureHarvester."
  },
  {
    "question": "What software components are required to use the `create_strauto_slurm_scripts.py` script?",
    "answer": "The `create_strauto_slurm_scripts.py` script requires Structure, StrAuto, and StructureHarvester."
  },
  {
    "question": "What files must be placed in the same directory as `create_strauto_slurm_scripts.py` for its usage?",
    "answer": "The `create_strauto_slurm_scripts.py` script needs to be in a directory along with `strauto_1.py`, `input.py` (from StrAuto), `structureHarvester.py`, `harvesterCore.py` (from StructureHarvester), and the Structure dataset file (e.g., `my_dataset.str`)."
  },
  {
    "question": "How do you make the `create_strauto_slurm_scripts.py` script executable?",
    "answer": "You can make `create_strauto_slurm_scripts.py` executable using the command `chmod u+x create_strauto_slurm_scripts.py`."
  },
  {
    "question": "Which setting in `input.py` needs to be configured for parallel Structure runs?",
    "answer": "The `parallel` option in `input.py` must be set to `True` (question 23) for parallel Structure runs."
  },
  {
    "question": "What parameters within the `create_strauto_slurm_scripts.py` script can be adjusted by the user?",
    "answer": "Users can adjust `max_jobtime`, `slurm_account`, and `submit_delay` (and optionally `job_prefix`) within the `create_strauto_slurm_scripts.py` script itself."
  },
  {
    "question": "What is the command to load the required Python module before running the StrAuto and script generation steps?",
    "answer": "The command `module load python/2.7` should be run."
  },
  {
    "question": "What command initiates the creation of 'mainparams' and 'extraparams' files for the dataset?",
    "answer": "The command `./strauto_1.py` initiates the creation of 'mainparams' and 'extraparams' files."
  },
  {
    "question": "What output is generated after running `./create_strauto_slurm_scripts.py`?",
    "answer": "Running `./create_strauto_slurm_scripts.py` creates SLURM job scripts, directories for results and logs, a submission helper script (`submit_strauto_jobs.sh`), and a post-processing script (`post_strauto.sh`)."
  },
  {
    "question": "How are the SLURM jobs submitted after running `create_strauto_slurm_scripts.py`?",
    "answer": "The SLURM jobs are submitted by running the generated helper script: `bash submit_strauto_jobs.sh`."
  },
  {
    "question": "What is the final step after all Structure jobs have completed when using the `create_strauto_slurm_scripts.py` workflow?",
    "answer": "After all jobs have completed, run `bash post_strauto.sh` to aggregate the results and execute StructureHarvester."
  },
  {
    "question": "Under what license is the `create_strauto_slurm_scripts.py` script distributed?",
    "answer": "The `create_strauto_slurm_scripts.py` script is distributed under the conditions of the 'MIT License'."
  }
]