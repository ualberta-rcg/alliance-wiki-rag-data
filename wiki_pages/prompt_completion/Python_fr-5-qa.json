[
  {
    "question": "Comment puis-je lister une version sp\u00e9cifique d'un paquet Python 'wheel' en utilisant la commande `avail_wheels` ?",
    "answer": "Vous pouvez lister une version sp\u00e9cifique d'un wheel en utilisant le format de `pip` comme `avail_wheels numpy==1.23` ou la version longue `avail_wheels numpy --version 1.23`."
  },
  {
    "question": "Quels op\u00e9rateurs puis-je utiliser pour filtrer les versions des paquets avec la commande `avail_wheels` ?",
    "answer": "Vous pouvez utiliser les op\u00e9rateurs `==`, `<`, `>`, `~=`, `<=`, `>=`, et `!=` pour filtrer les versions des paquets avec `avail_wheels`, par exemple `avail_wheels 'numpy<1.23'`."
  },
  {
    "question": "Comment lister toutes les versions disponibles d'un paquet sp\u00e9cifique, et non seulement la plus r\u00e9cente, avec `avail_wheels` ?",
    "answer": "Pour lister toutes les versions disponibles d'un paquet, utilisez l'option `--all-version` avec la commande `avail_wheels`, par exemple `avail_wheels \"*cdf*\" --all-version`."
  },
  {
    "question": "Comment lister les wheels disponibles pour une version sp\u00e9cifique de Python ?",
    "answer": "Pour lister les wheels pour une version particuli\u00e8re de Python, utilisez l'option `--python`, par exemple `avail_wheels 'numpy<1.23' --python 3.9`."
  },
  {
    "question": "Que signifie l'abr\u00e9viation 'cp39' dans la colonne 'python' de la sortie de `avail_wheels` ?",
    "answer": "Dans la colonne 'python' de la sortie de `avail_wheels`, `cp39` est utilis\u00e9 pour `cpython 3.9`, indiquant la version de Python pour laquelle le wheel est disponible."
  },
  {
    "question": "Comment v\u00e9rifier si les wheels disponibles sur la plateforme incluent ceux list\u00e9s dans un fichier `requirements.txt` ?",
    "answer": "Vous pouvez v\u00e9rifier si les wheels disponibles incluent ceux de votre fichier `requirements.txt` en lan\u00e7ant la commande `avail_wheels -r requirements.txt`."
  },
  {
    "question": "Comment lister les paquets de mon fichier `requirements.txt` qui ne sont *pas* disponibles sous forme de wheels sur la plateforme ?",
    "answer": "Pour lister les paquets de votre fichier `requirements.txt` qui ne sont pas disponibles, utilisez la commande `avail_wheels -r requirements.txt --not-available`."
  },
  {
    "question": "Quelle est la proc\u00e9dure pour pr\u00e9t\u00e9l\u00e9charger un paquet Python et l'installer sur un n\u0153ud de calcul ?",
    "answer": "La proc\u00e9dure consiste \u00e0 lancer `pip download --no-deps package_name` sur un n\u0153ud de connexion pour t\u00e9l\u00e9charger le wheel, puis \u00e0 utiliser `pip install chemin/vers/le/fichier.whl` sur le n\u0153ud de calcul pour l'installer."
  },
  {
    "question": "Que dois-je faire si le nom de fichier d'un wheel pr\u00e9t\u00e9l\u00e9charg\u00e9 se termine par `linux_x86_64` ou `manylinux*_x86_64` ?",
    "answer": "Si le nom du fichier du wheel se termine par `linux_x86_64` ou `manylinux*_x86_64`, il est possible que le wheel ne fonctionne pas correctement. Vous devriez contacter le soutien technique pour qu'il puisse \u00eatre compil\u00e9 et rendu disponible sur les superordinateurs."
  }
]