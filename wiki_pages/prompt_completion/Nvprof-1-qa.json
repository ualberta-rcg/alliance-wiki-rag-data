[
  {
    "question": "What is Nvprof?",
    "answer": "Nvprof is a command-line, lightweight, GUI-less profiler available for Linux, Windows, and Mac OS."
  },
  {
    "question": "What kind of activities can Nvprof profile?",
    "answer": "Nvprof allows you to collect and view profiling data of CUDA-related activities on both CPU and GPU, including kernel execution and memory transfers."
  },
  {
    "question": "How are profiling options provided to Nvprof?",
    "answer": "Profiling options should be provided to the profiler via command-line options."
  },
  {
    "question": "What textual reports can Nvprof provide?",
    "answer": "Nvprof is capable of providing a textual report including a summary of GPU and CPU activity, a trace of GPU and CPU activity, and event collection."
  },
  {
    "question": "How does Nvprof support headless profile collection?",
    "answer": "Nvprof can be used on a headless node to collect data, which can then be visualized with the Nvidia Visual Profiler."
  },
  {
    "question": "What needs to be disabled on B\u00e9luga and Narval before using Nvprof?",
    "answer": "The NVIDIA Data Center GPU Manager (DCGM) needs to be disabled."
  },
  {
    "question": "How do you disable DCGM during a job submission on B\u00e9luga or Narval?",
    "answer": "You must use the command `DISABLE_DCGM=1 salloc --gres=gpu:1 ...` during your job submission."
  },
  {
    "question": "How can you verify that the DCGM monitoring service has stopped?",
    "answer": "You can use the loop `while [ ! -z \"$(dcgmi -v | grep 'Hostengine build info:')\" ]; do sleep 5; done` which waits until `grep` returns nothing."
  },
  {
    "question": "What is the first step before profiling with Nvprof regarding environment modules?",
    "answer": "The appropriate CUDA module needs to be loaded."
  },
  {
    "question": "How can you check available CUDA versions compatible with your loaded compiler and MPI modules?",
    "answer": "Run `module avail cuda`."
  },
  {
    "question": "How can you see a comprehensive list of all CUDA modules?",
    "answer": "Run `module -r spider '.*cuda.*'`."
  },
  {
    "question": "How do you load a specific CUDA module version?",
    "answer": "Use `module load cuda/version`, for example, `module load cuda/10.0`."
  },
  {
    "question": "What environment variable needs to be set after loading the CUDA module for Nvprof to find CUDA libraries?",
    "answer": "You need to set `export LD_LIBRARY_PATH=$EBROOTCUDA/lib64:$LD_LIBRARY_PATH`."
  },
  {
    "question": "What is required before using Nvprof to get useful information?",
    "answer": "You first need to compile your code with one of the Cuda compilers, such as `nvcc` for C."
  },
  {
    "question": "What is the default operating mode for Nvprof?",
    "answer": "Summary mode is the default operating mode for Nvprof."
  },
  {
    "question": "What kind of output does Nvprof's summary mode provide?",
    "answer": "It outputs a single result line for each instruction, such as a kernel function or CUDA memory copy/set performed by the application."
  },
  {
    "question": "What metrics does Nvprof's summary mode report for kernel functions?",
    "answer": "For each kernel function, Nvprof outputs the total time of all instances, as well as the average, minimum, and maximum time."
  }
]