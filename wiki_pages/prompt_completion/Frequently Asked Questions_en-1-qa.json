[
  {
    "question": "How can I reset my password for an Alliance national cluster?",
    "answer": "You can reset your password by visiting https://ccdb.computecanada.ca/security/forgot."
  },
  {
    "question": "When will I be able to reset my password for an Alliance national cluster?",
    "answer": "You will not be able to reset your password until your first role gets approved by the staff."
  },
  {
    "question": "What is the function of [Ctrl]+C in the Linux terminal?",
    "answer": "In the Linux terminal, [Ctrl]+C means 'Cancel' or 'Interrupt' and stops the running program."
  },
  {
    "question": "How do you copy text in a Linux terminal?",
    "answer": "In most cases under Windows and Linux, you can use [Ctrl]+[Insert] to copy text in the terminal."
  },
  {
    "question": "How do you paste text in a Linux terminal?",
    "answer": "In most cases under Windows and Linux, you can use [Shift]+[Insert] to paste text in the terminal."
  },
  {
    "question": "What keyboard shortcuts do macOS users use for copy and paste in the terminal?",
    "answer": "Users of macOS can continue to use [Cmd]+C to copy and [Cmd]+V to paste."
  },
  {
    "question": "What is an alternative way to copy and paste text in some terminal software?",
    "answer": "You can simply select the text to copy it into the clipboard, and then paste from the clipboard by using either the right-click or middle-click."
  },
  {
    "question": "What problem can arise from text files prepared in a Windows environment when read in Linux?",
    "answer": "Text files prepared in a Windows environment have an additional invisible 'carriage return' character at the end of each line, which can cause problems when reading them in a Linux environment."
  },
  {
    "question": "How can I avoid issues with text file line endings when working with Linux clusters?",
    "answer": "You should either create and edit your text files directly on the cluster using Linux text editors like emacs, vim, and nano, or convert them using the `dos2unix <filename>` command on the cluster login node if you prefer editing on Windows."
  },
  {
    "question": "Why can saving files be slow in Emacs on shared filesystems?",
    "answer": "Emacs uses the `fsync` system call when saving files to reduce data loss risk during a system crash, which can take several seconds when writing to shared filesystems like home, scratch, or project."
  },
  {
    "question": "How can I improve file saving performance in Emacs?",
    "answer": "To increase performance, add the line `(setq write-region-inhibit-fsync t)` to your `~/.emacs` file."
  },
  {
    "question": "What are the quota policies for scratch, home, and project filesystems on general purpose clusters?",
    "answer": "The scratch and home filesystems have per-user quotas, while the project filesystem has per-project quotas."
  },
  {
    "question": "How are quotas implemented on the Lustre filesystem?",
    "answer": "Quotas on the Lustre filesystem are currently based on group ownership of files."
  },
  {
    "question": "What is the correct group ownership for files on scratch and home filesystems?",
    "answer": "On scratch and home filesystems, the correct group is typically the group with the same name as your username."
  },
  {
    "question": "What is the correct group ownership pattern for files on the project filesystem?",
    "answer": "On the project filesystem, the group name should follow the pattern `prefix-piusername`, where `prefix` is usually `def`, `rrg`, or `rpp`."
  },
  {
    "question": "How do you move files between the scratch and home filesystems?",
    "answer": "You can use the `mv` command, for example `mv $HOME/scratch/some_file $HOME/some_file`, because quotas for these filesystems are based on your personal group."
  },
  {
    "question": "What command should NOT be used when moving files from scratch or home to a project space?",
    "answer": "You should not use the `mv` command when moving files from your scratch or home space into a project space."
  },
  {
    "question": "What commands are recommended for moving files from scratch or home to a project space?",
    "answer": "It is recommended to use the `cp` command or the `rsync` command when moving files from scratch or home to a project space."
  },
  {
    "question": "What options are important when using `cp` to move files to a project space?",
    "answer": "When using `cp` to move files to a project space, you should not use the archive `-a` option."
  },
  {
    "question": "What options are important when using `rsync` to move files from scratch or home to a project space?",
    "answer": "When using `rsync` to move files from scratch or home to a project space, you must specify the `--no-g --no-p` options, for example: `rsync -axvH --no-g --no-p $HOME/scratch/some_directory $HOME/projects/<project>/some_other_directory`."
  },
  {
    "question": "What should be done with original files after copying them from scratch to a project space?",
    "answer": "Once the files are copied, you should delete them from your scratch space."
  },
  {
    "question": "What command should NOT be used when moving files from a project space to scratch or home?",
    "answer": "You should not use the `mv` command when moving files from your project space into your scratch or home space."
  },
  {
    "question": "What commands are recommended for moving files from a project space to scratch or home?",
    "answer": "It is recommended to use the `cp` command or the `rsync` command when moving files from a project space to scratch or home."
  },
  {
    "question": "What options are important when using `cp` to move files from a project space to scratch or home?",
    "answer": "When using `cp` to move files from a project space to scratch or home, you should not use the archive `-a` option."
  },
  {
    "question": "What options are important when using `rsync` to move files from a project space to scratch or home?",
    "answer": "When using `rsync` to move files from a project space to scratch or home, you must specify the `--no-g --no-p` options, for example: `rsync -axvH --no-g --no-p $HOME/projects/<project>/some_other_directory $HOME/scratch/some_directory`."
  }
]