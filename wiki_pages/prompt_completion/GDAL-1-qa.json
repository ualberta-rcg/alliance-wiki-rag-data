[
  {
    "question": "What is GDAL?",
    "answer": "GDAL is an open source translator library for raster geospatial data formats."
  },
  {
    "question": "How can GDAL be used?",
    "answer": "It can be used as a library, presenting a single abstract data model, and also comes with command-line utilities for data translation and processing."
  },
  {
    "question": "What type of data does GDAL process?",
    "answer": "GDAL processes raster geospatial data formats."
  },
  {
    "question": "In which programming languages can GDAL functionality be used?",
    "answer": "GDAL's functionality can be used in scripts written in Python or R."
  },
  {
    "question": "How is GDAL functionality accessed from Python?",
    "answer": "GDAL functionality can be used via the `osgeo` package, which is installed as an extension to the GDAL module."
  },
  {
    "question": "What is required to use the `osgeo` package in Python?",
    "answer": "To use the `osgeo` package, a compatible Python module needs to be loaded alongside the GDAL module."
  },
  {
    "question": "How can you check compatible Python modules for `gdal/3.5.1` under `StdEnv/2020`?",
    "answer": "You can check compatible Python modules by running the command `module whatis gdal/3.5.1`."
  },
  {
    "question": "Which Python modules are compatible with `gdal/3.5.1`?",
    "answer": "The Python modules compatible with `gdal/3.5.1` are `python/3.8`, `python/3.9`, and `python/3.10`."
  },
  {
    "question": "What command is used to load `StdEnv/2020`, `gcc/9.3.0`, `python/3.10`, and `gdal/3.5.1`?",
    "answer": "The command is `module load StdEnv/2020 gcc/9.3.0 python/3.10 gdal/3.5.1`."
  },
  {
    "question": "How can you determine the `osgeo.gdal` version in a Python script?",
    "answer": "You can import `gdal` from `osgeo` and then print `gdal.__version__`."
  },
  {
    "question": "Which Python modules are compatible with `gdal/3.7.2`?",
    "answer": "The Python modules compatible with `gdal/3.7.2` are `python/3.10` and `python/3.11`."
  },
  {
    "question": "What command loads `StdEnv/2023` with `gcc/12.3`, `python/3.11`, and `gdal/3.7.2`?",
    "answer": "The command is `module load StdEnv/2023 gcc/12.3 python/3.11 gdal/3.7.2`."
  },
  {
    "question": "Which R packages for spatial data analysis depend on GDAL?",
    "answer": "R packages such as `sf` (Simple Features for R) and `terra` (Spatial Data Analysis) directly depend on GDAL."
  },
  {
    "question": "Which older R package for spatial data has been discontinued in favor of `sf` and `terra`?",
    "answer": "The older package `rgdal` has been discontinued."
  },
  {
    "question": "What additional module is required besides `gdal` when installing `sf` and `terra` under `StdEnv/2020`?",
    "answer": "When installing `sf` and `terra` under `StdEnv/2020`, the `udunits` module is also required, as it's needed by the `units` package."
  },
  {
    "question": "What modules need to be loaded to install `sf` and `terra` under `StdEnv/2020`?",
    "answer": "The required modules are `StdEnv/2020`, `gcc/9.3.0`, `udunits/2.2.28`, `gdal/3.5.1`, and `r/4.2.2`."
  },
  {
    "question": "How do you set up a local R library for `R/4.2` in the home directory?",
    "answer": "First, create the directory with `mkdir -p $HOME/R/x86_64-pc-linux-gnu-library/4.2`, then export it to `R_LIBS` using `export R_LIBS=\"$HOME/R/x86_64-pc-linux-gnu-library/4.2:$R_LIBS\"`."
  },
  {
    "question": "What is the command to install the R packages `sf` and `terra` from a Canadian CRAN mirror?",
    "answer": "The command is `R -e \"install.packages(c('sf', 'terra'), repos='https://mirror.csclub.uwaterloo.ca/CRAN/', dep=TRUE)\"`."
  }
]