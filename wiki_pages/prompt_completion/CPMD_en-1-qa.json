[
  {
    "question": "What is CPMD?",
    "answer": "CPMD is a plane wave/pseudo-potential DFT code used for ab initio molecular dynamics simulations."
  },
  {
    "question": "What was the previous requirement to access CPMD software?",
    "answer": "In the past, accessing CPMD required registration and confirmation with the developers."
  },
  {
    "question": "Is registration on the CPMD website still required to use the software on clusters?",
    "answer": "No, registration on the CPMD website is no longer needed."
  },
  {
    "question": "What protects the CPMD modules installed on the clusters?",
    "answer": "The CPMD modules installed on the clusters are protected by a POSIX group."
  },
  {
    "question": "How can a user gain access to CPMD on the clusters?",
    "answer": "Users must send a support request to be added to the POSIX group that provides access to the software."
  },
  {
    "question": "How do you access CPMD once granted access on the clusters?",
    "answer": "CPMD can be accessed by loading a module."
  },
  {
    "question": "What are the specific modules to load CPMD 4.3?",
    "answer": "You need to load `StdEnv/2020`, `intel/2020.1.217`, `openmpi/4.0.3`, and `cpmd/4.3`."
  },
  {
    "question": "Why might a registered CPMD user choose to perform a local installation?",
    "answer": "A local installation might be chosen because responses from CPMD admins for central installations can take weeks or months, and registered users have access to the source files."
  },
  {
    "question": "What software environment is used for building CPMD locally?",
    "answer": "The software environment called EasyBuild is used for building CPMD locally."
  },
  {
    "question": "What directory needs to be created to place CPMD source files for a local EasyBuild installation?",
    "answer": "Users should create the directory `~/.local/easybuild/sources/c/CPMD`."
  },
  {
    "question": "What types of files are needed for a local CPMD 4.3 installation?",
    "answer": "CPMD source tarballs (e.g., `cpmd2cube.tar.gz`, `cpmd2xyz-scripts.tar.gz`, `cpmd-v4.3.tar.gz`, `fourier.tar.gz`) and patches (e.g., `patch.to.4612`) are needed."
  },
  {
    "question": "What is the EasyBuild command to install CPMD 4.3 locally?",
    "answer": "The command is `$ eb CPMD-4.3-iomkl-2020a.eb --rebuild`."
  },
  {
    "question": "What does the `--rebuild` option do in the EasyBuild command for CPMD?",
    "answer": "The `--rebuild` option forces EasyBuild to ignore any centrally installed CPMD 4.3 and proceed with the installation in the user's `/home` directory instead."
  },
  {
    "question": "What should be done after a local CPMD installation with EasyBuild?",
    "answer": "After installation, the user should log out and log back in."
  },
  {
    "question": "How can a user verify that their locally installed CPMD is being picked up by the module system?",
    "answer": "After logging in and loading modules, typing `module load cpmd` and then `which cpmd.x` should show the path to the installation in the user's `/home` directory (e.g., `~/.local/easybuild/software/.../cpmd/4.3/bin/cpmd.x`)."
  },
  {
    "question": "What two main components are necessary to run a CPMD job?",
    "answer": "To run a CPMD job, an input file and access to pseudo-potentials are needed."
  },
  {
    "question": "How do you run CPMD in parallel if the input file and pseudo-potentials are in the same directory?",
    "answer": "The command is `srun cpmd.x <input files> > <output file>`."
  },
  {
    "question": "How do you run CPMD in parallel if the pseudo-potentials are in a different directory than the input file?",
    "answer": "The command is `srun cpmd.x <input files> <path to pseudo potentials location> > <output file>`."
  },
  {
    "question": "What type of calculation is performed in the example input file '1-h2-wave.inp'?",
    "answer": "The example input file '1-h2-wave.inp' demonstrates a single point calculation for an isolated hydrogen molecule."
  }
]