[
  {
    "question": "What is gprof?",
    "answer": "gprof is a profiling software that collects information and compiles statistics on your code. It does this by inserting timing instructions into functions and subroutines, and then interpreting a raw data file generated from the execution of the modified program."
  },
  {
    "question": "How does gprof gather profiling statistics?",
    "answer": "gprof generally searches for functions and subroutines in your program, inserts timing instructions for each, and then interprets a raw data file created by executing such a modified program to turn it into profiling statistics."
  },
  {
    "question": "Which software suite includes gprof?",
    "answer": "gprof comes with the GNU compiler suite and is available via the `gcc` module on clusters."
  },
  {
    "question": "How do you load the GNU compiler for gprof profiling?",
    "answer": "You need to load the appropriate GNU compiler, for instance, by running `module load gcc/7.3.0` for GCC."
  },
  {
    "question": "What compilation option is required to enable gprof profiling?",
    "answer": "To get useful information from gprof, you need to compile your code with the `-pg` option. This option tells the compiler to generate extra code for profile information suitable for analysis."
  },
  {
    "question": "What error might occur if code is compiled without the `-pg` option for gprof?",
    "answer": "Without the `-pg` option, no call-graph data will be gathered, and you may receive the error: `gprof: gmon.out file is missing call-graph data`."
  },
  {
    "question": "How do you execute your code after compiling it for gprof profiling?",
    "answer": "You execute your code the same way you would normally, for example, `/path/to/your/executable arg1 arg2`. The execution line does not change when profiling with gprof."
  },
  {
    "question": "What file is generated after a gprof-instrumented program finishes execution?",
    "answer": "After the binary has executed and finished without errors, a new file named `gmon.out` is created in the current working directory, or in the new working directory if the code changes it."
  },
  {
    "question": "How do you generate the final profiling analysis file using gprof?",
    "answer": "You execute the gprof tool with the binary name and the `gmon.out` file as arguments, typically redirecting the output to a file, like so: `gprof /path/to/your/executable gmon.out > analysis.txt`."
  }
]