[
  {
    "question": "What is ParaView?",
    "answer": "ParaView is a general-purpose 3D scientific visualization tool."
  },
  {
    "question": "What are the key features of ParaView?",
    "answer": "ParaView is open-source, compiles on Linux, Windows, and Mac, understands many input file formats, provides multiple rendering modes, supports Python scripting, and can scale to tens of thousands of processors for very large datasets."
  },
  {
    "question": "Does ParaView support Python scripting?",
    "answer": "Yes, ParaView supports Python scripting."
  },
  {
    "question": "Where can I find official documentation for ParaView?",
    "answer": "You can find official ParaView documentation at http://www.paraview.org/documentation."
  },
  {
    "question": "What is VisIt?",
    "answer": "VisIt is an open-source, general-purpose 3D scientific data analysis and visualization tool."
  },
  {
    "question": "How does VisIt scale?",
    "answer": "VisIt scales from interactive analysis on laptops to very large HPC projects on tens of thousands of processors."
  },
  {
    "question": "Where can I find VisIt tutorials?",
    "answer": "VisIt tutorials are available at http://www.visitusers.org/index.php?title=VisIt_Tutorial, along with sample datasets."
  },
  {
    "question": "What is VMD used for?",
    "answer": "VMD is an open-source molecular visualization program for displaying, animating, and analyzing large biomolecular systems in 3D."
  },
  {
    "question": "What scripting languages does VMD support?",
    "answer": "VMD supports scripting in Tcl and Python."
  },
  {
    "question": "On which platforms does VMD run?",
    "answer": "VMD runs on MacOS X, Linux, and Windows."
  },
  {
    "question": "Where can I find the VMD User's Guide?",
    "answer": "The VMD User's Guide is available at http://www.ks.uiuc.edu/Research/vmd/current/ug."
  },
  {
    "question": "What does VTK stand for and what is it?",
    "answer": "VTK stands for The Visualization Toolkit, which is an open-source package for 3D computer graphics, image processing, and visualization."
  },
  {
    "question": "What does the VTK toolkit include?",
    "answer": "The VTK toolkit includes a C++ class library and interfaces for interpreted languages such as Tcl/Tk, Java, and Python."
  },
  {
    "question": "Which popular visualization packages were based on VTK?",
    "answer": "ParaView and VisIt were based on VTK."
  },
  {
    "question": "What is YT?",
    "answer": "YT is a Python library for analyzing and visualizing volumetric, multi-resolution data."
  },
  {
    "question": "What kind of data was YT initially developed for?",
    "answer": "YT was initially developed for astrophysical simulation data."
  },
  {
    "question": "What are the recommended options for remote visualization on Alliance systems?",
    "answer": "For interactive rendering, client-server visualization on interactive or high-priority nodes is recommended. For non-interactive visualization, off-screen batch jobs on regular compute nodes are recommended."
  },
  {
    "question": "What are the less efficient options for remote GUI visualization?",
    "answer": "Less efficient options for remote GUI visualization are X11-forwarding and VNC, though for some packages they are the only available remote GUI options."
  },
  {
    "question": "How does client-server interactive visualization work?",
    "answer": "In client-server mode, all data is processed remotely on the cluster (using CPU or GPU rendering), while the user interacts with the visualization through a GUI client on their local computer."
  },
  {
    "question": "Which visualization tools support client-server mode?",
    "answer": "ParaView and VisIt both support client-server mode."
  },
  {
    "question": "When should X11-forwarding be avoided?",
    "answer": "X11-forwarding should be avoided for any heavy graphics, as it is much slower than VNC and requires many round trips."
  },
  {
    "question": "How do you connect to a cluster with X11-forwarding on Rorqual, Fir, Nibi, or Narval?",
    "answer": "Connect to the cluster with the `-X/-Y` flag for X11-forwarding via ssh."
  },
  {
    "question": "How do you start a graphical application on a login node using X11-forwarding on Rorqual, Fir, Nibi, or Narval?",
    "answer": "After connecting with X11-forwarding, use `module load vmd` and `vmd` to start a graphical application like VMD on the login node for small visualizations."
  },
  {
    "question": "How do you request interactive resources on a compute node for large visualizations with X11-forwarding on Rorqual, Fir, Nibi, or Narval?",
    "answer": "Use `salloc --time=1:00:0 --ntasks=1 --mem=3500 --account=def-someprof --x11` to request interactive resources on a compute node."
  },
  {
    "question": "What are the steps to perform an interactive visualization session on Trillium using X11-forwarding?",
    "answer": "The steps are: ssh into trillium.alliancecan.ca with the `-X/-Y` flag, request an interactive job using `debugjob`, then run your visualization program (e.g., `module load vmd; vmd`) inside the job, and finally exit the debug session."
  },
  {
    "question": "When would you use Xvfb for off-screen rendering?",
    "answer": "Xvfb is used when applications insist on displaying graphical output but you don't need to see them, as the results are saved in a file, allowing the job to run as a regular batch job."
  },
  {
    "question": "How do you run an application with Xvfb using the CPU for rendering?",
    "answer": "You can run it with `xvfb-run <name-of-application>`."
  },
  {
    "question": "How do you run an application with Xvfb using the GPU for rendering?",
    "answer": "You can run it with `xvfb-run vglrun -d egl <name-of-application>`, in which case you also need to reserve one GPU with Slurm."
  },
  {
    "question": "Why is VNC recommended over X11-forwarding for starting graphical user interfaces?",
    "answer": "VNC is recommended because X11-forwarding can result in a very slow connection for graphical user interfaces like Matlab."
  },
  {
    "question": "How can users request a visualization workshop?",
    "answer": "Users can request a visualization workshop by contacting support@tech.alliancecan.ca."
  },
  {
    "question": "What are some topics covered in the Western Canada visualization training webinars?",
    "answer": "Topics include the YT series, scientific visualization with Plotly, novel visualization techniques, data visualization on Compute Canada's Supercomputers, ParaViewWeb, scripting in VisIt, CPU-based rendering with OSPRay, 3D graphs with NetworkX/VTK/ParaView, and graph visualization with Gephi."
  },
  {
    "question": "Where can I find visualization webinars and training materials from Western Canada?",
    "answer": "Video recordings and slides from many visualization webinars can be found on the Western Canada visualization training materials page at https://training.westdri.ca/tools/visualization."
  },
  {
    "question": "How can I get help with visualization on Alliance systems?",
    "answer": "You can contact Technical support for visualization help."
  }
]