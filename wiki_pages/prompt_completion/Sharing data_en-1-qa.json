[
  {
    "question": "Why is it forbidden to issue a bulk `chmod -R 777` command on your home folder or any other folder on shared facilities?",
    "answer": "Issuing a bulk `chmod -R 777` is a huge security risk, completely unacceptable on shared facilities, and never necessary."
  },
  {
    "question": "What is the recommended method for sharing data with a colleague who is a member of the same research group?",
    "answer": "The best approach is to utilize the project space that each research group shares in common."
  },
  {
    "question": "How can a user request the creation of a group on one of the national clusters?",
    "answer": "Users cannot create their own groups; they must contact technical support to request the creation of a group."
  },
  {
    "question": "How can data be shared with a person who does not have an account on the cluster?",
    "answer": "You can use Globus, specifically a shared endpoint, to share data with someone who doesn't have an account on the cluster."
  },
  {
    "question": "What is the simplest way to share data with a colleague who has an account on the cluster but does not belong to your common research group?",
    "answer": "The simplest approach is to use the permissions available in the filesystem to share the data."
  },
  {
    "question": "What is required for an individual to access a shared file, beyond just having permissions to the file itself?",
    "answer": "The individual must have execute permission for the entire chain of directories leading from `/scratch` or `/project` to the directory in which the file is located."
  },
  {
    "question": "What types of permissions do filesystems on clusters support?",
    "answer": "Filesystems on clusters support read, write, and execute permissions for files and directories."
  },
  {
    "question": "What error message will you see if you attempt to access a file or directory without the necessary permissions?",
    "answer": "You will see the error message 'Permission denied'."
  },
  {
    "question": "What are the three categories of users for which filesystem object permissions are defined?",
    "answer": "The three categories are the object's owner, members of the object's group, and everyone else."
  },
  {
    "question": "How many permissions are associated with each filesystem object in total?",
    "answer": "There are nine permissions associated with each object, derived from three categories of users multiplied by three types of permission."
  },
  {
    "question": "Which command is used to view the current permissions for a filesystem object?",
    "answer": "The command `ls -l name_of_object` is used to view the current permissions."
  },
  {
    "question": "What do the permissions `-rw-r--r--` for a file indicate?",
    "answer": "These permissions mean the owner can read and write the file but not execute it, while members of the group and everyone else can only read the file."
  },
  {
    "question": "What command is used to change the permissions of a file or directory?",
    "answer": "The `chmod` command is used to change the permissions of a file or directory."
  },
  {
    "question": "What abbreviations are used for user categories when modifying permissions with `chmod`?",
    "answer": "The abbreviations are `u` for the owner (user), `g` for the group, `o` for others (everyone else), and `a` for all (everyone)."
  },
  {
    "question": "How would you grant read permission to all members of the group that `file.txt` belongs to using `chmod`?",
    "answer": "You would use the command `chmod g+r file.txt`."
  },
  {
    "question": "How would you withdraw execute permission for `script.py` from everyone except its owner and group?",
    "answer": "You would use the command `chmod o-x script.py`."
  },
  {
    "question": "How would you grant everyone on the cluster the right to read `file.txt`?",
    "answer": "You would use the command `chmod a+r file.txt`."
  },
  {
    "question": "What is an alternative notation often used to refer to Unix filesystem permissions besides symbolic notation?",
    "answer": "Octal notation is also commonly used for Unix filesystem permissions."
  },
  {
    "question": "How is the numerical value for octal permissions calculated for each category of user?",
    "answer": "It's calculated by interpreting three bits as a number from 0 to 7 using the formula: (read_bit)*4 + (write_bit)*2 + (execute_bit)*1."
  },
  {
    "question": "What is the octal representation for the permissions `-rw-r--r--`?",
    "answer": "The octal representation for `-rw-r--r--` is 644, where 6 is for the owner (read+write), and 4 is for the group and everyone else (read only)."
  },
  {
    "question": "How can you use `chmod` with octal notation to give read, write, and execute permissions to everyone in your group for `name_of_file`?",
    "answer": "You can use the command `chmod 770 name_of_file`."
  },
  {
    "question": "Who can modify the permissions of a file or directory?",
    "answer": "Only the owner of a file or directory can modify its permissions."
  },
  {
    "question": "Which command is used to alter the group ownership of a file or directory?",
    "answer": "The `chgrp` command is used to alter the group ownership of a file or directory."
  }
]