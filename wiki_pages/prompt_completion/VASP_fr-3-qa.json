[
  {
    "question": "How much memory per CPU does the example VASP job script request?",
    "answer": "The example VASP job script requests 1024MB of memory per CPU."
  },
  {
    "question": "What is the total memory requested by the example VASP job script for four cores?",
    "answer": "The example VASP job script requests 4096MB of total memory for four cores."
  },
  {
    "question": "What does `<ACCOUNT>` represent in the VASP job script?",
    "answer": "`<ACCOUNT>` represents the name of the Slurm account; consult the 'Comptes et projets' section of 'Ex\u00e9cuter des t\u00e2ches' for the value."
  },
  {
    "question": "What VASP versions can be used with the example job script?",
    "answer": "The VASP versions that can be used with the example job script are 4.6, 5.4.1, 5.4.4, or 6.1.0."
  },
  {
    "question": "What does `<VASP>` refer to in the VASP job script?",
    "answer": "`<VASP>` is the name of the executable; refer to the 'Programmes ex\u00e9cutables' section for choices."
  },
  {
    "question": "How many CPU processes does the example VASP GPU job script request per task?",
    "answer": "The example VASP GPU job script requests one CPU process per task."
  },
  {
    "question": "How much memory does the example VASP GPU job script request?",
    "answer": "The example VASP GPU job script requests 3GB of memory."
  },
  {
    "question": "What type of GPU is requested in the example VASP GPU job script?",
    "answer": "The example VASP GPU job script requests one p100 type GPU."
  },
  {
    "question": "On which cluster is the p100 GPU type valid for the VASP GPU script?",
    "answer": "The p100 GPU type requested in the VASP GPU job script is valid only for Cedar."
  },
  {
    "question": "What modules are loaded for the VASP GPU job script?",
    "answer": "The modules loaded for the VASP GPU job script are `intel/2020.1.217`, `cuda/11.0`, `openmpi/4.0.3`, and `vasp/<VERSION>`."
  },
  {
    "question": "How is VASP executed within the GPU job script?",
    "answer": "VASP is executed using `srun` in the GPU job script."
  },
  {
    "question": "What are the four input files VASP uses?",
    "answer": "VASP uses four input files: INCAR, KPOINTS, POSCAR, and POTCAR."
  },
  {
    "question": "Where is it recommended to prepare VASP input files?",
    "answer": "It is preferable to prepare VASP input files in a different directory for each task."
  },
  {
    "question": "How do you submit a VASP job from its directory?",
    "answer": "To submit a VASP job from its directory, use `sbatch vasp_job.sh`."
  },
  {
    "question": "What command can be used to estimate memory requirements for a VASP task?",
    "answer": "You can prepare all input files and execute `makeparam` in an interactive task to estimate the memory required for a VASP task."
  },
  {
    "question": "How can you get a better memory estimation for future VASP tasks?",
    "answer": "To get a better memory estimation for future VASP tasks, check the maximum stack size for completed tasks and use that value for memory per processor."
  },
  {
    "question": "What policy should be consulted when using 32 cores or more for a VASP job?",
    "answer": "If you want to use 32 cores or more, consult the job scheduling policies, specifically the section 'N\u0153uds entiers ou c\u0153urs'."
  },
  {
    "question": "What are the requirements for building VASP yourself?",
    "answer": "You need a VASP license and access to the VASP source code to build VASP yourself."
  },
  {
    "question": "Where can users install VASP themselves?",
    "answer": "Users can install VASP themselves in their `/home` directory on all clusters except Niagara."
  },
  {
    "question": "What tool is used for building VASP on the clusters (excluding Niagara)?",
    "answer": "VASP can be built using EasyBuild commands on all clusters except Niagara."
  },
  {
    "question": "What is the EasyBuild command for building VASP?",
    "answer": "The EasyBuild command for building VASP is `eb -f [RECIPE NAME] --sourcepath=[SOURCEPATH]`."
  },
  {
    "question": "What does `[SOURCEPATH]` refer to when building VASP with EasyBuild?",
    "answer": "`[SOURCEPATH]` is the directory containing the VASP source code."
  },
  {
    "question": "Where can the VASP source code be downloaded from?",
    "answer": "The VASP source code can be downloaded from the official VASP website at [https://www.vasp.at/]."
  },
  {
    "question": "How long can the EasyBuild command take to build VASP?",
    "answer": "The execution of the EasyBuild command to build VASP can take more than an hour."
  },
  {
    "question": "How is a custom-built VASP used after installation?",
    "answer": "After a custom-built VASP is installed, it can be loaded and executed using `module` commands."
  },
  {
    "question": "Where can I find additional documentation for building a custom version of VASP?",
    "answer": "You can find more information for building a custom version of VASP in the 'Installation de logiciels dans votre r\u00e9pertoire /home' documentation, or on the VASP wiki pages 'Installing VASP 5' and 'Installing VASP 6'."
  }
]