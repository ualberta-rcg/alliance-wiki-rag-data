[
  {
    "question": "What is the purpose of this page?",
    "answer": "This page describes the simplest case of creating a web server on our clouds using Ubuntu Linux and the Apache web server."
  },
  {
    "question": "What is an important consideration when making a computer accessible to the public?",
    "answer": "Security must be considered any time you make a computer accessible to the public."
  },
  {
    "question": "What are some ways a computer can be considered 'accessible to the public'?",
    "answer": "Accessible to the public could mean allowing SSH connections, displaying HTML via HTTP, or using 3rd party software to provide a service (e.g. WordPress)."
  },
  {
    "question": "What are 'daemons' in the context of web servers?",
    "answer": "Daemons are programs that stay running all the time on the computer and respond to outside requests on specific ports, providing services like SSH or HTTP."
  },
  {
    "question": "How can you manage and restrict access to ports with OpenStack?",
    "answer": "With OpenStack, you can manage and restrict access to these ports, including granting access only to a specific IP address or to ranges of IP addresses, using Security groups."
  },
  {
    "question": "Does restricting access to a VM remove all security vulnerabilities?",
    "answer": "No, restricting access does not necessarily remove all security vulnerabilities."
  },
  {
    "question": "What is Transport Layer Security (TLS) used for?",
    "answer": "Transport Layer Security is the common way to encrypt data, such as passwords, when sending it, preventing an eavesdropper from reading that information."
  },
  {
    "question": "When is it recommended to use Transport Layer Security (TLS) for a website?",
    "answer": "Any website which uses logins (e.g. WordPress, MediaWiki) should use Transport Layer Security (TLS)."
  },
  {
    "question": "Why is it recommended to use encryption on your web server?",
    "answer": "It is recommended to use encryption on your web server to prevent eavesdroppers from reading sensitive data like passwords and to prevent third parties from modifying data transmitted from your web server to a client."
  },
  {
    "question": "Who is responsible for the security of your virtual machines?",
    "answer": "You are responsible for the security of your virtual machines."
  },
  {
    "question": "What is the first step in installing Apache?",
    "answer": "Create a persistent virtual machine running Ubuntu Linux by following the Cloud Quick Start instructions."
  },
  {
    "question": "How do you open port 80 to allow HTTP requests into your VM?",
    "answer": "Open port 80 by following the Cloud Quick Start instructions for connecting to your VM with SSH, but selecting HTTP from the drop-down box instead of SSH."
  },
  {
    "question": "What command updates apt-get repositories on Ubuntu?",
    "answer": "The command `sudo apt-get update` updates your apt-get repositories."
  },
  {
    "question": "How do you upgrade Ubuntu to the latest version?",
    "answer": "Upgrade Ubuntu to the latest version with the command `sudo apt-get upgrade`."
  },
  {
    "question": "Why is it important to upgrade Ubuntu to the latest version?",
    "answer": "Upgrading to the latest version of Ubuntu ensures your VM has the latest security patches."
  },
  {
    "question": "What command installs the Apache web server on Ubuntu?",
    "answer": "Install the Apache web server with the command `sudo apt-get install apache2`."
  },
  {
    "question": "How can you verify that Apache has been installed and is running?",
    "answer": "Go to the newly created temporary Apache web page by entering the floating IP address of your VM into your browser's address bar. You should see something similar to the Apache2 test page."
  },
  {
    "question": "Where should you start modifying files to create your website after installing Apache?",
    "answer": "Start modifying the content of the files in `/var/www/html`, specifically the `index.html` file, which is the entry point for your newly created website."
  },
  {
    "question": "Why might you change the web server's root directory from the default?",
    "answer": "It is often much easier to manage a website if the files are owned by the user who is connecting to the VM, such as the `ubuntu` user."
  },
  {
    "question": "What is an example of a more convenient root directory for a web server?",
    "answer": "An example of a more convenient root directory is `/home/ubuntu/public_html`."
  },
  {
    "question": "How do you change the Apache configuration file to point to a new root directory?",
    "answer": "Use the command `sudo vim /etc/apache2/apache2.conf` (or another editor) to change the line `<Directory /var/www/>` to `<Directory /home/ubuntu/public_html>`."
  },
  {
    "question": "Which file specifies the DocumentRoot for the default Apache site?",
    "answer": "The `000-default.conf` file, located at `/etc/apache2/sites-available/000-default.conf`, specifies the DocumentRoot for the default Apache site."
  },
  {
    "question": "How do you edit the DocumentRoot for the default Apache site to a new directory?",
    "answer": "Use the command `sudo vim /etc/apache2/sites-available/000-default.conf` to edit the line `DocumentRoot /var/www/html` to become `DocumentRoot /home/ubuntu/public_html`."
  },
  {
    "question": "How do you create the new public_html directory for the Ubuntu user?",
    "answer": "Create the directory in the Ubuntu user's home directory with `mkdir public_html`."
  },
  {
    "question": "How do you copy the default Apache index page to the new public_html directory?",
    "answer": "Copy the default page into the directory with `cp /var/www/html/index.html /home/ubuntu/public_html`."
  },
  {
    "question": "What command is used to restart the Apache server after configuration changes?",
    "answer": "Restart the Apache server for changes to take effect with `sudo service apache2 restart`."
  },
  {
    "question": "After changing the web server's root directory, how can you edit the index.html file?",
    "answer": "You should be able to edit the file `/home/ubuntu/public_html/index.html` without using `sudo`."
  }
]