[
  {
    "question": "How do you load the META-Farm module?",
    "answer": "You can load the `meta-farm` module by running the command `module load meta-farm`."
  },
  {
    "question": "What is the first step to initialize a new farm directory using META?",
    "answer": "After logging into a cluster and loading the `meta-farm` module, you choose a name for your farm directory (e.g., `Farm_name`) and create it with the command `farm_init.run Farm_name`."
  },
  {
    "question": "What happens after running `farm_init.run`?",
    "answer": "Running `farm_init.run` will create a few important files inside the farm directory, some of which you will need to customize."
  },
  {
    "question": "Where should executable and input files be placed for a META farm?",
    "answer": "You should copy your executable and input files to the farm directory, unless you plan to use full paths everywhere."
  },
  {
    "question": "What is the purpose of the `table.dat` file?",
    "answer": "The `table.dat` file is a text file inside the farm directory that describes one independent computation, or 'case,' per line."
  },
  {
    "question": "Which scripts should be modified when setting up a new farm?",
    "answer": "You should modify the `single_case.sh` script if needed, and definitely modify the `job_script.sh` file to set a correct account name and an appropriate job runtime."
  },
  {
    "question": "How do you submit a farm in SIMPLE mode?",
    "answer": "To submit a farm in SIMPLE mode (one case per job), you execute `submit.run -1` inside the farm directory."
  },
  {
    "question": "How do you submit a farm in META mode?",
    "answer": "To submit a farm in META mode (many cases per job), you execute `submit.run N` inside the farm directory, where `N` is the number of metajobs to use and should be significantly smaller than the total number of cases."
  },
  {
    "question": "How can I run multiple META farms simultaneously?",
    "answer": "To run another farm concurrently, you need to run `farm_init.run` again with a different farm name, then customize the `single_case.sh` and `job_script.sh` files in the new farm directory, create a new `table.dat` file there, copy executables and input files, and finally execute `submit.run` within that second farm's directory."
  },
  {
    "question": "What is the `farm_init.run` command used for?",
    "answer": "The `farm_init.run` command is used to initialize a farm."
  },
  {
    "question": "What is the purpose of the `submit.run` command?",
    "answer": "The `submit.run` command is used to submit the farm to the scheduler."
  },
  {
    "question": "What does `resubmit.run` do?",
    "answer": "The `resubmit.run` command is used to resubmit all computations which failed or never ran as a new farm."
  },
  {
    "question": "How can you view the status of jobs in a farm?",
    "answer": "You can use `list.run` to list all jobs with their current state, or `query.run` for a short summary showing the number of queued, running, and completed jobs, as well as the progress of processed cases."
  },
  {
    "question": "When is `query.run` more convenient than `list.run`?",
    "answer": "`query.run` is more convenient than `list.run` when the number of jobs is large, as it provides a short summary and progress report."
  },
  {
    "question": "How do you stop all jobs in a META farm?",
    "answer": "You can stop all running and queued jobs in the farm using the `kill.run` command."
  },
  {
    "question": "Which command allows you to remove only queued jobs?",
    "answer": "The `prune.run` command is used to remove only queued jobs."
  },
  {
    "question": "What is the `Status.run` command used for?",
    "answer": "The `Status.run` command (with a capital 'S') lists the statuses of all processed cases, and with the optional `-f` flag, it lists non-zero status lines (failed cases) at the end."
  },
  {
    "question": "What does the `clean.run` command do, and what should users be aware of?",
    "answer": "`clean.run` deletes most files in the farm directory (except for specific script and config files) and all associated files in the `/home/$USER/tmp` directory. Users should be very careful with this script because it deletes all the results produced by your farm."
  },
  {
    "question": "Where must META commands (excluding `farm_init.run`) be executed?",
    "answer": "All META commands, except for `farm_init.run`, must be executed inside a farm directory that was created by `farm_init.run`."
  }
]