[
  {
    "question": "Can automated workflows use multifactor authentication?",
    "answer": "No, workflows that establish connections to clusters without human intervention cannot use a second factor (multifactor authentication)."
  },
  {
    "question": "What is required to access clusters for automated workflows now that multifactor authentication is mandatory?",
    "answer": "You must request access to one of the special nodes reserved for automated workflows."
  },
  {
    "question": "Are the functionalities of special automation nodes limited?",
    "answer": "Yes, the functionalities of these special nodes are limited compared to regular login nodes in terms of required authentication type and executable actions."
  },
  {
    "question": "How do you request access to special automation nodes?",
    "answer": "You must write to technical support, describing the type of automation, listing the commands to be executed, and specifying the tools or libraries used to manage the automation."
  },
  {
    "question": "Which type of SSH keys are accepted for accessing automation nodes?",
    "answer": "Access to automation nodes is only via SSH keys uploaded to CCDB. Keys registered in an `.ssh/authorized_keys` file are not accepted."
  },
  {
    "question": "What is the rule for SSH key usage for automated workflows?",
    "answer": "You must respect the rule of 'one SSH key per use'; generate a key specifically for your automated workflow and do not reuse it for interactive connections."
  },
  {
    "question": "What are the mandatory constraints for SSH keys used with automation nodes?",
    "answer": "SSH keys must respect the `restrict`, `from=\"pattern-list\"`, and `command=\"COMMAND\"` constraints."
  },
  {
    "question": "What functionalities are disabled by the `restrict` SSH key constraint?",
    "answer": "The `restrict` constraint disables port forwarding, agent forwarding, X11 forwarding, and pseudoterminal (PTY)."
  },
  {
    "question": "Why is the `restrict` constraint applied to SSH keys for special nodes?",
    "answer": "These conditions are imposed because special nodes should not be used for interactive or long-running processes; regular nodes should be used for such cases."
  },
  {
    "question": "What is the purpose of the `from=\"pattern-list\"` SSH key constraint?",
    "answer": "This constraint ensures that the key can only be used from IP addresses that match a specified pattern, and not from other computers."
  },
  {
    "question": "What kind of IP address patterns are accepted for the `from` constraint?",
    "answer": "The pattern list must be composed solely of public IP addresses that specify the network class, network, and subnet (the first three elements of the address), for example, `x.y.z.*`."
  },
  {
    "question": "Are private IP addresses accepted in the `from` constraint?",
    "answer": "No, the IP address must be a public address; private ranges like `10.0.0.0 \u2013 10.255.255.255`, `172.16.0.0 \u2013 172.31.255.255`, and `192.168.0.0 \u2013 192.168.255.255` are incorrect."
  },
  {
    "question": "How can you find your public IP address?",
    "answer": "You can find your public IP address by visiting [https://whatismyipaddress.com/ What Is My IP Address?] or by running the command `curl ifconfig.me` from the shell."
  },
  {
    "question": "What does the `command=\"COMMAND\"` SSH key constraint do?",
    "answer": "This constraint executes the specified `COMMAND` upon connection, allowing you to define the only commands that can be used with the key."
  },
  {
    "question": "What is the most useful application of wrapper scripts with the `command=` constraint?",
    "answer": "Wrapper scripts are most useful with the `command=` constraint when you have a script that accepts or refuses the commands that are called."
  },
  {
    "question": "Where can users find pre-prepared wrapper scripts for the `command=` constraint?",
    "answer": "Pre-prepared wrapper scripts for common use cases are located in the [https://github.com/ComputeCanada/software-stack-custom/tree/main/bin/computecanada/allowed_commands git repository]."
  },
  {
    "question": "Which script allows only file transfer commands?",
    "answer": "The script `/cvmfs/soft.computecanada.ca/custom/bin/computecanada/allowed_commands/transfer_commands.sh` allows only file transfer commands, such as `scp`, `sftp`, or `rsync`."
  }
]