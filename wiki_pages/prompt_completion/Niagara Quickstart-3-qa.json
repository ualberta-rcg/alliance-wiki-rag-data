[
  {
    "question": "How are jobs scheduled on Niagara?",
    "answer": "Jobs on Niagara are scheduled by node, in multiples of 40-cores."
  },
  {
    "question": "What is the maximum walltime for a job on Niagara?",
    "answer": "The maximum walltime for a job on Niagara is 24 hours."
  },
  {
    "question": "Which directories should jobs write their output to on Niagara?",
    "answer": "Jobs must write to your $SCRATCH or $PROJECT directory, as $HOME is read-only on compute nodes."
  },
  {
    "question": "Do Niagara compute nodes have internet access?",
    "answer": "No, compute nodes have no internet access. You must move your data to Niagara before submitting your job."
  },
  {
    "question": "Are allocated nodes on Niagara exclusively for my job?",
    "answer": "Yes, the nodes that your jobs run on are exclusively yours, meaning no other users are running anything on them."
  },
  {
    "question": "Can I SSH into the nodes allocated to my running job?",
    "answer": "Yes, you can ssh into the nodes allocated to your job to see how things are going."
  },
  {
    "question": "How much memory does a job receive on Niagara?",
    "answer": "Memory requests to the scheduler are not used. Your job always gets N x 202GB of RAM, where N is the number of nodes."
  },
  {
    "question": "How many cores should serial jobs use on Niagara?",
    "answer": "If you run serial jobs, you must still use all 40 cores on the node."
  },
  {
    "question": "What is the recommended core usage per job on Niagara?",
    "answer": "Since there are 40 cores per node, your job should use N x 40 cores."
  },
  {
    "question": "What factors influence the waiting time for jobs in the queue on Niagara?",
    "answer": "The waiting time depends on factors such as the allocation amount, how much allocation was used recently, the number of nodes and walltime, and how many other jobs are waiting in the queue."
  },
  {
    "question": "What are 'partitions' in the context of SLURM on Niagara?",
    "answer": "'Partitions' are SLURM-speak for use cases that define different job limits."
  },
  {
    "question": "How do I specify a job partition?",
    "answer": "You specify the partition with the `-p` parameter to `sbatch` or `salloc`."
  },
  {
    "question": "What is the default partition for jobs on Niagara if none is specified?",
    "answer": "If you do not specify a partition, your job will run in the `compute` partition."
  },
  {
    "question": "What are the limits for running compute jobs with a group allocation in the 'compute' partition?",
    "answer": "Users with a group allocation can have up to 50 running jobs in the 'compute' partition."
  },
  {
    "question": "What are the limits for submitted compute jobs (including running) with a group allocation in the 'compute' partition?",
    "answer": "Users with a group allocation can have up to 1000 submitted jobs (including running) in the 'compute' partition."
  },
  {
    "question": "What are the minimum and maximum job sizes for compute jobs with a group allocation?",
    "answer": "The minimum job size is 1 node (40 cores), and the maximum is 1000 nodes (40000 cores)."
  },
  {
    "question": "What are the minimum and maximum walltimes for compute jobs with a group allocation?",
    "answer": "The minimum walltime is 15 minutes, and the maximum is 24 hours."
  },
  {
    "question": "What are the limits for running compute jobs without a group allocation (default) in the 'compute' partition?",
    "answer": "Users without a group allocation can have up to 50 running jobs in the 'compute' partition."
  },
  {
    "question": "What are the limits for submitted compute jobs (including running) without a group allocation (default) in the 'compute' partition?",
    "answer": "Users without a group allocation can have up to 200 submitted jobs (including running) in the 'compute' partition."
  },
  {
    "question": "What are the minimum and maximum job sizes for compute jobs without a group allocation?",
    "answer": "The minimum job size is 1 node (40 cores), and the maximum is 20 nodes (800 cores)."
  },
  {
    "question": "What are the minimum and maximum walltimes for compute jobs without a group allocation?",
    "answer": "The minimum walltime is 15 minutes, and the maximum is 24 hours."
  },
  {
    "question": "What are the job limits for the 'debug' partition?",
    "answer": "In the 'debug' partition, users can have 1 running job and 1 submitted job (including running). The minimum size is 1 node (40 cores), maximum is 4 nodes (160 cores), and the maximum walltime is 1 hour."
  },
  {
    "question": "What are the job limits for the 'archivelong' partition?",
    "answer": "For the 'archivelong' partition, there are limits of 2 running jobs per user (maximum 5 total) and 10 submitted jobs per user. The minimum walltime is 15 minutes, and the maximum is 72 hours."
  },
  {
    "question": "What are the job limits for the 'archiveshort' partition?",
    "answer": "For the 'archiveshort' partition, there are limits of 2 running jobs per user and 10 submitted jobs per user. The minimum walltime is 15 minutes, and the maximum is 1 hour."
  },
  {
    "question": "Where are my files accessible on Niagara?",
    "answer": "Your files can be seen on all Niagara login and compute nodes."
  },
  {
    "question": "What type of file system do $HOME, $SCRATCH, and $PROJECT use on Niagara?",
    "answer": "$HOME, $SCRATCH, and $PROJECT all use the parallel file system called GPFS."
  },
  {
    "question": "What are the benefits of using GPFS on Niagara?",
    "answer": "GPFS is a high-performance file system that provides rapid reads and writes to large data sets in parallel from many nodes."
  },
  {
    "question": "What kind of data access patterns can lead to poor performance on GPFS?",
    "answer": "Accessing data sets that consist of many, small files leads to poor performance on GPFS."
  },
  {
    "question": "What is recommended if I need to write many small files on Niagara?",
    "answer": "If you must write many small files, it is recommended to use ramdisk."
  },
  {
    "question": "What is a recommended practice for efficient data writing on Niagara?",
    "answer": "Write data out in a binary format, as this is faster and takes less space."
  },
  {
    "question": "When is the Burst Buffer useful on Niagara?",
    "answer": "The Burst Buffer is better for I/O heavy jobs and to speed up checkpoints."
  }
]