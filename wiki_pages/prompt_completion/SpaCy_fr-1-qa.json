[
  {
    "question": "What is spaCy?",
    "answer": "spaCy is a Python package for advanced natural language processing (traitement avanc\u00e9 du langage naturel)."
  },
  {
    "question": "How can I view the latest spaCy builds or available wheels?",
    "answer": "You can use the command `avail_wheels spacy thinc thinc_gpu_ops` to see the latest builds of spaCy, thinc, and thinc_gpu_ops."
  },
  {
    "question": "What is the recommended method for installing spaCy?",
    "answer": "The preferred option is to install it with a pre-compiled Python wheel."
  },
  {
    "question": "What are the first steps to install spaCy using a pre-compiled wheel?",
    "answer": "First, load the `python/3.6` module, then create and activate a virtual environment."
  },
  {
    "question": "How do you install spaCy for both CPU and GPU within a virtual environment?",
    "answer": "Inside an activated virtual environment, run `pip install spacy[cuda] --no-index`."
  },
  {
    "question": "How do you install spaCy for CPU only within a virtual environment?",
    "answer": "Inside an activated virtual environment, run `pip install spacy --no-index`."
  },
  {
    "question": "What is necessary to use the GPU version of spaCy?",
    "answer": "To use the GPU version, you must add the CUDA libraries to the `LD_LIBRARY_PATH` variable."
  },
  {
    "question": "Which commands are used to configure the LD_LIBRARY_PATH for spaCy's GPU version?",
    "answer": "You need to run `module load gcc/5.4.0 cuda/9` and then `export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH`."
  },
  {
    "question": "What additional wheel needs to be installed to use the Pytorch wrapper script with thinc?",
    "answer": "You must also install the `torch_cpu` or `torch_gpu` wheel."
  }
]