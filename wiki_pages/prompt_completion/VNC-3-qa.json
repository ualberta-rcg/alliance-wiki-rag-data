[
  {
    "question": "How do you determine the TCP port your VNC server is listening on after starting it on a login node?",
    "answer": "You can determine the port by running `grep -iE \"\\sport|kill\" /home/yourusername/.vnc/l4.nibi.sharcnet:1.log` on the login node, which will show output like 'Listening for VNC connections on TCP port 5901'."
  },
  {
    "question": "Will a VNC server continue to run on a login node if you exit the node?",
    "answer": "Yes, you may exit the login node, and your vncserver will continue running until the time limit you assigned with the `-idletimeout` option is reached."
  },
  {
    "question": "How do you start an SSH tunnel from your desktop to a VNC server on a login node, forwarding a local port?",
    "answer": "On your desktop, you can start an SSH tunnel using a command like `ssh nibi.computecanada.ca -L 5905:l4:5901`, where 5905 is the arbitrary local port and 5901 is the VNC server's listening port on the login node (l4 in this example)."
  },
  {
    "question": "After setting up an SSH tunnel, how do you connect to the VNC server from a Linux desktop's command line?",
    "answer": "You connect by running `vncviewer localhost:5905` on your desktop, using the local forwarded port (5905 in this example)."
  },
  {
    "question": "How do Mac or Windows users connect to a VNC server via a forwarded port using TigerVNC Viewer?",
    "answer": "Mac or Windows users can click the TigerVNC Viewer application icon on their desktop and enter `localhost:5905` (or the respective forwarded port) in the 'Connection Details' dialogue box that appears."
  },
  {
    "question": "What are the typical memory and CPU limits on Graham's cluster login nodes?",
    "answer": "On Graham, cluster login nodes have strict memory and cputime limits, typically 8GB of memory and 1 cpu-hour per process, though other clusters may vary."
  },
  {
    "question": "When should you consider running a VNC server on a cluster compute node instead of a login node?",
    "answer": "You should run a VNC server on a cluster compute node if VDI login nodes are unavailable, or if you require more resources (memory, cputime) than the strict limits imposed on cluster login nodes."
  },
  {
    "question": "What is the first step to start a VNC server on a compute node?",
    "answer": "The first step is to log into a cluster (e.g., nibi) and create a compute node allocation using the `salloc` command. For example: `salloc --time=1:00:00 --cpus-per-task=4 --mem=16000 --account=def-piusername`."
  },
  {
    "question": "What environment variable should be set after an interactive job starts on a compute node to avoid desktop errors for VNC?",
    "answer": "You should set `export XDG_RUNTIME_DIR=${SLURM_TMPDIR}` once your interactive job has started on the compute node."
  },
  {
    "question": "How do you start a VNC server on a compute node?",
    "answer": "After logging into a compute node and setting the `XDG_RUNTIME_DIR` environment variable, you can start a VNC server by simply running the `vncserver` command. The first time, you will be prompted to set a password."
  },
  {
    "question": "What is important to remember when setting a password for a new VNC server?",
    "answer": "It is crucial NOT to leave the VNC server password blank, as doing so would allow anyone to connect to it and gain access to the files in your account. The password can be changed later using the `vncpasswd` command."
  }
]