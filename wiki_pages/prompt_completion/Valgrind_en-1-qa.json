[
  {
    "question": "What is Valgrind?",
    "answer": "Valgrind is a powerful debugging tool to detect bad memory usage."
  },
  {
    "question": "What types of memory errors can Valgrind detect?",
    "answer": "Valgrind can detect memory leaks, access to unallocated or deallocated memory, multiple deallocation, or other bad memory usage."
  },
  {
    "question": "What programming issues might indicate that Valgrind should be used?",
    "answer": "If your program ends with a 'segmentation fault', 'broken pipe' or 'bus error', you most likely have a memory problem in your code that Valgrind can help diagnose."
  },
  {
    "question": "Do I need to load a module to use Valgrind on Compute Canada clusters?",
    "answer": "No, Valgrind is installed on Compute Canada clusters as part of the base software distribution, so there is no need to load a module to use it."
  },
  {
    "question": "What is a known limitation of current Valgrind versions regarding processors?",
    "answer": "Current versions of Valgrind are unable to handle the AVX-512 instructions used on the latest Intel and AMD processors."
  },
  {
    "question": "What kind of error message is produced when Valgrind encounters AVX-512 instructions?",
    "answer": "Valgrind produces an error message like 'valgrind: Unrecognised instruction at address 0x4e68448.'"
  },
  {
    "question": "Are AVX-512 instructions typically used by default on Compute Canada clusters?",
    "answer": "Yes, on all current clusters except Narval, the default environment uses these AVX-512 instructions."
  },
  {
    "question": "How can the AVX-512 limitation in Valgrind be circumvented?",
    "answer": "You can circumvent this problem by first loading the AVX-2 environment with 'module load arch/avx2' and then recompiling your application from scratch."
  },
  {
    "question": "What is the initial step to prepare an application for debugging with Valgrind?",
    "answer": "To get useful information from Valgrind, you first need to compile your code with debugging information enabled."
  },
  {
    "question": "Which compiler option is used to enable debugging information for Valgrind?",
    "answer": "With most compilers, you enable debugging information by adding a \"-g\" option during compilation."
  },
  {
    "question": "Why should aggressive optimizations be avoided when preparing code for Valgrind?",
    "answer": "Some aggressive optimizations may yield false errors in Valgrind if they result in unsupported operations, which may occur in certain mathematical libraries."
  },
  {
    "question": "What kind of libraries should be used when diagnosing code with Valgrind?",
    "answer": "You should compile and link your code against non-optimized versions of the libraries (such as the Netlib implementation of BLAS/LAPACK) that do not use those operations."
  },
  {
    "question": "When is it appropriate to link against optimized libraries?",
    "answer": "When the time comes to run real simulations, you should link against optimized libraries."
  },
  {
    "question": "What is the command to run a program with Valgrind for memory checking and leak detection?",
    "answer": "The command is 'valgrind --tool=memcheck --leak-check=yes --show-reachable=yes ./your_program'."
  },
  {
    "question": "Why does an application run much slower when executed within Valgrind?",
    "answer": "When you run your code in Valgrind, your application is executed within a virtual machine that validates every memory access, causing it to run much slower than usual."
  },
  {
    "question": "What advice is given regarding the size of the problem when testing with Valgrind?",
    "answer": "Choose the size of the problem to test with caution, much smaller than what you would usually run."
  },
  {
    "question": "Do I need to reproduce a segmentation fault exactly to detect memory issues with Valgrind?",
    "answer": "No, you do not need to run the exact same problem that results in a segmentation fault to detect memory issues in your code."
  },
  {
    "question": "How sensitive is Valgrind to memory access problems like out-of-bounds array access?",
    "answer": "Valgrind will detect even the slightest access outside of the bounds of an array."
  },
  {
    "question": "When does the error message for a memory leak appear during Valgrind execution?",
    "answer": "The error message for a memory leak will be given at the end of the program execution."
  }
]