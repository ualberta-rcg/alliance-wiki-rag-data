[
  {
    "question": "How does a module hierarchy simplify the process of loading multiple modules?",
    "answer": "With a module hierarchy, loading multiple modules becomes simpler; for instance, you can use `module load gcc/9.3 openmpi/4.0 fftw/3.8` instead of a more complex command like `module load gcc/9.3 openmpi/4.0_gcc9.3 fftw/3.8_gcc9.3_openmpi4.0`."
  },
  {
    "question": "Does the `fftw/3.8` module always load the same version of FFTW?",
    "answer": "No, the `fftw/3.8` module loaded will differ based on whether you previously loaded the Intel or GCC compiler."
  },
  {
    "question": "What is a limitation of the `module avail` command when using a module hierarchy?",
    "answer": "A limitation is that `module avail` only displays modules compatible with currently loaded 'parent' modules, as modules can share the same name in a hierarchy."
  },
  {
    "question": "What is a prerequisite for accessing certain modules within a hierarchical system?",
    "answer": "Loading a 'parent' module is a prerequisite to access certain modules in a hierarchical system."
  },
  {
    "question": "How can one obtain complete information about all modules, including those potentially hidden by the hierarchy?",
    "answer": "To get complete information, the `module spider` command can be used, as it traverses the entire hierarchy and displays all modules."
  },
  {
    "question": "How does `module spider` help when looking for a specific module version within the hierarchy?",
    "answer": "By specifying a module and a particular version, `module spider` allows you to determine which paths in the hierarchy enable loading the desired module."
  },
  {
    "question": "What happens when the module system detects two modules of the same family or two versions of the same module?",
    "answer": "The `module load` command will automatically replace the original module with the one that is intended to be loaded."
  },
  {
    "question": "If a replaced module is a node in the module hierarchy, what happens to its dependent modules?",
    "answer": "If the replaced module is a node in the module hierarchy, dependent modules will be reloaded if a compatible version exists, or deactivated otherwise."
  },
  {
    "question": "Where can users find instructions on how to create modules?",
    "answer": "Instructions for creating modules can be found by referring to the official documentation at `http://lmod.readthedocs.io/en/latest/015_writing_modules.html`."
  },
  {
    "question": "What commands should be executed to use modules with the ZSH shell?",
    "answer": "To use modules with ZSH, you should execute the command `zsh -l`."
  },
  {
    "question": "What commands should be executed to use modules with the KSH shell?",
    "answer": "To use modules with KSH, you should execute the command `ksh -l`."
  }
]