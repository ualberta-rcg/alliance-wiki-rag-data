[
  {
    "question": "Qu'est-ce que Python?",
    "answer": "Python est un langage de programmation interpr\u00e9t\u00e9 dont la philosophie de design repose principalement sur la lisibilit\u00e9 du code. Sa syntaxe est simple et expressive et sa biblioth\u00e8que de modules standards est tr\u00e8s \u00e9tendue."
  },
  {
    "question": "Comment les capacit\u00e9s du langage Python peuvent-elles \u00eatre \u00e9tendues?",
    "answer": "Les capacit\u00e9s du langage Python peuvent \u00eatre \u00e9tendues \u00e0 l'aide de paquets d\u00e9velopp\u00e9s par des tiers."
  },
  {
    "question": "Qui est responsable de l'installation des paquets Python de tiers?",
    "answer": "Il vous revient d'installer les paquets de tiers, car ils ne sont g\u00e9n\u00e9ralement pas install\u00e9s dans le r\u00e9pertoire de logiciels disponibles afin de simplifier les op\u00e9rations."
  },
  {
    "question": "Des outils sont-ils mis \u00e0 disposition pour installer les paquets Python?",
    "answer": "Oui, plusieurs versions de l'interpr\u00e9teur Python et les outils n\u00e9cessaires sont mis \u00e0 votre disposition pour installer facilement les paquets dont vous avez besoin."
  },
  {
    "question": "Une version de Python est-elle disponible par d\u00e9faut lors de la connexion aux grappes?",
    "answer": "Oui, une version est disponible quand vous vous connectez \u00e0 nos grappes, mais vous aurez souvent besoin d'une version diff\u00e9rente."
  },
  {
    "question": "Quand avez-vous besoin d'une version de Python diff\u00e9rente de celle par d\u00e9faut?",
    "answer": "Vous aurez souvent besoin d'une version diff\u00e9rente, surtout si vous voulez installer des paquets."
  },
  {
    "question": "Comment puis-je trouver la version de Python dont j'ai besoin?",
    "answer": "Trouvez la version de Python dont vous avez besoin et chargez le module appropri\u00e9."
  },
  {
    "question": "Quelle version de Python est recommand\u00e9e si je suis dans le doute?",
    "answer": "En cas de doute, vous pouvez utiliser la plus r\u00e9cente version disponible."
  },
  {
    "question": "Comment puis-je conna\u00eetre les versions de Python disponibles?",
    "answer": "Pour conna\u00eetre les versions disponibles, utilisez la commande `module avail python`."
  },
  {
    "question": "Comment charger une version sp\u00e9cifique de Python?",
    "answer": "Vous pouvez charger la version de votre choix avec la commande `module load python/X.Y`, o\u00f9 `X.Y` repr\u00e9sente la version (par exemple, `3.13`)."
  },
  {
    "question": "Pourquoi les paquets r\u00e9cents peuvent-ils poser des probl\u00e8mes avec les anciennes versions de Python?",
    "answer": "Plusieurs paquets ne supportent que les quelques derni\u00e8res versions de Python 3.x, et les paquets pr\u00e9construits (wheels Python) ne sont offerts que pour les trois versions les plus r\u00e9centes disponibles sur nos syst\u00e8mes."
  },
  {
    "question": "Qu'est-ce que la pile logicielle SciPy?",
    "answer": "La pile logicielle SciPy est un module d'environnement qui comprend des paquets comme NumPy, SciPy, Matplotlib, IPython, pandas, Sympy, et nose."
  },
  {
    "question": "Comment utiliser les paquets de la pile logicielle SciPy?",
    "answer": "Pour utiliser un de ces paquets, chargez une version de Python, puis utilisez la commande `module load scipy-stack`."
  },
  {
    "question": "Comment obtenir la liste et les num\u00e9ros de version des paquets contenus dans `scipy-stack`?",
    "answer": "Lancez `module spider scipy-stack/2020a` (en rempla\u00e7ant `2020a` par la version que vous voulez)."
  },
  {
    "question": "Quel outil permet de cr\u00e9er des environnements virtuels Python?",
    "answer": "L'outil `virtualenv` permet de cr\u00e9er des environnements virtuels \u00e0 l'int\u00e9rieur desquels vous pourrez installer facilement vos paquets Python."
  },
  {
    "question": "Quels sont les avantages des environnements virtuels Python?",
    "answer": "Les environnements virtuels permettent par exemple d'installer plusieurs versions d'un m\u00eame paquet, ou encore de compartimenter les installations en fonction des besoins ou des exp\u00e9riences \u00e0 r\u00e9aliser."
  },
  {
    "question": "O\u00f9 est-il recommand\u00e9 de cr\u00e9er les environnements virtuels Python?",
    "answer": "Vous cr\u00e9eriez habituellement vos environnements virtuels Python dans votre r\u00e9pertoire `/home` ou dans un de vos r\u00e9pertoires `/project`."
  },
  {
    "question": "Dans quel r\u00e9pertoire ne faut-il pas cr\u00e9er un environnement virtuel Python?",
    "answer": "Ne cr\u00e9ez pas votre environnement virtuel dans `$SCRATCH` \u00e0 cause du risque qu'il soit en partie d\u00e9truit."
  },
  {
    "question": "Pourquoi ne doit-on pas cr\u00e9er un environnement virtuel dans $SCRATCH?",
    "answer": "Il ne faut pas cr\u00e9er un environnement virtuel dans `$SCRATCH` \u00e0 cause du risque qu'il soit en partie d\u00e9truit."
  }
]