[
  {
    "question": "Qu'est-ce que Python ?",
    "answer": "Python est un langage de programmation interpr\u00e9t\u00e9 dont la philosophie de design repose principalement sur la lisibilit\u00e9 du code."
  },
  {
    "question": "Quelles sont les caract\u00e9ristiques principales de Python ?",
    "answer": "Sa syntaxe est simple et expressive et sa biblioth\u00e8que de modules standards est tr\u00e8s \u00e9tendue."
  },
  {
    "question": "Comment les capacit\u00e9s du langage Python peuvent-elles \u00eatre \u00e9tendues ?",
    "answer": "Les capacit\u00e9s du langage Python peuvent \u00eatre \u00e9tendues \u00e0 l'aide de paquets d\u00e9velopp\u00e9s par des tiers."
  },
  {
    "question": "Qui est responsable de l'installation des paquets Python tiers ?",
    "answer": "Il vous revient de les installer, car nous n'installons pas les paquets de tiers dans le r\u00e9pertoire de logiciels disponibles afin de simplifier les op\u00e9rations."
  },
  {
    "question": "Quel support est fourni pour l'installation de paquets Python ?",
    "answer": "Nous mettons \u00e0 votre disposition plusieurs versions de l'interpr\u00e9teur Python et les outils n\u00e9cessaires pour que vous puissiez facilement installer les paquets dont vous avez besoin."
  },
  {
    "question": "Est-ce qu'une version de Python est disponible par d\u00e9faut sur les grappes ?",
    "answer": "Oui, une version est disponible quand vous vous connectez \u00e0 nos grappes."
  },
  {
    "question": "Pourquoi pourrais-je avoir besoin d'une version de Python diff\u00e9rente de celle par d\u00e9faut ?",
    "answer": "Vous aurez souvent besoin d'une version diff\u00e9rente, surtout si vous voulez installer des paquets."
  },
  {
    "question": "Quelle version de Python est recommand\u00e9e en cas de doute ?",
    "answer": "En cas de doute, vous pouvez utiliser la plus r\u00e9cente version disponible."
  },
  {
    "question": "Comment puis-je conna\u00eetre les versions de Python disponibles ?",
    "answer": "Pour conna\u00eetre les versions disponibles, utilisez la commande `module avail python`."
  },
  {
    "question": "Comment puis-je charger une version sp\u00e9cifique de Python ?",
    "answer": "Vous pouvez charger la version de votre choix avec la commande `module load python/X.Y`, o\u00f9 `X.Y` repr\u00e9sente la version (par exemple, `3.13`)."
  },
  {
    "question": "Pourquoi est-il important d'utiliser des versions r\u00e9centes de Python ?",
    "answer": "Dans l'\u00e9cosyst\u00e8me Python, la transition vers des versions plus modernes s'acc\u00e9l\u00e8re et plusieurs paquets ne supportent que les quelques derni\u00e8res versions de Python 3.x."
  },
  {
    "question": "Quelles versions de Python sont support\u00e9es par les paquets pr\u00e9construits (wheels Python) fournis ?",
    "answer": "Nous offrons uniquement des paquets pr\u00e9construits (wheels Python) pour les trois versions les plus r\u00e9centes disponibles sur nos syst\u00e8mes."
  },
  {
    "question": "Que se passe-t-il si j'essaie d'installer des paquets avec d'anciennes versions de Python ?",
    "answer": "Des probl\u00e8mes de d\u00e9pendance se pr\u00e9senteront quand vous tentez d'installer ces paquets avec les plus anciennes versions de Python."
  },
  {
    "question": "Qu'est-ce que le module `scipy-stack` ?",
    "answer": "Le module `scipy-stack` est un module d'environnement qui comprend plusieurs paquets, en plus du module Python de base."
  },
  {
    "question": "Quels paquets sont inclus dans le module `scipy-stack` ?",
    "answer": "Le module `scipy-stack` comprend NumPy, SciPy, Matplotlib (avec dateutil et pytz), IPython (avec pyzmq et tornado), pandas, Sympy et nose."
  },
  {
    "question": "Comment utiliser les paquets de la pile logicielle SciPy ?",
    "answer": "Pour utiliser un de ces paquets, chargez une version de Python, puis `module load scipy-stack`."
  },
  {
    "question": "Comment puis-je obtenir la liste et les num\u00e9ros de version des paquets contenus dans `scipy-stack` ?",
    "answer": "Lancez `module spider scipy-stack/2020a` (en rempla\u00e7ant `2020a` par la version que vous voulez)."
  },
  {
    "question": "Quel outil permet de cr\u00e9er des environnements virtuels Python ?",
    "answer": "L'outil `virtualenv` est fourni avec chaque version de Python et permet de cr\u00e9er des environnements virtuels."
  },
  {
    "question": "\u00c0 quoi servent les environnements virtuels Python ?",
    "answer": "Ces environnements permettent d'installer facilement vos paquets Python, d'installer plusieurs versions d'un m\u00eame paquet, ou encore de compartimenter les installations en fonction des besoins ou des exp\u00e9riences \u00e0 r\u00e9aliser."
  },
  {
    "question": "O\u00f9 devrais-je habituellement cr\u00e9er mes environnements virtuels Python ?",
    "answer": "Vous cr\u00e9eriez habituellement vos environnements virtuels Python dans votre r\u00e9pertoire `/home` ou dans un de vos r\u00e9pertoires `/project`."
  },
  {
    "question": "O\u00f9 ne faut-il pas cr\u00e9er un environnement virtuel Python ?",
    "answer": "Ne cr\u00e9ez pas votre environnement virtuel dans `$SCRATCH` \u00e0 cause du risque qu'il soit en partie d\u00e9truit."
  }
]