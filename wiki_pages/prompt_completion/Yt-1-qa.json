[
  {
    "question": "How do you install YT for CPU rendering on a cluster in your own directory?",
    "answer": "First, load python and mpi4py modules, then create a virtual environment named 'astro' using `virtualenv astro`, activate it with `source ~/astro/bin/activate`, and finally install necessary packages: `pip install cython`, `pip install numpy`, and `pip install yt`."
  },
  {
    "question": "What is the command to load the YT environment for normal use?",
    "answer": "Use `source ~/astro/bin/activate` to load the environment."
  },
  {
    "question": "How do you deactivate the YT environment?",
    "answer": "Run the command `deactivate`."
  },
  {
    "question": "Where can the sample dataset 'Enzo_64' be downloaded from?",
    "answer": "The sample dataset 'Enzo_64' can be downloaded from http://yt-project.org/data."
  },
  {
    "question": "What is the purpose of the `grids.py` script?",
    "answer": "The `grids.py` script is used to render 90 frames, rotating the dataset around the vertical axis."
  },
  {
    "question": "How is MPI parallelism enabled in the `grids.py` script?",
    "answer": "MPI parallelism is enabled by including `yt.enable_parallelism()` in the script."
  },
  {
    "question": "What is the resolution set for each frame in the rendering script?",
    "answer": "The resolution for each frame is set to (1024, 1024)."
  },
  {
    "question": "How are grid and domain boundaries annotated in the `grids.py` script?",
    "answer": "Domain boundaries are annotated with `sc.annotate_domain(ds, color=[1, 1, 1, 0.005])`, and grid boundaries with `sc.annotate_grids(ds, alpha=0.005)`."
  },
  {
    "question": "How many frames are rendered during the rotation loop in `grids.py`?",
    "answer": "The script renders 90 frames during the rotation loop, rotating by 180 degrees over these frames."
  },
  {
    "question": "What is the walltime specified in the `yt-mpi.sh` job submission script?",
    "answer": "The walltime specified is 0:30:00 (30 minutes)."
  },
  {
    "question": "How many MPI processes are requested in the `yt-mpi.sh` script?",
    "answer": "The script requests 4 MPI processes (`#SBATCH --ntasks=4`)."
  },
  {
    "question": "What is the memory per CPU allocated in the job submission script?",
    "answer": "The memory per CPU allocated is 3800 MB (`#SBATCH --mem-per-cpu=3800`)."
  },
  {
    "question": "How do you submit the rendering job using the provided script?",
    "answer": "Submit the job using `sbatch yt-mpi.sh`."
  },
  {
    "question": "What command is used to create a movie from the rendered frames?",
    "answer": "The command `ffmpeg -r 30 -i frame%04d.png -c:v libx264 -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" grids.mp4` is used to create a movie."
  },
  {
    "question": "What frame rate is used for the movie creation with ffmpeg?",
    "answer": "The movie is created at a frame rate of 30 frames per second (`-r 30`)."
  }
]