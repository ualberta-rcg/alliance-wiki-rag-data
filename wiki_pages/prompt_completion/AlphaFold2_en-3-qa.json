[
  {
    "question": "What is the maximum number of CPU cores that AlphaFold is designed to use?",
    "answer": "AlphaFold is hardcoded to use a maximum of 8 CPU cores and does not benefit from using more."
  },
  {
    "question": "Which module dependencies are required to run AlphaFold, as listed in the submission scripts?",
    "answer": "The required module dependencies are `StdEnv/2020 gcc/9.3.0 openmpi/4.0.3 cuda/11.4 cudnn/8.2.0 kalign/2.03 hmmer/3.2.1 openmm-alphafold/7.5.1 hh-suite/3.3.0 python/3.8`."
  },
  {
    "question": "How is a Python virtual environment generated and activated within an AlphaFold SLURM job script?",
    "answer": "A Python virtual environment is generated using `virtualenv --no-download ${SLURM_TMPDIR}/env` and activated with `source ${SLURM_TMPDIR}/env/bin/activate` within the job script."
  },
  {
    "question": "What commands are used to install AlphaFold and its dependencies within a job script?",
    "answer": "AlphaFold and its dependencies are installed using `pip install --no-index --upgrade pip` and `pip install --no-index --requirement ~/alphafold-requirements.txt`."
  },
  {
    "question": "What is the default `model_preset` used for AlphaFold version 2.3 in the provided submission scripts?",
    "answer": "The default `model_preset` for AlphaFold version 2.3 is `multimer`."
  },
  {
    "question": "What SLURM parameter is necessary to request a GPU for an AlphaFold job?",
    "answer": "To request a GPU for an AlphaFold job, the `--gres=gpu:1` SLURM parameter is used."
  },
  {
    "question": "How do the `run_alphafold.py` command options for `model_preset` and `uniclust30_database_path` differ between AlphaFold 2.2 and 2.3?",
    "answer": "In AlphaFold 2.2, `--model_preset=monomer_casp14` and `--uniclust30_database_path` are used, whereas in version 2.3, `--model_preset=multimer` and `--uniref30_database_path` are used instead of `uniclust30`."
  },
  {
    "question": "What `max_template_date` is specified for AlphaFold 2.2 in the example submission scripts?",
    "answer": "For AlphaFold 2.2, the `max_template_date` is set to `2020-05-14`."
  },
  {
    "question": "How do you submit an AlphaFold job script named `alphafold-gpu.sh` to the scheduler with a job name like `alphafold-X`?",
    "answer": "You submit the job using the command `sbatch --job-name alphafold-X alphafold-gpu.sh`."
  },
  {
    "question": "What is a common error message encountered when downloading AlphaFold databases, and what might cause it?",
    "answer": "A common error message is `Client_loop: send disconnect: Broken pipe`, which can be caused by factors like an unusually high number of users on the login node."
  },
  {
    "question": "What is one suggested solution to mitigate a `Broken pipe` error during database download?",
    "answer": "One suggested solution is to use a terminal multiplexer."
  },
  {
    "question": "Where can users find an existing AlphaFold database on the cluster to avoid local download issues?",
    "answer": "An existing database is available on the cluster at `/cvmfs/bio.data.computecanada.ca/content/databases/Core/alphafold2_dbs/2023_07/`."
  },
  {
    "question": "How can one download AlphaFold databases in sections instead of downloading the full database at once?",
    "answer": "After loading modules and activating the virtual environment, you can type `download_` and press `tab` twice to see available scripts, then use a specific script like `download_pdb.sh` to download sections."
  },
  {
    "question": "Where are the `DOWNLOAD_DIR`, `INPUT_DIR`, and `OUTPUT_DIR` typically configured to point in the AlphaFold submission scripts?",
    "answer": "These directories are typically configured to point to paths within the `$SCRATCH` directory, for example: `DOWNLOAD_DIR=$SCRATCH/alphafold/data`, `INPUT_DIR=$SCRATCH/alphafold/input`, and `OUTPUT_DIR=${SCRATCH}/alphafold/output`."
  }
]