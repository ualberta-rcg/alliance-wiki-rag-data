[
  {
    "question": "What does `dar` stand for and what is its purpose?",
    "answer": "`dar` stands for Disk ARchive and is a utility written as a modern replacement for the classical Unix `tar` tool."
  },
  {
    "question": "When was `dar` first released?",
    "answer": "`dar` was first released in 2002."
  },
  {
    "question": "What kind of backup types does `dar` support?",
    "answer": "`dar` supports full, differential, and incremental backups."
  },
  {
    "question": "What is a key difference between `dar` and `tar` regarding archive structure?",
    "answer": "Unlike `tar`, each `dar` archive includes a file index for fast file access and restore."
  },
  {
    "question": "How does `dar` handle compression?",
    "answer": "`dar` has built-in compression on a file-by-file basis, making it more resilient against data corruption, and can optionally be told not to compress already highly compressed files like `mp4` and `gz`."
  },
  {
    "question": "What are some other notable features of `dar`?",
    "answer": "`dar` supports strong encryption, can split archives at 1-byte resolution, supports extended file attributes, sparse files, hard and symbolic links, and can detect and recover from data corruption."
  },
  {
    "question": "Where can users find a detailed comparison between `tar` and `dar` features?",
    "answer": "A detailed feature-by-feature `tar`-to-`dar` comparison can be found on the `dar` page, specifically in its FAQ."
  },
  {
    "question": "Where is `dar` available on clusters with `StdEnv/2020`?",
    "answer": "On clusters, `dar` is available on `/cvmfs` and can be accessed via `/cvmfs/soft.computecanada.ca/gentoo/2020/usr/bin/dar` with `StdEnv/2020`."
  },
  {
    "question": "How do you create a basic archive of a subdirectory named `test` using `dar`?",
    "answer": "To pack a subdirectory named `test` into an archive, you can type `dar -w -c all -g test`."
  },
  {
    "question": "What is the naming convention for a `dar` archive file?",
    "answer": "A `dar` archive file is named `basename.slicenumber.dar`, where `basename` is the base name (e.g., `all`) and `slicenumber` is the slice number (e.g., `1`)."
  },
  {
    "question": "How can multiple directories and files be included in a single `dar` archive?",
    "answer": "You can include multiple directories and files by using multiple `-g` flags, such as `dar -w -c all -g testDir1 -g testDir2 -g file1 -g file2`."
  },
  {
    "question": "What is important to note about paths when creating a `dar` archive?",
    "answer": "All paths used in `dar` commands should be relative to the current directory."
  },
  {
    "question": "How do you list the contents of a `dar` archive?",
    "answer": "To list the archive's contents, use `dar -l` followed by the base name of the archive, for example, `dar -l all`."
  },
  {
    "question": "How do you extract a single file from a `dar` archive into a specified subdirectory?",
    "answer": "To extract a single file, use `dar -R restore/ -O -w -x all -v -g test/filename`, where `restore/` is the subdirectory and `test/filename` is the path to the file within the archive."
  },
  {
    "question": "What does the `-O` flag do during `dar` extraction?",
    "answer": "The `-O` flag tells `dar` to ignore file ownership, which is useful when restoring someone else's files or to disable a confirmation warning when restoring your own files as a non-root user."
  },
  {
    "question": "What is the purpose of the `-w` flag in `dar` commands?",
    "answer": "The `-w` flag will disable a warning if the target directory for extraction already exists."
  },
  {
    "question": "How do you extract an entire directory from a `dar` archive?",
    "answer": "To extract an entire directory, use `dar -R restore/ -O -w -x all -v -g test`."
  },
  {
    "question": "Does `dar` accept Unix wild masks after the `-g` flag when specifying files or directories?",
    "answer": "No, `dar` does not accept Unix wild masks after the `-g` flag."
  },
  {
    "question": "Where do archived files with extended attributes typically come from on compute clusters?",
    "answer": "Archived files with extended attributes typically come from a Lustre filesystem (found in `/home`, `/project`, or `/scratch` on general-purpose compute clusters)."
  },
  {
    "question": "How can you view the extended attributes assigned to files within a `dar` archive?",
    "answer": "To see which extended attributes are assigned to each archived file, use the `dar -l all -alist-ea` flag."
  },
  {
    "question": "What error might occur if you extract files with `lustre.lov` attributes to non-Lustre storage?",
    "answer": "If extracting files with `lustre.lov` attributes to node local storage (`$SLURM_TMPDIR`) or other non-Lustre locations, error messages like `Error while adding EA lustre.lov : Operation not supported` may appear."
  },
  {
    "question": "How can you prevent `lustre.lov` extended attribute errors when extracting to a non-Lustre filesystem?",
    "answer": "You can avoid these errors by using the `-u 'lustre*'` flag during extraction, for example: `dar -R restore/ -O -w -x all -v -g test -u 'lustre*'`. The 'affected' files will still be extracted."
  },
  {
    "question": "Is it possible to exclude Lustre extended attributes when creating a `dar` archive?",
    "answer": "Yes, you can get rid of the `lustre.lov` attribute while creating the archive by using the `-u 'lustre*'` flag: `dar -w -c all -g test -u 'lustre*'`."
  },
  {
    "question": "Under what condition is it necessary to exclude `lustre.lov` attributes?",
    "answer": "It is necessary to exclude `lustre.lov` attributes only if you intend to extract files to a location not formatted in Lustre."
  }
]