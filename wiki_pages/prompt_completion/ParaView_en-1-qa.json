[
  {
    "question": "What is the primary purpose of this page regarding ParaView?",
    "answer": "This page describes remote visualization of datasets residing on one of the Alliance's HPC clusters using ParaView."
  },
  {
    "question": "What are the three main workflow scenarios for remote visualization with ParaView on HPC clusters?",
    "answer": "The three main workflow scenarios are small-scale interactive visualization, large-scale interactive visualization (client-server setup), and batch production visualizations."
  },
  {
    "question": "How should I visualize a dataset that is only a few GBs in size?",
    "answer": "For datasets of a few GBs, you can visualize them interactively using a small number of CPU cores by starting a remote desktop session via JupyterHub or Open OnDemand and running ParaView interactively."
  },
  {
    "question": "What is the recommended setup for interactively visualizing a larger dataset?",
    "answer": "For larger datasets, a client-server setup is recommended, where the ParaView client runs on your computer and the server runs in parallel inside a Slurm job on the HPC cluster."
  },
  {
    "question": "What size dataset is considered 'large' on the Trillium cluster for efficient interactive visualization?",
    "answer": "On Trillium, a dataset of 50\u2013100 GB is considered 'large' to efficiently utilize whole-node jobs in multiples of 192 cores, which are the only ones allowed."
  },
  {
    "question": "How do other clusters like Fir, Narval, Nibi, and Rorqual differ from Trillium in terms of scheduling for large datasets?",
    "answer": "On Fir, Narval, Nibi, and Rorqual, you can schedule by core, allowing visualization of much smaller datasets (even single-core), whereas Trillium requires whole-node jobs."
  },
  {
    "question": "When is JupyterHub or Open OnDemand recommended over a client-server configuration for datasets that might be considered 'large'?",
    "answer": "JupyterHub or Open OnDemand is generally recommended for smaller datasets before attempting a client-server configuration, as the latter is more complex."
  },
  {
    "question": "What is the ideal approach for production visualizations, such as generating many frames for a movie?",
    "answer": "Ideally, all production visualizations should be scripted and run as batch, off-screen jobs on the clusters, rendering directly to files without interactive windows."
  },
  {
    "question": "Should the clusters' H100 GPUs be used for visualization with ParaView?",
    "answer": "No, you should not use the clusters' H100 GPUs for visualization, as they are not optimized for graphics rendering."
  },
  {
    "question": "Why are H100 GPUs not recommended for graphics rendering on the clusters?",
    "answer": "H100 GPUs utilize only a small fraction (around 3%) of their on-board thread controllers for OpenGL and Vulkan, leading to poor cluster utilization and rendering speeds comparable to a mid-range laptop GPU."
  },
  {
    "question": "Can MIG instances run graphics APIs like OpenGL or Vulkan?",
    "answer": "No, MIG instances (static GPU partitions) cannot run graphics APIs such as OpenGL or Vulkan."
  },
  {
    "question": "If GPU rendering is absolutely necessary, what alternatives to H100 GPUs are suggested?",
    "answer": "If GPU rendering is absolutely necessary, Nibi's AMD MI300A nodes or older NVIDIA GPUs (e.g., T4) should be used where available."
  },
  {
    "question": "Which clusters use JupyterLab for small-scale interactive visualization?",
    "answer": "Fir, Rorqual, and Narval use JupyterLab for small-scale interactive visualization."
  },
  {
    "question": "Which clusters use Open OnDemand for small-scale interactive visualization?",
    "answer": "Nibi and Trillium use Open OnDemand for small-scale interactive visualization."
  },
  {
    "question": "What is the first step to launch a JupyterLab instance on Fir, Rorqual, or Narval?",
    "answer": "The first step is to sign in to JupyterHub on one of the clusters with your Alliance account."
  },
  {
    "question": "What GPU configuration should be selected in the JupyterHub Server Options for single-core visualization?",
    "answer": "You should select 'None' under 'GPU configuration' in the JupyterHub Server Options for single-core visualization."
  },
  {
    "question": "How many CPU cores should be requested for single-core visualization via JupyterLab?",
    "answer": "You should select '1' under 'Number of Cores' for single-core visualization via JupyterLab."
  },
  {
    "question": "How long does it typically take for a JupyterLab job to start after submission?",
    "answer": "It typically takes about one minute for the JupyterLab job to start and for the dashboard to appear in your browser."
  }
]