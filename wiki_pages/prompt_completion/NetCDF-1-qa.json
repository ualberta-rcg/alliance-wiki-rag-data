[
  {
    "question": "What is NetCDF?",
    "answer": "NetCDF (Network Common Data Form) is an interface for array-oriented data access, a library that implements this interface, and a machine-independent format for representing scientific data. It supports the creation, access, and sharing of scientific data."
  },
  {
    "question": "What significant changes were made to the NetCDF library in version 4.0?",
    "answer": "Significant changes were made with the release of version 4.0. NetCDF 4.x is backwards compatible, meaning it can read files produced by earlier versions, but earlier versions cannot read NetCDF 4.x files. Version 4.0 was released in 2008."
  },
  {
    "question": "Where can I find the project website for NetCDF?",
    "answer": "The project website for NetCDF is https://www.unidata.ucar.edu/software/netcdf."
  },
  {
    "question": "What are some of the strengths of NetCDF?",
    "answer": "NetCDF's strengths include data independence from processor architecture (endianness), structured data that keeps track of pertinent information like physical units, the ability for NetCDF4 to read and write in parallel (if built with a parallel HDF5 version), data compression during writing, a simpler interface than HDF5, and it being free software for most platforms."
  },
  {
    "question": "What are the weak points of NetCDF?",
    "answer": "The weak points of NetCDF are that its Python interface (version 1.0.5) does not support parallelism, and it cannot read certain files produced with HDF5."
  },
  {
    "question": "Which NetCDF modules are available on Compute Canada systems for C programs?",
    "answer": "The 'netcdf' module is available on Compute Canada systems for linking with programs containing C instructions only. For C programs calling MPI libraries, 'netcdf-mpi' is available."
  },
  {
    "question": "What NetCDF module should be used for programs containing both C and C++ instructions?",
    "answer": "For programs containing both C and C++ instructions, the 'netcdf-c++' module should be used. If these programs also call MPI, then 'netcdf-c++-mpi' should be used."
  },
  {
    "question": "How can I see what versions of NetCDF modules are available with my loaded compiler and MPI modules?",
    "answer": "You can run the command `module avail netcdf` to see what versions are currently available with your loaded compiler and MPI modules."
  },
  {
    "question": "How do you load a specific NetCDF version, for example, version 4.1.3 of the C-based library?",
    "answer": "To load NetCDF version 4.1.3 C-based library, you would use the command `module load netcdf/4.1.3`."
  },
  {
    "question": "How do you compile C code with a serial NetCDF library?",
    "answer": "To compile C code with a serial NetCDF library, first load the module (e.g., `module load netcdf/4.4.1`), then compile with `gcc example.c -lnetcdf`."
  },
  {
    "question": "What commands are needed to compile Fortran code with serial NetCDF libraries?",
    "answer": "To compile Fortran code with serial NetCDF libraries, you need to load `gcc` and `netcdf-fortran` modules, then use `gfortran example.f90 -I$EBROOTNETCDFMINFORTRAN/include -lnetcdf -lnetcdff`. It is important that the two libraries (`-lnetcdf -lnetcdff`) are in this specific order."
  },
  {
    "question": "How do you compile C code that calls MPI with a parallel NetCDF library?",
    "answer": "To compile C code that calls MPI with a parallel NetCDF library, first load the `netcdf-mpi` module, then compile with `gcc example.c -lnetcdf`."
  },
  {
    "question": "What is the purpose of the `ncdump` utility?",
    "answer": "The `ncdump` utility generates the CDL text representation of a NetCDF dataset on standard output. It can optionally exclude variable data, and its output is designed to be acceptable as input for `ncgen`, allowing transformation between binary and text representations."
  },
  {
    "question": "What does the `ncgen` utility do?",
    "answer": "The `ncgen` utility takes an input file in CDL (Common Data Language) format and creates a binary NetCDF file. It is the reverse function of `ncdump`."
  },
  {
    "question": "Can `nccopy` change the compression of a NetCDF file?",
    "answer": "Yes, `nccopy` can change compression settings, as well as binary format, chunk sizes, and other storage settings when copying a NetCDF file."
  },
  {
    "question": "What are `nc-config` and `nf-config` used for?",
    "answer": "`nc-config` and `nf-config` are utilities that help users find the correct compilation and linking commands for NetCDF."
  },
  {
    "question": "What is PnetCDF and how does it differ from NetCDF?",
    "answer": "PnetCDF is another library for reading and writing NetCDF-format files. It differs from NetCDF by using different procedure names and providing non-blocking procedures."
  }
]