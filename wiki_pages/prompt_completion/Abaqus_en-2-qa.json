[
  {
    "question": "What are the common Slurm SBATCH directives specified in a project directory script for a single-node Abaqus Standard Analysis job?",
    "answer": "The common Slurm SBATCH directives include `--account=def-group`, `--time=00-06:00`, `--cpus-per-task=4`, `--mem=8G`, and `--nodes=1`."
  },
  {
    "question": "Which Abaqus and environment modules should be loaded for a Standard Analysis job?",
    "answer": "The latest installed versions `StdEnv/2020` and `abaqus/2021` should be loaded. Older versions like `StdEnv/2016` and `abaqus/2020` can also be used."
  },
  {
    "question": "What is the Abaqus command line structure for a Standard Analysis job running in threads mode?",
    "answer": "The command typically looks like `abaqus job=testsp1 input=mystd-sim.inp scratch=$SLURM_TMPDIR cpus=$SLURM_CPUS_ON_NODE interactive mp_mode=threads memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"`."
  },
  {
    "question": "How do you enable GPU usage for a single-node Abaqus job within the Slurm script and Abaqus command?",
    "answer": "To enable GPU usage, uncomment the relevant `--gres` SBATCH directive (e.g., `##SBATCH --gres=gpu:t4:1` or `##SBATCH --gres=gpu:a100:1`) and uncomment `gpus=$SLURM_GPUS_ON_NODE` in the Abaqus command line."
  },
  {
    "question": "How do you configure an Abaqus input file to write restart data every N time increments?",
    "answer": "You should specify `*RESTART, WRITE, OVERLAY, FREQUENCY=N` in the input file, replacing N with the desired number of increments (e.g., 12)."
  },
  {
    "question": "How do you configure an Abaqus input file to write restart data for a total of N time increments?",
    "answer": "You should specify `*RESTART, WRITE, OVERLAY, NUMBER INTERVAL=N, TIME MARKS=NO` in the input file, replacing N with the desired total number of increments (e.g., 12)."
  },
  {
    "question": "What command can be used to check for completed restart information in Abaqus Standard Analysis jobs?",
    "answer": "The command `egrep -i \"step|start\" testsp*.com testsp*.msg testsp*.sta` can be used to check for completed restart information."
  },
  {
    "question": "What optional argument can be added to the Abaqus command for some simulations to potentially improve performance?",
    "answer": "`order_parallel=OFF` can be added to the Abaqus command at the bottom of the script for potential simulation benefits."
  },
  {
    "question": "What is the Abaqus command line to restart a Standard Analysis job using a project directory restart script?",
    "answer": "The command uses the `oldjob` argument: `abaqus job=testsp2 oldjob=testsp1 input=mystd-sim-restart.inp ...`, where `testsp1` is the name of the previous job."
  },
  {
    "question": "What are the required lines in the input file for a Standard Analysis restart job?",
    "answer": "The restart input file should contain `*HEADING` and `*RESTART, READ`."
  },
  {
    "question": "When would you use a 'temporary directory script' for Abaqus Standard Analysis, and which environment variable is crucial for it?",
    "answer": "Temporary directory scripts are used for single-node jobs that create large restart files to benefit from writing to local disk, utilizing the `SLURM_TMPDIR` environment variable."
  },
  {
    "question": "How is the scratch directory created and used within a temporary directory script for Abaqus?",
    "answer": "The script creates a scratch directory using `mkdir $SLURM_TMPDIR/scratch` and specifies it in the Abaqus command with `scratch=$SLURM_TMPDIR/scratch`."
  },
  {
    "question": "How does a temporary directory script ensure data is saved back to the submission directory?",
    "answer": "It uses a background process (`while sleep 6h; do cp -fv * $SLURM_SUBMIT_DIR 2>/dev/null; done &`) to periodically copy data back to `$SLURM_SUBMIT_DIR` and then kills this process once the Abaqus job completes."
  },
  {
    "question": "What specific steps are taken in a temporary directory restart script to prepare for a restart job?",
    "answer": "Before running the Abaqus job, the script copies the previous job's files to the temporary directory, e.g., `cp testst1* $SLURM_TMPDIR`, and then changes into that directory (`cd $SLURM_TMPDIR`)."
  }
]