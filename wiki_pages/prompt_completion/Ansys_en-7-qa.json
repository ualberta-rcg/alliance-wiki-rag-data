[
  {
    "question": "What is the purpose of the Fluent multinode (by core + requeue) script?",
    "answer": "The Fluent multinode (by core + requeue) script is designed for Fluent jobs that frequently fail to start due to license shortages and typically require multiple requeue attempts to obtain licenses."
  },
  {
    "question": "How do you specify the number of requeue attempts in a Fluent multinode (by core + requeue) Slurm script?",
    "answer": "The number of requeue attempts is specified using the '#SBATCH --array=1-5%1' directive, where '5' represents the desired number of attempts (2 or more)."
  },
  {
    "question": "Which software modules are typically loaded for newer Ansys versions in the Fluent multinode (by core + requeue) script?",
    "answer": "For newer Ansys versions, the script loads `StdEnv/2023` and `ansys/2023R2` (or newer versions)."
  },
  {
    "question": "What action is taken if a Fluent job using a requeue script completes successfully?",
    "answer": "If a Fluent job with a requeue script completes successfully, it prints 'Job completed successfully! Exiting now.' and then cancels the entire job array using `scancel $SLURM_ARRAY_JOB_ID`."
  },
  {
    "question": "What is the primary goal of the Ansys Fluent solution restart scripts?",
    "answer": "The solution restart scripts aim to automate the restarting of very large Fluent jobs that exceed the typical seven-day maximum runtime window available on most clusters."
  },
  {
    "question": "What is a prerequisite for the first time step when utilizing Fluent solution restart scripts?",
    "answer": "A fundamental requirement is that the first time step must be completed within the requested job array time limit, as specified at the top of the Slurm script, when initiating a simulation from an initialized solution field."
  },
  {
    "question": "What initial files are necessary to use the Fluent solution restart feature?",
    "answer": "To begin, a working set of `sample.cas`, `sample.dat`, and `sample.jou` files must be present."
  },
  {
    "question": "How should the `sample.jou` file be modified to enable Fluent solution restart functionality?",
    "answer": "The `sample.jou` file should be edited to include `/solve/dual-time-iterate 1` and `/file/auto-save/data-frequency 1`."
  },
  {
    "question": "Describe the process of creating and modifying a restart journal file (`sample-restart.jou`) for Fluent solution restart.",
    "answer": "First, create `sample-restart.jou` by copying `sample.jou`. Then, edit `sample-restart.jou` to contain `/file/read-cas-data sample-restart` instead of `/file/read-cas-data sample`, and comment out the initialization line, for example, by adding a semicolon: `;/solve/initialize/initialize-flow`."
  },
  {
    "question": "If subsequent time steps are known to be faster, how can the `sample-restart.jou` file be configured to optimize restarts?",
    "answer": "To optimize restarts, `sample-restart.jou` can be edited to specify `/solve/dual-time-iterate 2`. The value '2' is arbitrary but should be chosen so that the time for two steps fits within the job array's time limit, minimizing the number of computationally expensive solution restarts."
  },
  {
    "question": "What is the maximum time limit that can be specified in the Slurm script for Fluent solution restart jobs?",
    "answer": "The Slurm time limit for Fluent solution restart jobs can be specified up to a maximum of `#SBATCH --time=07-00:00` days."
  },
  {
    "question": "How is the total number of time steps (and output files generated) calculated when using Fluent solution restart scripts, assuming an initial step and subsequent steps of a chosen duration?",
    "answer": "If an initial step is followed by `Nrestart` restarts, each completing '2' time steps, the total number of time steps (and output files) will be `1 + 2 * Nrestart`."
  }
]