[
  {
    "question": "What adjustments are needed when installing minor updates of MIKE in the same year?",
    "answer": "For minor updates, the filenames for the archives (e.g., in `tar -xzf MIKE_Zero_2023_rhel7_22.11.05.tgz`) and the directory names (e.g., in `cd $MIKE_TGZ/MIKE_Zero_2023_rhel7_22.11.05`) need to be adjusted accordingly."
  },
  {
    "question": "How should Intel MPI be handled for future major releases of MIKE?",
    "answer": "Future major releases of MIKE may require adapting the instructions to use a newer version of Intel MPI, by trying an Intel MPI library module with a matching major version (i.e., year)."
  },
  {
    "question": "What is the main difference in the provided MIKE installation instructions compared to the official procedure?",
    "answer": "The main exception is that the installation of `MIKE_Zero_*_Prerequisites.tgz` (Intel MPI library) is skipped, and instead, a matching module is loaded."
  },
  {
    "question": "What is the purpose of the `setrpaths.sh` script during MIKE installation?",
    "answer": "The `setrpaths.sh` script is used to patch the installed binaries, making them compatible with the software stack."
  },
  {
    "question": "Who should be contacted if there are issues adapting the MIKE installation guide for newer versions?",
    "answer": "If you encounter problems adapting the recipe for newer versions of MIKE, you should contact Technical support."
  },
  {
    "question": "What steps are required to create an environment module for MIKE?",
    "answer": "To create an environment module for MIKE, paste the provided commands into your terminal, making sure to adjust the MIKE version and the versions of the `intelmpi` and `intel` modules to match your installation."
  },
  {
    "question": "How can a newly created MIKE environment module be made visible?",
    "answer": "After running the commands to create the module, you either need to do a fresh login or run `module use $HOME/modulefiles`."
  },
  {
    "question": "What are the module dependencies for MIKE 2025?",
    "answer": "The module for MIKE 2025 depends on `StdEnv/2023`, `intel/2023.2.1`, and `intelmpi/2021.9.0`."
  },
  {
    "question": "How do you activate the MIKE 2024 module?",
    "answer": "You activate the MIKE 2024 module in each job or login session by running `module load StdEnv/2023 mike/2024`."
  },
  {
    "question": "What command is used to configure an internet license for MIKE?",
    "answer": "The command to configure an internet license for MIKE is `licconfig set --type=internet --iuser=user@example.com --ipassword=my-password`, with `user@example.com` and `my-password` replaced by your actual credentials."
  },
  {
    "question": "How often is the MIKE license configuration typically required?",
    "answer": "The MIKE license configuration normally needs to be done only once whenever you acquire a new license or license code."
  },
  {
    "question": "Where is the MIKE license information stored after configuration?",
    "answer": "The MIKE license information is stored in the file `~/.config/DHI/license/NetLmLcwConfig.xml`."
  },
  {
    "question": "What module loading command is needed for a MIKE 2023 job script?",
    "answer": "For a MIKE 2023 job script, you need to load `StdEnv/2020`, `intel/2021.2.0`, `intelmpi/2021.2.0`, and `mike/2023`."
  },
  {
    "question": "How does the MIKE 2022 example job script handle MPI execution?",
    "answer": "The MIKE 2022 example job script uses `slurm_hl2hl.py --format MPIHOSTLIST > machinefile.$SLURM_JOBID` to create a machinefile, and then executes `mpirun -machinefile machinefile.$SLURM_JOBID $engine $model`."
  }
]