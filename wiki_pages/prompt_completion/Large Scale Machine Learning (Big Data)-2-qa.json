[
  {
    "question": "How do Snap ML estimators support thread parallelism?",
    "answer": "All estimators in Snap ML support thread parallelism, which is controlled via the `n_jobs` parameter."
  },
  {
    "question": "What parameter controls thread parallelism in Snap ML?",
    "answer": "The `n_jobs` parameter controls thread parallelism in Snap ML estimators."
  },
  {
    "question": "How should the `n_jobs` parameter be set for good speedup in Snap ML?",
    "answer": "Setting the `n_jobs` parameter to the number of cores available in your job will typically deliver a good speedup relative to the scikit-learn implementation."
  },
  {
    "question": "Does Snap ML support GPU acceleration for its estimators?",
    "answer": "Yes, all estimators in Snap ML support GPU acceleration, for one or multiple GPUs."
  },
  {
    "question": "How do you enable single GPU training with Snap ML?",
    "answer": "For single GPU training with Snap ML, you simply set the parameter `use_gpu=True`."
  },
  {
    "question": "How do you configure Snap ML for training with multiple GPUs?",
    "answer": "For multiple GPU training, in addition to setting `use_gpu=True`, you must pass a list containing the GPU IDs available to your job to the `device_ids` parameter (e.g., `device_ids=[0,1]` for two GPUs)."
  },
  {
    "question": "What type of machine learning model is used to demonstrate GPU training in the provided example?",
    "answer": "The example demonstrates GPU training using an SVM classifier with a non-linear kernel."
  },
  {
    "question": "What type of solvers do Snap ML estimators use by default?",
    "answer": "All estimators in Snap ML use first-order iterative solvers, similar to SGD, by default."
  },
  {
    "question": "Can Snap ML perform training when the entire dataset does not fit into memory?",
    "answer": "Yes, Snap ML can perform training in batches, avoiding the need to load entire datasets into memory, because its estimators use first-order iterative solvers."
  },
  {
    "question": "How does Snap ML handle memory-mapped numpy arrays for out-of-memory training?",
    "answer": "Unlike scikit-learn, Snap ML accepts memory-mapped numpy arrays as inputs directly for out-of-memory training."
  }
]