[
  {
    "question": "What is VirSorter2 used for?",
    "answer": "VirSorter2 is a tool designed to identify new viral sequences."
  },
  {
    "question": "Which specific version of VirSorter2 is covered in this document?",
    "answer": "This page discusses how to install and use VirSorter2 v2.2.4."
  },
  {
    "question": "Where can I find the source code and additional documentation for VirSorter2?",
    "answer": "Source code and documentation for VirSorter2 can be found on their GitHub page."
  },
  {
    "question": "How should VirSorter2 be acknowledged if used in analyses?",
    "answer": "Users should remember to cite VirSorter2 by referencing the article available at microbiomejournal.biomedcentral.com."
  },
  {
    "question": "What is the recommended installation method for VirSorter2?",
    "answer": "VirSorter2 should be installed in a Python virtual environment in your $HOME directory, utilizing Alliance's prebuilt Python wheels."
  },
  {
    "question": "Which modules need to be loaded before installing VirSorter2?",
    "answer": "The necessary modules to load are `StdEnv/2020`, `python/3.8`, `hmmer/3.3.2`, and `prodigal/2.6.3`."
  },
  {
    "question": "How do you create a Python virtual environment for VirSorter2?",
    "answer": "A Python virtual environment can be created by running `virtualenv --no-download ~/ENV_virsorter`."
  },
  {
    "question": "How do you activate the newly created VirSorter2 virtual environment?",
    "answer": "You activate the virtual environment by running `source ~/ENV_virsorter/bin/activate`."
  },
  {
    "question": "What command is used to install VirSorter2 v2.2.4 within the virtual environment?",
    "answer": "To install VirSorter2 v2.2.4, run `pip install --no-index virsorter==2.2.4`."
  },
  {
    "question": "How can you validate that VirSorter2 has been installed correctly?",
    "answer": "The installation can be validated by running the command `virsorter -h`."
  },
  {
    "question": "How do you save a list of all installed packages in the VirSorter2 virtual environment?",
    "answer": "To save the environment and requirements, use the command `pip freeze > ~/virsorter-2.2.4-requirements.txt`."
  },
  {
    "question": "What command is used to download the VirSorter2 database?",
    "answer": "The VirSorter2 database can be downloaded using `virsorter setup --db-dir $SCRATCH/db -j 4 --skip-deps-install`."
  },
  {
    "question": "Why is the `--skip-deps-install` option used when downloading the VirSorter2 database?",
    "answer": "The `--skip-deps-install` option is used to bypass conda installation because the dependencies are already installed."
  },
  {
    "question": "What is the first step when preparing to test VirSorter2 after installation?",
    "answer": "The first step is to deactivate your current virtual environment using the command `deactivate`."
  },
  {
    "question": "How do you download the test dataset for VirSorter2?",
    "answer": "The test dataset can be downloaded to `$SCRATCH` by running `wget -O $SCRATCH/test.fa https://raw.githubusercontent.com/jiarong/VirSorter2/master/test/8seq.fa`."
  },
  {
    "question": "What SLURM directives are included in the `test-virsorter.sh` submission script?",
    "answer": "The `test-virsorter.sh` script includes `#SBATCH --time=00:30:00`, `#SBATCH --mem-per-cpu=2G`, and `#SBATCH --cpus-per-task=2`."
  },
  {
    "question": "In the submission script, where is the Python virtual environment created for testing?",
    "answer": "The virtual environment for testing is generated in the `$SLURM_TMPDIR` directory."
  },
  {
    "question": "What command within the submission script installs VirSorter2 and its dependencies for the test run?",
    "answer": "The command `pip install --no-index -r ~/virsorter-2.2.4-requirements.txt` is used to install VirSorter2 and its dependencies from the requirements file."
  },
  {
    "question": "How do you start an interactive job to execute the VirSorter2 test script?",
    "answer": "An interactive job is started with `salloc --mem-per-cpu=2G --cpus-per-task=2 --account=<your-account>`, then the script is run with `bash test-virsorter.sh`."
  },
  {
    "question": "What command runs VirSorter2 with the test dataset inside the submission script?",
    "answer": "The command to run VirSorter2 is `virsorter run -w $SCRATCH/test.out -i $SCRATCH/test.fa --min-length 1500 -j $SLURM_CPUS_PER_TASK --verbose --use-conda-off --db-dir $SCRATCH/db all`."
  },
  {
    "question": "After a successful test run, how can users submit non-interactive VirSorter2 jobs with their own datasets?",
    "answer": "Upon a successful test run, users can submit non-interactive jobs using the `sbatch` command."
  }
]