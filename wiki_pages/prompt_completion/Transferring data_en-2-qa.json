[
  {
    "question": "How does Globus determine if files with the same size but different content should be transferred during synchronization?",
    "answer": "Globus can transfer files if their checksums are different. This is the slowest but most accurate option, catching changes or errors that result in the same size of file but with different contents."
  },
  {
    "question": "Which Globus sync option is best for transferring only newly created files since the last synchronization?",
    "answer": "The 'File doesn't exist on destination' option will only transfer files that have been created since the last sync, which is useful for incrementally creating files."
  },
  {
    "question": "What is a quick way for Globus to decide if a file needs to be re-transferred?",
    "answer": "Globus can use the 'File size is different' option as a quick test. If the file size has changed, its contents must have changed, and it will be re-transferred."
  },
  {
    "question": "What Globus option should be used to transfer files only if the source version is newer than the destination, and what accompanying setting is important?",
    "answer": "The 'Modification time is newer' option will check the file's recorded modification time and only transfer the file if it is newer on the source than the destination. If you want to depend on this, it is important to check the 'preserve source file modification times' option when initiating a Globus transfer."
  },
  {
    "question": "What is Rsync used for, and what factors can make it slow?",
    "answer": "Rsync is a popular tool for ensuring that two separate datasets are the same. It can be quite slow if there are a lot of files or there is a lot of latency between the two sites, such as when they are geographically apart or on different networks."
  },
  {
    "question": "How does Rsync typically decide which files to transfer?",
    "answer": "Running rsync will check the modification time and size of each file, and will only transfer the file if one or the other does not match."
  },
  {
    "question": "When should the `-c` option be used with `rsync`?",
    "answer": "If you expect modification times not to match on the two systems, you can use the `-c` option, which will compute checksums at the source and destination, and transfer only if the checksums do not match."
  },
  {
    "question": "Which `rsync` flags should not be used when transferring files to `/project` file systems, and why?",
    "answer": "When transferring files into `/project` file systems, do not use `-p` (preserve permissions) and `-g` (preserve group ownership) flags. This is because quotas in `/project` are enforced based on group ownership, and preserving group ownership can lead to a 'Disk quota exceeded' error."
  },
  {
    "question": "How should the `rsync -a` command be modified when transferring to `/project` directories to avoid issues?",
    "answer": "Since `-a` (archive mode) includes `-p` and `-g` by default, the `--no-g --no-p` options should be added, for example: `rsync -avzh --no-g --no-p LOCALNAME someuser@nibi.alliancecan.ca:projects/def-professor/someuser/somedir/`."
  },
  {
    "question": "What do the `-z` and `-h` options do in an `rsync` command?",
    "answer": "The `-z` option compresses files (though it requires additional CPU resources) and the `-h` option makes transferred file sizes human readable."
  },
  {
    "question": "What option should be used with `rsync` to allow interrupted transfers of very large files to be restarted?",
    "answer": "If you are transferring very large files, add the `--partial` option so interrupted transfers may be restarted."
  },
  {
    "question": "How can `rsync` display the transfer progress for each file versus a single progress bar for all files?",
    "answer": "The `--progress` option will display the percent progress of each file as it's transferred. If transferring many smaller files, `--info=progress2` is more desirable to display a single progress bar for the transfer progress of all files."
  },
  {
    "question": "Provide an example command for using `rsync` to transfer files from a remote system to a local project directory.",
    "answer": "An example command for transferring files from a remote system to a local project directory is: `rsync -avzh --no-g --no-p someuser@nibi.alliancecan.ca:REMOTENAME ~/projects/def-professor/someuser/somedir/` where REMOTENAME is the remote file/directory and somedir is the local destination directory."
  },
  {
    "question": "How does `rsync` differ from `cp` when copying a directory to a non-existent destination directory locally?",
    "answer": "Unlike `rsync`, if `LOCALNAME` is a directory and `somedir` does not exist when using `cp`, the `cp` command will rename `LOCALNAME` to `somedir`."
  }
]