[
  {
    "question": "How do you enable Weights & Biases (wandb) in offline mode within a shell script?",
    "answer": "You can enable wandb's offline mode by including the command `wandb offline` in your shell script."
  },
  {
    "question": "What is the purpose of the `wandb-test.py` script provided in the example?",
    "answer": "The `wandb-test.py` script is a simple example of metric logging using Weights & Biases."
  },
  {
    "question": "How is `wandb` initialized within the `wandb-test.py` Python script?",
    "answer": "Within `wandb-test.py`, `wandb` is initialized with the line `wandb.init(project=\"wandb-pytorch-test\", settings=wandb.Settings(start_method=\"fork\"))`."
  },
  {
    "question": "How are metrics logged in the `wandb-test.py` example script?",
    "answer": "Metrics are logged using `wandb.log({'my_metric': my_metric})` within a loop in the `wandb-test.py` script."
  },
  {
    "question": "What folder is created after a `wandb` training run is completed in offline mode?",
    "answer": "After a training run in offline mode, a new folder named `./wandb/offline-run*` will be created."
  },
  {
    "question": "How can you send the metrics from an offline `wandb` run to the online server?",
    "answer": "You can send the metrics to the server by running the command `wandb sync ./wandb/offline-run*`."
  },
  {
    "question": "What is the effect of using the `*` wildcard with the `wandb sync` command for offline runs?",
    "answer": "Using `*` in `wandb sync ./wandb/offline-run*` will sync all offline runs recorded in folders matching that pattern."
  }
]