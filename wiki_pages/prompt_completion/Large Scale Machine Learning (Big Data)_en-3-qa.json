[
  {
    "question": "How do you enable single GPU training in Snap ML?",
    "answer": "For single GPU training in Snap ML, simply set the parameter `use_gpu=True`."
  },
  {
    "question": "How do you enable multi-GPU training in Snap ML?",
    "answer": "For multiple GPU training in Snap ML, in addition to setting `use_gpu=True`, pass a list containing the GPU IDs available to your job to the `device_ids` parameter. For example, `device_ids=[0,1]` can be used for a job with two GPUs."
  },
  {
    "question": "What type of machine learning model is demonstrated for GPU training with Snap ML in the example provided?",
    "answer": "The example demonstrates training an SVM classifier with a non-linear kernel using Snap ML with GPU acceleration."
  },
  {
    "question": "What is the default solver characteristic for estimators in Snap ML regarding out-of-memory training?",
    "answer": "All estimators in Snap ML use first-order iterative solvers, similar to SGD, by default, which enables training in batches and avoiding loading entire datasets in memory."
  },
  {
    "question": "How does Snap ML handle memory-mapped numpy arrays for out-of-memory training compared to scikit-learn?",
    "answer": "Unlike scikit-learn, Snap ML accepts memory-mapped numpy arrays as inputs directly for out-of-memory training."
  },
  {
    "question": "How can Snap ML be run in distributed mode?",
    "answer": "To run Snap ML in distributed mode, call your Python script using `mpirun` or `srun`."
  },
  {
    "question": "What is Spark ML?",
    "answer": "Spark ML is a machine learning library built on top of Apache Spark."
  },
  {
    "question": "What capabilities does Spark ML offer to users?",
    "answer": "Spark ML enables users to scale out many machine learning methods to massive amounts of data over multiple nodes, without needing to worry about distributing datasets or explicitly writing distributed/parallel code."
  },
  {
    "question": "What additional tools are included in the Spark ML library?",
    "answer": "The Spark ML library includes many useful tools for distributed linear algebra and statistics."
  }
]