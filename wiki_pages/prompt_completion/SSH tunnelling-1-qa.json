[
  {
    "question": "What is SSH tunnelling?",
    "answer": "SSH tunnelling is a method to use a gateway computer to connect two computers that cannot connect directly."
  },
  {
    "question": "Why is SSH tunnelling necessary in the context of the Alliance?",
    "answer": "In the context of the Alliance, SSH tunnelling is necessary because compute nodes on some clusters do not have direct access to the Internet, nor can they be contacted directly from the Internet."
  },
  {
    "question": "What are some common use cases that require SSH tunnels?",
    "answer": "Use cases requiring SSH tunnels include running commercial software needing to contact a license server over the Internet, running visualization software needing client contact from a user's local computer, and connecting to a database hosted on a cluster from a desktop."
  },
  {
    "question": "What is a port?",
    "answer": "A port is a number used to distinguish streams of communication from one another, analogous to a radio frequency or a channel, with many port numbers reserved for specific types of traffic."
  },
  {
    "question": "Why is SSH tunnelling (port forwarding) required for commercially licensed programs on compute nodes?",
    "answer": "If a commercially licensed program running on a compute node needs to connect to a license server on the Internet via a predetermined port, but the compute node has no direct Internet access, then a gateway server must be used to forward communications on that port by setting up an SSH tunnel."
  },
  {
    "question": "What information is required to set up an SSH tunnel for a license server in a batch job?",
    "answer": "You will need the IP address or the name of the license server (LICSERVER) and the port number of the license service (LICPORT)."
  },
  {
    "question": "Where should you obtain the license server information from?",
    "answer": "You should obtain this information from whoever maintains the license server."
  },
  {
    "question": "What are the outgoing IP addresses for Niagara when connecting to a license server?",
    "answer": "For Niagara, the outgoing IP address will either be 142.1.174.227 or 142.1.174.228."
  },
  {
    "question": "What is the gateway server for Niagara when setting up an SSH tunnel?",
    "answer": "The gateway server (GATEWAY) on Niagara is nia-gw."
  },
  {
    "question": "What is an alternative solution for Nibi when connecting to a license server?",
    "answer": "For nibi, an alternative solution is to request a firewall exception for the license server LICSERVER and its specific port LICPORT."
  },
  {
    "question": "What is the SSH command used in a job script to set up a tunnel for contacting a license server?",
    "answer": "The SSH command to issue in the job script is `ssh GATEWAY -L COMPUTEPORT:LICSERVER:LICPORT -N -f`."
  },
  {
    "question": "What do the `-N` and `-f` parameters signify in the SSH tunnel command?",
    "answer": "The `-N` parameter tells SSH not to open a shell on the GATEWAY, and `-f` and `-N` together tell SSH not to open a shell and to run in the background, allowing the job script to continue."
  },
  {
    "question": "How can you inform the software in a job script that the license server is on a specific port on `localhost`?",
    "answer": "Often, it is simply a matter of setting an environment variable in the job script like `export MLM_LICENSE_FILE=COMPUTEPORT@localhost`."
  },
  {
    "question": "What is the meaning of `localhost`?",
    "answer": "The term `localhost` is the standard name by which a computer refers to itself and should be taken literally, not replaced with your computer's name."
  },
  {
    "question": "What is the purpose of SSH tunnelling when connecting to a program running on a compute node?",
    "answer": "SSH tunnelling allows a user's computer to connect to a compute node on a cluster through an encrypted tunnel via the login node, enabling graphical output of applications (like Jupyter Notebook or visualization software) to be displayed on the user's local workstation, or binding an external port to a database server."
  },
  {
    "question": "What tool is recommended for creating SSH tunnels on Linux or MacOS X systems?",
    "answer": "On a Linux or MacOS X system, the `sshuttle` Python package is recommended."
  },
  {
    "question": "How do you create an SSH tunnel using `sshuttle` on Linux or MacOS X?",
    "answer": "You open a new terminal window and run the command `sshuttle --dns -Nr userid@machine_name`."
  },
  {
    "question": "How can an SSH tunnel be created from Windows?",
    "answer": "An SSH tunnel can be created from Windows using MobaXTerm."
  },
  {
    "question": "What are the general steps to set up an SSH tunnel using MobaXTerm on Windows?",
    "answer": "You open two sessions in MobaXTerm: Session 1 for connecting to a cluster and starting your job to get a URL, and Session 2 as a local terminal to set up the SSH tunnel using a specific `ssh -L` command."
  },
  {
    "question": "How do you modify an application's URL to use an SSH tunnel set up on Windows with MobaXTerm?",
    "answer": "Modify the URL by replacing the host name with `localhost`, for example, changing `http://fc3281.int.fir.alliancecan.ca:8888/?token=...` to `http://localhost:8888/?token=...`."
  },
  {
    "question": "How can you create an SSH tunnel from your desktop to a PostgreSQL database server on Fir?",
    "answer": "You can use the command `ssh -L PORT:cedar-pgsql-vm.int.cedar.computecanada.ca:5432 someuser@fir.alliancecan.ca`."
  },
  {
    "question": "How can you create an SSH tunnel from your desktop to a MySQL database server on Fir?",
    "answer": "You can use the command `ssh -L PORT:cedar-mysql-vm.int.cedar.computecanada.ca:3306 someuser@fir.alliancecan.ca`."
  },
  {
    "question": "What is the recommended maximum value for the local port number (PORT) when connecting to a database server via SSH tunnel?",
    "answer": "The port number you choose (PORT) should not be bigger than 32768."
  },
  {
    "question": "How do you connect to a PostgreSQL database server from your desktop after setting up an SSH tunnel?",
    "answer": "On your desktop, run the command `psql -h 127.0.0.1 -p PORT -U <your username> -d <your database>`."
  },
  {
    "question": "How do you connect to a MySQL database server from your desktop after setting up an SSH tunnel?",
    "answer": "On your desktop, run the command `mysql -h 127.0.0.1 -P PORT -u <your username> --protocol=TCP -p`."
  },
  {
    "question": "Where is the MySQL password stored for connecting to a database server on Fir?",
    "answer": "The MySQL password is stored in your `.my.cnf` located in your home directory on Fir."
  },
  {
    "question": "How long will a database connection remain open when using an SSH tunnel?",
    "answer": "The database connection will remain open as long as the SSH connection remains open."
  }
]