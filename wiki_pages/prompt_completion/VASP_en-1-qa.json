[
  {
    "question": "What is VASP?",
    "answer": "VASP (The Vienna ab initio Simulation Package) is a computer program for atomic scale materials modelling, including electronic structure calculations and quantum mechanical molecular dynamics, from first principles."
  },
  {
    "question": "What are the general licensing terms for VASP?",
    "answer": "VASP is commercial software, typically licensed only to groups hired by a single legal entity, which is incompatible with a broad installation on our infrastructure."
  },
  {
    "question": "Why might users need to install VASP themselves?",
    "answer": "Due to licensing restrictions, we cannot install VASP centrally on all infrastructure, so users may have to install it themselves."
  },
  {
    "question": "What kind of support is provided for VASP software installation?",
    "answer": "Support for users installing VASP themselves is limited due to the licensing restrictions."
  },
  {
    "question": "Which universities have special licensing agreements for VASP on their clusters?",
    "answer": "Simon Fraser University, the University of Waterloo, and the University of Toronto have licenses with VASP for their clusters Cedar, Graham, and Niagara, respectively."
  },
  {
    "question": "How can employees of universities with site exceptions access prebuilt VASP binaries?",
    "answer": "Employees of Simon Fraser University, the University of Waterloo, and the University of Toronto are allowed to access and install specific versions of VASP on Cedar, Graham, and Niagara."
  },
  {
    "question": "What information is needed to request access to prebuilt VASP binaries on Cedar, Graham, or Niagara?",
    "answer": "You must contact Technical Support and include license holder (PI) information (Name, Email, Department, Institution), license information (VASP version 4 or 5, license number), and an updated list of licensed users."
  },
  {
    "question": "Can a user with a VASP version 5 license use version 4?",
    "answer": "Yes, if you are licensed for version 5, you may also use version 4."
  },
  {
    "question": "Does a VASP version 4 license permit usage of version 5?",
    "answer": "No, a version 4 license does not permit you to use version 5."
  },
  {
    "question": "If a user has a VASP version 6 license, which other versions can they use?",
    "answer": "If you are licensed for version 6, you may also use versions 5 and 4."
  },
  {
    "question": "On which computer clusters are prebuilt VASP binary files installed?",
    "answer": "Prebuilt VASP binary files are installed only on Cedar, Graham, and Niagara."
  },
  {
    "question": "Why are prebuilt VASP binaries not installed centrally on all computer clusters?",
    "answer": "According to the license agreement, we are not allowed to install VASP centrally on other computer clusters."
  },
  {
    "question": "How do you load prebuilt VASP on Graham and Cedar?",
    "answer": "First, run `module spider vasp` to see available versions. Then, run `module spider vasp/<version>` for dependencies, and finally load the dependencies and the VASP module (e.g., `module load intel/2020.1.217 intelmpi/2019.7.217 vasp/5.4.4`)."
  },
  {
    "question": "Where can I find instructions for using VASP on Niagara?",
    "answer": "To use VASP on Niagara, please refer to the SciNet VASP wiki page."
  },
  {
    "question": "Are GPU versions of VASP available on Niagara?",
    "answer": "No, Niagara nodes do not have GPUs, so GPU versions are not available on that system."
  },
  {
    "question": "Where are VASP pseudopotential files located on Cedar and Graham?",
    "answer": "All pseudopotential files are located in `$EBROOTVASP/pseudopotentials/` on Cedar and Graham and can be accessed once the VASP module is loaded."
  },
  {
    "question": "What are the executable files for VASP-4.6?",
    "answer": "For VASP-4.6, the executable files are `vasp` (for standard NVT calculations with non-gamma k points), `vasp-gamma` (for standard NVT calculations with only gamma points), and `makeparam` (to estimate memory)."
  },
  {
    "question": "What are the executable files for VASP-5.4.1, 5.4.4, and 6.1.0 without CUDA support?",
    "answer": "Without CUDA support, the executable files are `vasp_std` (for standard NVT calculations with non-gamma k points), `vasp_gam` (for standard NVT calculations with only gamma points), and `vasp_ncl` (for NPT calculations with non-gamma k points)."
  },
  {
    "question": "What are the executable files for VASP-5.4.4 and 6.1.0 with CUDA support?",
    "answer": "With CUDA support, the executable files are `vasp_gpu` (for standard NVT calculations with gamma and non-gamma k points) and `vasp_gpu_ncl` (for NPT calculations with gamma and non-gamma k points)."
  },
  {
    "question": "What two extensions are incorporated into VASP?",
    "answer": "The Transition State Tools and VASPsol extensions have been incorporated."
  },
  {
    "question": "What should a user do if a specific VASP version is not available as a prebuilt binary?",
    "answer": "If a needed VASP version is not available, users can either build it themselves or contact Technical Support to request it be built and installed."
  },
  {
    "question": "What is the primary benefit of Vasp-GPU executable files?",
    "answer": "Vasp-GPU executable files run on both GPUs and CPUs of a node, and calculations on a GPU can be significantly more performant than on a CPU."
  },
  {
    "question": "Why is it recommended to benchmark Vasp-GPU usage?",
    "answer": "It is highly recommended to perform a benchmark using one or two GPUs to ensure maximum performance and avoid wasting computer resources, as performance gains might not be substantial beyond a certain number of GPUs (e.g., from one to two GPUs)."
  },
  {
    "question": "What are the typical SBATCH directives in a VASP job script for CPU execution?",
    "answer": "A VASP CPU job script typically includes directives for account (`--account`), number of MPI processes (`--ntasks`), memory per CPU (`--mem-per-cpu`), and time limit (`--time`)."
  },
  {
    "question": "How many CPU cores and memory are requested in the example VASP CPU job script?",
    "answer": "The example VASP CPU job script requests four CPU cores and 4096MB memory (4x1024MB)."
  },
  {
    "question": "What are the typical SBATCH directives in a VASP job script for GPU execution?",
    "answer": "A VASP GPU job script typically includes directives for account (`--account`), number of CPU processes per task (`--cpus-per-task`), GPU resources (`--gres`), total memory (`--mem`), and time limit (`--time`)."
  },
  {
    "question": "What type of GPU is requested in the example VASP GPU job script and where is it available?",
    "answer": "The example VASP GPU job script requests one GPU of type `p100`, which is only available on Cedar."
  },
  {
    "question": "What are the four input files VASP uses?",
    "answer": "VASP uses four input files named INCAR, KPOINTS, POSCAR, and POTCAR."
  },
  {
    "question": "How should input files be organized for a VASP job?",
    "answer": "It is best to prepare VASP input files in a separate directory for each job."
  },
  {
    "question": "How do you submit a VASP job script?",
    "answer": "To submit a VASP job, navigate to the directory containing the input files and job script, then use `sbatch vasp_job.sh`."
  },
  {
    "question": "How can users estimate the memory required for a VASP job?",
    "answer": "Users can prepare all input files and run `makeparam` in an interactive job submission to estimate memory, or check the maximum stack size used by completed jobs for a more accurate estimate."
  },
  {
    "question": "Under what conditions can a user build VASP themselves?",
    "answer": "Users can build VASP themselves if they are licensed, have access to the VASP source code, and wish to install it in their `/home` directory on all clusters except Niagara."
  },
  {
    "question": "Which VASP versions can be built using EasyBuild in the `/home` directory for the 2020 environment?",
    "answer": "For the 2020 environment (`StdEnv/2020`), VASP-5.4.4, 6.1.2, 6.2.1, and 6.3.0 can be built using EasyBuild."
  },
  {
    "question": "What are the EasyBuild commands for building VASP-5.4.4 and VASP-6.4.2 in the 2023 environment?",
    "answer": "For the 2023 environment (`StdEnv/2023`), the commands are `eb -f VASP-5.4.4-iofb-2023a.eb --sourcepath=SOURCEPATH` and `eb -f VASP-6.4.2-iofb-2023a.eb --sourcepath=SOURCEPATH`."
  },
  {
    "question": "What are the specific source file names for VASP versions 5.4.4, 6.1.2, 6.2.1, and 6.3.0 when building with EasyBuild?",
    "answer": "The source files are `vasp.5.4.4.pl2.tgz`, `vasp.6.1.2_patched.tgz`, `vasp.6.2.1.tgz`, and `vasp.6.3.0.tgz` respectively."
  },
  {
    "question": "Where can users download the VASP source code?",
    "answer": "Users can download the VASP source code from the official VASP website ([https://www.vasp.at/ VASP website])."
  },
  {
    "question": "How long does it typically take to run the EasyBuild command for VASP?",
    "answer": "Running the EasyBuild command for VASP can take some time, potentially more than an hour."
  },
  {
    "question": "After building VASP in your home directory, how do you load and run it?",
    "answer": "Once built, you can load and run VASP using `module` commands, similar to how prebuilt versions are used."
  }
]