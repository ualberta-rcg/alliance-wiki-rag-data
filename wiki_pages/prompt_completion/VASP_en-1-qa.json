[
  {
    "question": "What is VASP?",
    "answer": "VASP, or The Vienna ab initio Simulation Package, is a computer program designed for atomic scale materials modelling."
  },
  {
    "question": "What are some applications of VASP?",
    "answer": "VASP can be used for electronic structure calculations and quantum mechanical molecular dynamics, based on first principles."
  },
  {
    "question": "Is VASP commercial software?",
    "answer": "Yes, VASP is commercial software."
  },
  {
    "question": "Why can't VASP be installed centrally on all infrastructure?",
    "answer": "VASP's commercial license can only be granted to groups hired by a single legal entity, which is incompatible with the operating model of the infrastructure provider. Negotiations to install it everywhere were unsuccessful."
  },
  {
    "question": "What is the consequence of the licensing restrictions for VASP users?",
    "answer": "Users may have to install VASP themselves, and support for installation is limited due to license terms."
  },
  {
    "question": "Which universities have a VASP license for specific clusters?",
    "answer": "Simon Fraser University, the University of Waterloo, and the University of Toronto own licenses for VASP on Fir, Nibi, and Trillium, respectively."
  },
  {
    "question": "On which clusters are VASP site exceptions applicable?",
    "answer": "Site exceptions for VASP access and installation apply to Fir, Nibi, and Trillium clusters."
  },
  {
    "question": "What information is needed to request access to prebuilt VASP binaries on Fir, Nibi, or Trillium?",
    "answer": "You must contact Technical Support and include your PI's name, email, department, institution, your VASP license version (4, 5, or 6), license number, and an updated list of licensed users."
  },
  {
    "question": "If I have a VASP version 5 license, can I use version 4?",
    "answer": "Yes, if you are licensed for version 5, you may also use version 4."
  },
  {
    "question": "Can a VASP version 4 license be used for version 5?",
    "answer": "No, a version 4 license does not permit you to use version 5."
  },
  {
    "question": "If I have a VASP version 6 license, what other versions can I use?",
    "answer": "If you are licensed for version 6, you may also use versions 5 and 4."
  },
  {
    "question": "On which clusters are prebuilt VASP binary files installed?",
    "answer": "Prebuilt VASP binary files are installed only on Fir, Nibi, and Trillium."
  },
  {
    "question": "How can users load VASP version 5.4.4 on Fir and Nibi?",
    "answer": "Users should load the following modules: `module load StdEnv/2023 intel/2023.2.1 openmpi/4.1.5` followed by `module load vasp/5.4.4`."
  },
  {
    "question": "How can users load VASP version 6.4.2 on Fir and Nibi?",
    "answer": "Users should load the following modules: `module load StdEnv/2023 intel/2023.2.1 intelmpi/2021.9.0` followed by `module load vasp/6.4.2`."
  },
  {
    "question": "How can you check which VASP versions are available?",
    "answer": "You can run the command `module spider vasp` to see available versions."
  },
  {
    "question": "How do you find the dependencies required for a specific VASP version?",
    "answer": "After choosing a version, run `module spider vasp/<version>` to see its dependencies."
  },
  {
    "question": "How is VASP version 6.4.2 loaded on Trillium?",
    "answer": "On Trillium, load `StdEnv/2023 intel/2023.2.1 intelmpi/2021.9.0 hdf5/1.14.2`, then `module use /opt/software/commercial/modules`, and finally `module load vasp/6.4.2`."
  },
  {
    "question": "Where are VASP pseudopotential files located?",
    "answer": "All pseudopotential files are located in `$EBROOTVASP/pseudopotentials/` on Cedar and Graham."
  },
  {
    "question": "How can pseudopotential files be accessed?",
    "answer": "Pseudopotential files can be accessed once the VASP module is loaded."
  },
  {
    "question": "What are the executable files for VASP-4.6 and their uses?",
    "answer": "For VASP-4.6, `vasp` is for standard NVT calculations with non-gamma k points, `vasp-gamma` is for standard NVT calculations with only gamma points, and `makeparam` estimates memory requirements."
  },
  {
    "question": "What are the executable files for VASP-5.4.1, 5.4.4, and 6.1.0 without CUDA support?",
    "answer": "For VASP-5.4.1, 5.4.4, and 6.1.0 (without CUDA support), `vasp_std` is for standard NVT calculations with non-gamma k points, `vasp_gam` is for standard NVT calculations with only gamma points, and `vasp_ncl` is for NPT calculations with non-gamma k points."
  },
  {
    "question": "What are the executable files for VASP-5.4.4 and 6.1.0 with CUDA support?",
    "answer": "For VASP-5.4.4 and 6.1.0 (with CUDA support), `vasp_gpu` is for standard NVT calculations with gamma and non-gamma k points, and `vasp_gpu_ncl` is for NPT calculations with gamma and non-gamma k points."
  },
  {
    "question": "What two extensions have been incorporated into VASP?",
    "answer": "The two incorporated extensions are Transition State Tools (VTSTtools) and VASPsol."
  },
  {
    "question": "What should a user do if a specific VASP version they need is not listed?",
    "answer": "Users can either build the version themselves or contact Technical support to request that it be built and installed."
  },
  {
    "question": "Do Vasp-GPU executable files utilize CPUs, GPUs, or both?",
    "answer": "Vasp-GPU executable files run on both GPUs and CPUs of a node."
  },
  {
    "question": "Why is it recommended to perform a benchmark with Vasp-GPU executables?",
    "answer": "It is highly recommended to perform a benchmark using one or two GPUs to ensure maximum performance and avoid wasting computer resources, as GPU calculations are more expensive."
  },
  {
    "question": "What did the VASP-GPU benchmark of a 256 Si-atom crystal reveal about performance?",
    "answer": "The benchmark showed that performance for GPU=1,2 and CPU=1 is over 5 times better than GPU=0 and CPU=1, but there was not much performance gain from GPU=1 to GPU=2."
  },
  {
    "question": "What is the purpose of the provided `vasp_job.sh` example script?",
    "answer": "The `vasp_job.sh` example script is a Slurm job script used to run VASP in parallel."
  },
  {
    "question": "How many CPU cores and memory does the `vasp_job.sh` example script request?",
    "answer": "The `vasp_job.sh` script requests four CPU cores and 4096MB memory (4x1024MB)."
  },
  {
    "question": "What should be used for `<ACCOUNT>` in the VASP job script?",
    "answer": "`<ACCOUNT>` should be replaced with a Slurm account name."
  },
  {
    "question": "What values can be used for `<VERSION>` in the VASP job script?",
    "answer": "`<VERSION>` can be 4.6, 5.4.1, 5.4.4, or 6.1.0."
  },
  {
    "question": "What should be used for `<VASP>` in the VASP job script?",
    "answer": "`<VASP>` should be replaced with the name of the executable, which can be found in the \"Executable programs\" section."
  },
  {
    "question": "What is the purpose of the `vasp_gpu_job.sh` example script?",
    "answer": "The `vasp_gpu_job.sh` example script is a Slurm job script to run VASP using GPUs."
  },
  {
    "question": "How many CPU cores, GPUs, and memory does the `vasp_gpu_job.sh` example script request?",
    "answer": "The `vasp_gpu_job.sh` script requests one CPU core, one GPU of type p100, and 3GB of memory."
  },
  {
    "question": "Which GPU type is specified in the `vasp_gpu_job.sh` example, and on which cluster is it valid?",
    "answer": "The example specifies a GPU type p100, which is only valid for Cedar."
  },
  {
    "question": "What are the four input files VASP uses?",
    "answer": "VASP uses four input files named INCAR, KPOINTS, POSCAR, and POTCAR."
  },
  {
    "question": "How should VASP input files be organized for each job?",
    "answer": "It is best to prepare VASP input files in a separate directory for each job."
  },
  {
    "question": "How do you submit a VASP job from the directory containing input files?",
    "answer": "To submit the job, use the command `sbatch vasp_job.sh`."
  },
  {
    "question": "How can memory requirements for a VASP job be estimated if unknown?",
    "answer": "You can prepare input files, run `makeparam` in an interactive job, and use the result as the required memory. For more accuracy, check the maximum stack size of completed jobs."
  },
  {
    "question": "When can users build VASP themselves?",
    "answer": "Users can build VASP themselves if they are licensed to use VASP and have access to the VASP source code."
  },
  {
    "question": "How can users install VASP in their home directory using EasyBuild?",
    "answer": "Users can install VASP using the command `eb -f [RECIPE NAME] --sourcepath=[SOURCEPATH]`."
  },
  {
    "question": "What do `[RECIPE NAME]` and `[SOURCEPATH]` refer to in the EasyBuild command?",
    "answer": "`[RECIPE NAME]` is the name of the EasyBuild recipe, and `[SOURCEPATH]` is the directory containing the VASP source code."
  },
  {
    "question": "Where can the VASP source code be downloaded?",
    "answer": "The VASP source code can be downloaded from the official VASP website: https://www.vasp.at/."
  }
]