[
  {
    "question": "What is parasail?",
    "answer": "parasail is a SIMD C (C99) library that contains implementations of the Smith-Waterman (local), Needleman-Wunsch (global), and various semi-global pairwise sequence alignment algorithms."
  },
  {
    "question": "How is the parasail-python extension handled with StdEnv/2023?",
    "answer": "From StdEnv/2023 onwards, the parasail-python extension is bundled directly within the parasail module."
  },
  {
    "question": "What is required to use the parasail Python extension with StdEnv/2020?",
    "answer": "With StdEnv/2020, the parasail module needs to be loaded for the Python extension to be installed in a virtual environment."
  },
  {
    "question": "How can I find available versions of the parasail library?",
    "answer": "You can find the required versions by running the command `module spider parasail`."
  },
  {
    "question": "How do I load a specific version of the parasail library, for example, 2.6.2?",
    "answer": "Load the library using the command `module load parasail/2.6.2`."
  },
  {
    "question": "How do you set the number of threads for the `parasail_aligner` binary?",
    "answer": "You can set the number of threads using `parasail_aligner -t ${SLURM_CPUS_PER_TASK:-1}`."
  },
  {
    "question": "Why is it important to set the number of threads for `parasail_aligner`?",
    "answer": "It is important to set the number of threads according to the number of cores allocated in your job."
  },
  {
    "question": "How can I discover compatible Python versions for the parasail module's bindings?",
    "answer": "To discover compatible Python versions, run the command `module spider parasail/1.3.4`."
  },
  {
    "question": "Which modules need to be loaded to use the parasail Python extension according to the example?",
    "answer": "You need to load `parasail/2.6.2`, `python/3.11`, and `scipy-stack/2023b`."
  },
  {
    "question": "How do you import the parasail Python module and verify its success?",
    "answer": "Import it using `python -c \"import parasail\"`. If the command displays nothing, the import was successful."
  },
  {
    "question": "What is the purpose of the `parasail-sw.py` example script?",
    "answer": "The `parasail-sw.py` script runs a quick local alignment score comparison between BioPython and parasail."
  },
  {
    "question": "How does the `parasail-sw.py` script calculate the parasail score?",
    "answer": "It creates a scoring matrix with `parasail.matrix_create(\"ACGT\", 1, 0)` and then calls `parasail.sw(A, A, 1, 1, matrix).score`."
  },
  {
    "question": "How are additional Python requirements, like Biopython, installed in the Default StdEnv job submission script?",
    "answer": "A virtual environment is created using `virtualenv --no-download $SLURM_TMPDIR/env`, activated, and then `pip install --no-index biopython==1.83` is used."
  },
  {
    "question": "How do you identify available parasail wheels for StdEnv/2020?",
    "answer": "Run the command `avail_wheel parasail`."
  },
  {
    "question": "What version of parasail is shown as available for Python 2 and 3 in the `avail_wheel` example?",
    "answer": "parasail version 1.2.4 is available for py2 and py3."
  },
  {
    "question": "What modules are loaded in the `submit-parasail.sh` script for StdEnv/2020?",
    "answer": "For StdEnv/2020, `StdEnv/2020`, `gcc`, `parasail/2.5`, and `python/3.10` are loaded."
  },
  {
    "question": "How is parasail version 1.2.4 installed in a virtual environment for StdEnv/2020?",
    "answer": "After creating and activating a virtual environment, `pip install --no-index parasail==1.2.4 biopython==1.83` is used."
  },
  {
    "question": "How do you submit the parasail job script?",
    "answer": "Submit the job using `sbatch submit-parasail.sh`."
  },
  {
    "question": "Where can you find the output of the parasail job after it runs?",
    "answer": "The output will be in the Slurm output file, which can be viewed with `less slurm-*.out`."
  },
  {
    "question": "What are the expected scores for parasail and biopython in the example job output?",
    "answer": "The expected score for parasail is 4000, and for biopython, it is 4000.0."
  },
  {
    "question": "How can one check which parasail Python package version is available after loading the module?",
    "answer": "You can check by running `pip list | grep parasail`."
  },
  {
    "question": "What version of the parasail Python package is shown as available in the `pip list` example?",
    "answer": "The example shows `parasail 1.3.4` as available."
  }
]