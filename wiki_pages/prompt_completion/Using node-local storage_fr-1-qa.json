[
  {
    "question": "Que se passe-t-il quand l'ordonnanceur Slurm d\u00e9marre une t\u00e2che concernant les r\u00e9pertoires temporaires ?",
    "answer": "Un r\u00e9pertoire temporaire est cr\u00e9\u00e9 sur chacun des n\u0153uds assign\u00e9s \u00e0 la t\u00e2che, et Slurm configure son chemin complet via la variable d'environnement `SLURM_TMPDIR`."
  },
  {
    "question": "Pourquoi le r\u00e9pertoire `$SLURM_TMPDIR` est-il plus rapide pour les op\u00e9rations d'entr\u00e9e et de sortie que le stockage sur le r\u00e9seau ?",
    "answer": "Le r\u00e9pertoire `$SLURM_TMPDIR` se trouve sur un disque local, ce qui rend les op\u00e9rations I/O presque toujours plus rapides qu'avec le stockage sur le r\u00e9seau (/project, /scratch et /home)."
  },
  {
    "question": "Pour quels types de transactions et t\u00e2ches le stockage sur disque local (`$SLURM_TMPDIR`) est-il particuli\u00e8rement recommand\u00e9 ?",
    "answer": "Le stockage sur disque local est \u00e0 privil\u00e9gier pour les transactions fr\u00e9quentes de petites quantit\u00e9s de donn\u00e9es, et les t\u00e2ches qui font beaucoup de lecture et d'\u00e9criture seront probablement ex\u00e9cut\u00e9es plus rapidement en l'utilisant."
  },
  {
    "question": "Quelles sont les implications de la nature temporaire de `$SLURM_TMPDIR` pour la gestion des donn\u00e9es ?",
    "answer": "Les donn\u00e9es en entr\u00e9e doivent \u00eatre copi\u00e9es du r\u00e9seau vers `$SLURM_TMPDIR` avant d'\u00eatre lues, et les donn\u00e9es en sortie doivent \u00eatre copi\u00e9es de `$SLURM_TMPDIR` vers le r\u00e9seau avant la fin de la t\u00e2che pour \u00eatre conserv\u00e9es."
  },
  {
    "question": "Comment peut-on copier des donn\u00e9es en entr\u00e9e vers `$SLURM_TMPDIR` dans les cas les plus simples ?",
    "answer": "Dans les cas les plus simples, on peut utiliser les commandes `cp` ou `rsync`, par exemple `cp /project/def-someone/you/input.files.* $SLURM_TMPDIR/`."
  },
  {
    "question": "Pourquoi est-il recommand\u00e9 de cr\u00e9er un environnement virtuel Python dans vos t\u00e2ches avec `$SLURM_TMPDIR` ?",
    "answer": "Les applications ex\u00e9cut\u00e9es dans un environnement virtuel Python g\u00e9n\u00e8rent un tr\u00e8s grand nombre de transactions I/O, c'est pourquoi il est recommand\u00e9 de le cr\u00e9er dans `$SLURM_TMPDIR`."
  },
  {
    "question": "Que faut-il faire avec les donn\u00e9es en sortie de `$SLURM_TMPDIR` avant la fin d'une t\u00e2che ?",
    "answer": "Les donn\u00e9es en sortie doivent \u00eatre copi\u00e9es de `$SLURM_TMPDIR` vers un espace de stockage permanent sur le r\u00e9seau avant que la t\u00e2che ne se termine, afin d'\u00e9viter leur perte si la t\u00e2che s'arr\u00eate pr\u00e9matur\u00e9ment."
  },
  {
    "question": "Quelles solutions existent pour assurer la conservation des donn\u00e9es en sortie de `$SLURM_TMPDIR` si une t\u00e2che s'arr\u00eate par manque de temps ?",
    "answer": "Les solutions possibles incluent demander plus de temps pour l'application, placer des points de contr\u00f4le dans l'espace de stockage sur le r\u00e9seau, ou \u00e9crire une fonction pour intercepter un signal."
  },
  {
    "question": "Comment utiliser un signal Slurm pour copier des donn\u00e9es de `$SLURM_TMPDIR` vers le r\u00e9seau ?",
    "answer": "Vous pouvez demander \u00e0 Slurm d'envoyer un signal \u00e0 la t\u00e2che peu avant sa limite de temps, puis utiliser une fonction shell et la commande `trap` pour associer cette fonction \u00e0 la copie des r\u00e9sultats de `$SLURM_TMPDIR` vers le r\u00e9seau."
  },
  {
    "question": "Quels sont les risques li\u00e9s \u00e0 l'utilisation de la m\u00e9thode d'interception de signal pour la conservation des donn\u00e9es de `$SLURM_TMPDIR` ?",
    "answer": "Avec cette m\u00e9thode, le contenu de `$SLURM_TMPDIR` ne sera pas conserv\u00e9 si un n\u0153ud tombe en panne ou si le syst\u00e8me de fichiers r\u00e9seau conna\u00eet un probl\u00e8me."
  }
]