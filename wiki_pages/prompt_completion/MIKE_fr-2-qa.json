[
  {
    "question": "What adjustments are needed for installing minor MIKE versions released in the same year?",
    "answer": "For minor versions released in the same year, the filenames for archives (e.g., in `tar -xzf MIKE_Zero_2023_rhel7_22.11.05.tgz`) and directory names (e.g., in `cd $MIKE_TGZ/MIKE_Zero_2023_rhel7_22.11.05`) need to be adjusted accordingly."
  },
  {
    "question": "What should be done if future major versions of MIKE use different MPI versions?",
    "answer": "If future major versions of MIKE use different MPI versions, the installation directives should be modified, and users should try to use an Intel MPI library module with a corresponding major version (year)."
  },
  {
    "question": "How do the provided installation directives for MIKE differ from the official procedure?",
    "answer": "The provided directives omit the installation of `MIKE_Zero_*_Prerequisites.tgz` (Intel MPI library), instead loading a corresponding module. Additionally, the `setrpaths.sh` script is used to make binaries compatible with the software stack."
  },
  {
    "question": "Where can users seek help if they encounter difficulties adapting the MIKE installation guide for newer versions?",
    "answer": "Users can write to technical support if they have difficulties adapting the installation recipe for newer versions of MIKE."
  },
  {
    "question": "What is the purpose of creating an environment module for MIKE?",
    "answer": "The purpose is to create an environment module for MIKE, which helps manage software dependencies and paths, making it easier to load and use the installed MIKE version."
  },
  {
    "question": "What information needs to be modified when creating a MIKE environment module?",
    "answer": "The MIKE version (e.g., 2025) must be modified to match the installed version, and the versions of the `intelmpi` and `intel` modules must correspond to what was loaded during installation."
  },
  {
    "question": "How can a user make a newly created MIKE environment module visible after executing the commands?",
    "answer": "To make the new environment module visible, the user can log in again or execute the command `module use $HOME/modulefiles`."
  },
  {
    "question": "What is the command to create the directory for MIKE module files?",
    "answer": "The command to create the directory for MIKE module files is `mkdir -p $HOME/modulefiles/mike`."
  },
  {
    "question": "What are the module dependencies specified in the MIKE 2025/2024 module file?",
    "answer": "For MIKE 2025/2024, the module dependencies are `StdEnv/2023`, `intel/2023.2.1`, and `intelmpi/2021.9.0`."
  },
  {
    "question": "What environment variables are set in the MIKE module file for MIKE 2025?",
    "answer": "For MIKE 2025, the module file sets `I_MPI_PMI_LIBRARY` to `/opt/software/slurm/lib/libpmi2.so`, `SLURM_MPI_TYPE` to `pmi2`, `MIKE_HOME` to the installation root, and `MIKE_PROGRESS` to `STDOUT`."
  },
  {
    "question": "What description is provided for the MIKE software in its module file?",
    "answer": "The description provided in the MIKE module file is: \"MIKE is a hydraulic and hydrological modeling software package.\""
  },
  {
    "question": "What keywords are associated with the MIKE environment module?",
    "answer": "The keywords associated with the MIKE environment module are \"FEM, Finite Elements, Simulation\"."
  }
]