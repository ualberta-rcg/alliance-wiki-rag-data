[
  {
    "question": "What is new in META-Farm version 1.0.3?",
    "answer": "Version 1.0.3, published in March 2025, functions on the Trillium cluster and introduces the new WHOLE_NODE mode."
  },
  {
    "question": "When was META-Farm version 1.0.3 released?",
    "answer": "Version 1.0.3 was published in March 2025."
  },
  {
    "question": "On which cluster does META-Farm version 1.0.3 operate?",
    "answer": "Version 1.0.3 operates on the Trillium cluster."
  },
  {
    "question": "What is the function of the WHOLE_NODE mode in META-Farm?",
    "answer": "The WHOLE_NODE mode gathers sequential computation cases into tasks that demand full nodes."
  },
  {
    "question": "Is the WHOLE_NODE mode active by default?",
    "answer": "The WHOLE_NODE mode is inactive by default but configurable in config.h."
  },
  {
    "question": "What is META (META-Farm)?",
    "answer": "META (for META-Farm) is a suite of scripts designed by the SHARCNET team to automate the execution of a large number of related computations."
  },
  {
    "question": "What are some English terms for the practice of 'farming' or 'serial farming'?",
    "answer": "This practice is sometimes named 'farming', 'serial farming' or 'task farming'."
  },
  {
    "question": "On which systems can META-Farm be used?",
    "answer": "META functions on all national systems of the Alliance and can also be used on other clusters that possess the same configuration and use the Slurm scheduler."
  },
  {
    "question": "What does the term 'cas' (case) refer to in META-Farm?",
    "answer": "The term 'cas' (case) designates a distinct computation; it can be the execution of a serial program, a parallel program, or a program using a GPU."
  },
  {
    "question": "What is a 't\u00e2che' (job) in META-Farm?",
    "answer": "The term 't\u00e2che' (job) is employed to designate an invocation to the task scheduler; a task can group several cases."
  },
  {
    "question": "What are the two operating modes of META-Farm?",
    "answer": "META-Farm has two operating modes: SIMPLE mode with one case per task, and META mode with several cases per task."
  },
  {
    "question": "List some functionalities of META-Farm.",
    "answer": "META-Farm possesses dynamic workload balancing in META mode, capture of exit status for all individual cases, automatic resubmission of failed or unexecuted cases, and automatic execution of a post-processing task."
  },
  {
    "question": "What are the technical requirements for defining cases in META-Farm?",
    "answer": "For each group of cases, each case to be processed must be described on a separate line in a `table.dat` file."
  },
  {
    "question": "Can multiple groups of cases be executed independently with META-Farm?",
    "answer": "Yes, you can execute several groups of cases independently, but each must have its own directory."
  },
  {
    "question": "How does META mode manage tasks compared to the number of cases?",
    "answer": "In META mode, the number of tasks (or metatasks) effectively submitted is generally well below the number of cases to be processed."
  },
  {
    "question": "What mechanism does META mode use to prevent race conditions when processing `table.dat`?",
    "answer": "META mode uses the `lockfile` mechanism to avoid a race condition when a collection of metatasks reads lines from `table.dat` sequentially."
  },
  {
    "question": "What is an advantage of META-Farm over GLOST regarding queue time?",
    "answer": "With META-Farm, the queue time can be much shorter than with GLOST, as the scheduler has full flexibility to start individual metatasks when it wishes."
  },
  {
    "question": "How does META-Farm compare to GLOST in terms of resource utilization at the end of processing?",
    "answer": "With META-Farm, there is no loss at the end of processing as individual metatasks exit earlier if they have no more workload to process, unlike GLOST where MPI ranks might remain idle."
  },
  {
    "question": "Does GLOST offer automated resubmission of failed or unexecuted cases?",
    "answer": "No, GLOST and other similar tools do not support automated resubmission of failed or unexecuted cases, a functionality that META possesses."
  }
]