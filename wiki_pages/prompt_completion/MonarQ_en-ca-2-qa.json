[
  {
    "question": "What are the prerequisites for getting started with MonarQ?",
    "answer": "You must have access to MonarQ, along with your connection credentials (username, API token)."
  },
  {
    "question": "Who should I contact if I have questions about accessing MonarQ?",
    "answer": "For any questions, write to quantique@calculquebec.ca."
  },
  {
    "question": "How can I access MonarQ?",
    "answer": "MonarQ is only accessible from Narval, a Calcul Qu\u00e9bec cluster."
  },
  {
    "question": "What is the connection node for Narval?",
    "answer": "The connection node for Narval is narval.alliancecan.ca."
  },
  {
    "question": "Where can I find help regarding connecting to Narval?",
    "answer": "For help concerning the connection to Narval, consult the SSH/fr page."
  },
  {
    "question": "What version of Python is required to create the virtual environment for MonarQ?",
    "answer": "You need a Python virtual environment (3.11 or later)."
  },
  {
    "question": "Which software libraries are recommended for quantum computing with MonarQ?",
    "answer": "PennyLane and the PennyLane-CalculQu\u00e9bec plugin are recommended. They are already installed on Narval."
  },
  {
    "question": "What commands are used to set up the Python environment on Narval?",
    "answer": "The commands are: `module load python/3.11`, `virtualenv --no-download --clear ~/ENV && source ~/ENV/bin/activate`, `pip install --no-index --upgrade pip`, `pip install --no-index --upgrade pennylane-calculquebec`, and `python -c \"import pennylane; import pennylane_calculquebec\"`."
  },
  {
    "question": "How do you configure MonarQ credentials in a Python script?",
    "answer": "You open a Python file, import PennyLane and MonarqClient, then create a client with your host, username, access token, and project, e.g., `my_client = MonarqClient(\"monarq.calculquebec.ca\", \"your username\", \"your access token\", \"your project\")`."
  },
  {
    "question": "What is the host address for MonarQ when configuring the client?",
    "answer": "The host is monarq.calculquebec.ca."
  },
  {
    "question": "Where can I obtain my access token for MonarQ?",
    "answer": "Your access token is available from the Thunderhead portal."
  },
  {
    "question": "How do you define MonarQ as a PennyLane device?",
    "answer": "You create a PennyLane device using your client, specifying the number of qubits (wires) and shots, for example: `dev = qml.device(\"monarq.default\", client = my_client, wires = 3, shots = 1000)`."
  },
  {
    "question": "Where can I find more help on configuring MonarQ with PennyLane-CalculQu\u00e9bec?",
    "answer": "For more help, consult the pennylane_calculquebec documentation on GitHub."
  },
  {
    "question": "How do you execute a quantum circuit on MonarQ using the scheduler?",
    "answer": "You use the `sbatch` command to submit a task, for example, `sbatch simple_job.sh`."
  },
  {
    "question": "What would a basic Slurm script to run a Python circuit on MonarQ look like?",
    "answer": "A basic Slurm script would include directives like `#SBATCH --time=00:15:00`, `#SBATCH --account=def-someuser`, `#SBATCH --cpus-per-task=1`, `#SBATCH --mem-per-cpu=1G`, and then execute the Python script: `python my_circuit.py`."
  },
  {
    "question": "Where are the results of a MonarQ circuit execution stored?",
    "answer": "The result is written into a file whose name starts with slurm-, followed by the task ID and the suffix .out, for example, slurm-123456.out."
  },
  {
    "question": "How is the output of a quantum circuit formatted in the result file?",
    "answer": "The output in the result file is a dictionary, such as `{'000': 496, '001': 0, '010': 0, '011': 0, '100': 0, '101': 0, '110': 0, '111': 504}`."
  },
  {
    "question": "Where can I find more information on submitting tasks on Narval?",
    "answer": "For more information on how to submit tasks on Narval, see the [[Running_jobs/fr|Ex\u00e9cuter des t\u00e2ches]] page."
  },
  {
    "question": "Is there a FAQ available for MonarQ?",
    "answer": "Yes, there is a Frequently Asked Questions (FAQ) document available."
  },
  {
    "question": "What other tools are mentioned in relation to MonarQ?",
    "answer": "The document mentions a [[Transpileur quantique]] (Quantum Transpiler)."
  },
  {
    "question": "What kind of calculations is MonarQ well-suited for?",
    "answer": "MonarQ is adapted for calculations requiring small quantities of high-fidelity qubits."
  },
  {
    "question": "What are the ideal applications for MonarQ?",
    "answer": "It is an ideal tool for the development and testing of quantum algorithms."
  },
  {
    "question": "What other applications can MonarQ be used for?",
    "answer": "Other possible applications include modeling small quantum systems, testing new methods and techniques of quantum programming and error correction, and more generally, fundamental research in quantum computing."
  },
  {
    "question": "How can I get technical support for quantum services?",
    "answer": "If you have questions about our quantum services, write to quantique@calculquebec.ca."
  },
  {
    "question": "Where are sessions on quantum computing and MonarQ programming listed?",
    "answer": "The sessions on quantum computing and programming with MonarQ are listed on Eventbrite."
  }
]