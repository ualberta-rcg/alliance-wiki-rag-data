[
  {
    "question": "How do you extract a single file or multiple specific files from a `.tar` archive to a specified destination directory?",
    "answer": "To extract a single file, such as `results/Res-01/log.15Feb16.4`, from an archive (`results.tar`) into a destination directory (`new_results/`), use the command `tar -C ./new_results/ --extract --file=results.tar results/Res-01/log.15Feb16.4`. For multiple files, list their full paths, for example: `tar -C ./new_results/ --extract --file=results.tar \"file1\" \"file2\" \"file3\"`. The `-C {destination directory}` option is mandatory."
  },
  {
    "question": "What happens if the `-C {destination directory}` option is not used when extracting a single file from a tar archive?",
    "answer": "If the `-C` option is not invoked, the command will extract the file to the same directory as the archive if a directory with the original name exists, or create the same directory if it does not exist."
  },
  {
    "question": "How do you extract a specific file from a `.gz` compressed tar archive to a destination directory?",
    "answer": "Use the command `tar -C ./destination_dir/ --extract -z --file=your_archive.tar.gz path-to-your-file`."
  },
  {
    "question": "How do you extract a specific file from a `.bz2` compressed tar archive to a destination directory?",
    "answer": "Use the command `tar -C ./destination_dir/ --extract -j --file=your_archive.tar.bz2 path-to-your-file`."
  },
  {
    "question": "How can you extract multiple files that match a wildcard pattern from a `.tar` archive to a specified destination directory?",
    "answer": "Use `tar -C ./new_results/ -xvf results.tar --wildcards \"results/*.dat\"` to extract files with the `.dat` extension. Similarly, `tar -C ./new_results/ -xvf results.tar --wildcards \"results/log*\"` extracts files starting with `log`."
  },
  {
    "question": "Can the wildcard extraction command be used with compressed archives (e.g., `.gz` or `.bz2`)?",
    "answer": "Yes, the command for extracting multiple files using wildcards is also valid when invoking the `j` or `z` options for compressed archives."
  },
  {
    "question": "How do you list the contents of a `.tar` archive without unpacking it?",
    "answer": "This can be achieved using `tar -t` or `tar -tf results.tar`."
  },
  {
    "question": "How can you list the contents of a `.tar` archive, including metadata like permissions, date, and owner?",
    "answer": "Use the command `tar -tvf results.tar` to see metadata such as permissions, date of last change, and owner."
  },
  {
    "question": "How do you count the number of files and sub-directories within a `.tar` archive?",
    "answer": "You can combine `tar -tvf results.tar` or `tar -tf results.tar` with a pipe (`|`) and `wc -l` (word count with `-l` option to count only the number of lines), for example: `tar -tvf results.tar | wc -l`."
  },
  {
    "question": "Does the `-v` option still display file details when `tar -tvf` output is piped to `wc -l`?",
    "answer": "No, the details of the files are not shown even if the `-v` option was used, because `wc -l` filters the output to display only the number of lines."
  },
  {
    "question": "What are the equivalent long-form options for `tar -v` and `tar -t`?",
    "answer": "The option `-v` is equivalent to `--verbose`, and `-t` is equivalent to `--list`."
  },
  {
    "question": "What is the equivalent long-form option for `tar -f results.tar`?",
    "answer": "The option `--file=results.tar` is equivalent to `-f results.tar`."
  },
  {
    "question": "What is the correct placement for the `-f` or `--file=` option in a `tar` command?",
    "answer": "The option `-f` or `--file=` always comes before the name of the tar file."
  },
  {
    "question": "How do you search for a specific file within a `.tar` archive without unpacking it, and show its path?",
    "answer": "Use `tar -tf results.tar | grep -a file_name_you_search`. For example, to find `log.15Feb16.4`, you would use `tar -tf results.tar | grep -a log.15Feb16.4`."
  },
  {
    "question": "How do you search for a specific file within a `.tar` archive and display its metadata (permissions, date, owner) without unpacking it?",
    "answer": "Use `tar -tvf results.tar | grep -a file_name_you_search`. For example, to find `log.15Feb16.4` with details, you would use `tar -tvf results.tar | grep -a log.15Feb16.4`."
  },
  {
    "question": "How can you list all files that match a pattern, like those starting with \"log\", within a `.tar` archive without unpacking it?",
    "answer": "Use `tar -tf results.tar | grep -a log*`. To include more details, use `tar -tvf results.tar | grep -a log*`."
  },
  {
    "question": "What does an empty output indicate when searching for a file in a tar archive using `grep`?",
    "answer": "An empty output indicates that the file does not exist in the archive."
  }
]