[
  {
    "question": "What is STAR-CCM+?",
    "answer": "STAR-CCM+ is a multidisciplinary engineering simulation suite used to model acoustics, fluid dynamics, heat transfer, rheology, multiphase flows, particle flows, solid mechanics, reacting flows, electrochemistry, and electromagnetics."
  },
  {
    "question": "Who develops STAR-CCM+?",
    "answer": "STAR-CCM+ is developed by Siemens."
  },
  {
    "question": "Are STAR-CCM+ licenses provided on the hosting servers?",
    "answer": "No, users need to have their own license to use STAR-CCM+; licenses are not provided on the hosting servers."
  },
  {
    "question": "What types of licenses are available for STAR-CCM+?",
    "answer": "A remote Power-on-Demand (POD) license can be purchased directly from Siemens, or a local license hosted at the user's institution can be used."
  },
  {
    "question": "What is required for a local institutional STAR-CCM+ license to work with the cluster?",
    "answer": "The local institutional license must be accessible through the firewall from the cluster where jobs are to be run."
  },
  {
    "question": "How do you configure your account to use a license server with the STAR-CCM+ module?",
    "answer": "You need to create a license file named `$HOME/.licenses/starccm.lic`."
  },
  {
    "question": "What is the required content for the `starccm.lic` file when configuring it for a general license server?",
    "answer": "The file should contain `SERVER <server> ANY <port>\nUSE_SERVER`, replacing `<server>` with the hostname or IP address and `<port>` with the static vendor port of the license server."
  },
  {
    "question": "Is it necessary to manually set the `CDLMD_LICENSE_FILE` environment variable in a Slurm script?",
    "answer": "No, it is not required; when a Star-CCM+ module is loaded, this variable is automatically set to your `$HOME/.licenses/starccm.lic` file."
  },
  {
    "question": "What steps are required for researchers using a Siemens POD license?",
    "answer": "Researchers with a POD license must manually set the `LM_PROJECT` environment variable equal to their CD-ADAPCO PROJECT ID in their Slurm script, and configure the `~/.licenses/starccm.lic` file with `SERVER flex.cd-adapco.com ANY 1999\nUSE_SERVER`."
  },
  {
    "question": "What should be done when submitting jobs on a cluster for the first time with a Siemens remote pay-on-usage license server?",
    "answer": "Create a `~/.licenses/starccm.lic` file as shown in the 'POD license file' section, and license checkouts should immediately work."
  },
  {
    "question": "What should be done when submitting jobs on a cluster for the first time with an institutional license server?",
    "answer": "After creating your `~/.licenses/starccm.lic` file, you must submit a problem ticket to technical support to coordinate necessary one-time network firewall changes."
  },
  {
    "question": "What should you do if you encounter problems getting STAR-CCM+ licensing to work?",
    "answer": "You should try removing or renaming the `~/.flexlmrc` file, as it may contain previous search paths and/or license server settings."
  },
  {
    "question": "How can temporary output files from STAR-CCM+ job runs be removed?",
    "answer": "Temporary output files accumulate in hidden directories named `~/.star-version_number` and can be removed by periodically running `rm -ri ~/.starccm*` and replying yes when prompted."
  },
  {
    "question": "What modules are typically loaded for STAR-CCM+ on Fir/Rorqual/Nibi clusters?",
    "answer": "Typically, `module load StdEnv/2023` and `module load starccm-mixed/20.04.007` are loaded."
  },
  {
    "question": "How do you specify the input simulation file in a STAR-CCM+ Slurm script?",
    "answer": "You specify the input simulation filename by setting the `SIM_FILE` variable, for example: `SIM_FILE='mysample.sim'`."
  },
  {
    "question": "How is the Siemens Power on Demand (PoD) Key specified in a Slurm script for clusters like Fir/Rorqual/Nibi or Narval?",
    "answer": "The Siemens Power on Demand (PoD) Key is specified by setting the `LM_PROJECT` environment variable, for example: `LM_PROJECT='my22digitpodkey'`."
  },
  {
    "question": "What MPI implementation and fabric are used for STAR-CCM+ jobs on Fir/Rorqual/Nibi when using a Siemens PoD license?",
    "answer": "Intel MPI with `psm2` fabric is used, specified by `-mpi intel -fabric psm2` in the `starccm+` command."
  },
  {
    "question": "What MPI implementation is used for STAR-CCM+ jobs on Narval when using a Siemens PoD license?",
    "answer": "OpenMPI is used, specified by `-mpi openmpi` in the `starccm+` command."
  },
  {
    "question": "For Trillium cluster, how are license server settings configured in the Slurm script, bypassing the `~/.licenses/starccm.lic` file?",
    "answer": "On Trillium, `FLEXPORT`, `VENDPORT`, and `LICSERVER` variables are explicitly set in the Slurm script, for example: `FLEXPORT=1999`, `VENDPORT=2099`, `LICSERVER=flex.cd-adapco.com`."
  },
  {
    "question": "How does the Trillium Slurm script handle the `CDLMD_LICENSE_FILE` and establish connection to the license server?",
    "answer": "It exports `CDLMD_LICENSE_FILE=\"$FLEXPORT@127.0.0.1\"` and uses `ssh nia-gw -L $FLEXPORT:$LICSERVER:$FLEXPORT -L $VENDPORT:$LICSERVER:$VENDPORT -N -f` to tunnel the license ports."
  },
  {
    "question": "What is the purpose of the `while` loop in the Trillium Slurm script for running STAR-CCM+?",
    "answer": "The `while` loop acts as a workaround for license failures, attempting to start STAR-CCM+ up to 5 times until it successfully exits with a status of 0."
  }
]