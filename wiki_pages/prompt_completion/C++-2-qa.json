[
  {
    "question": "What is a potential risk of using the GCC compiler's -O3 optimization option?",
    "answer": "The GCC compiler's -O3 option includes possibly unsafe optimizations for some types of code, such as those relying on aliasing."
  },
  {
    "question": "What is the recommended alternative to GCC's -O3 option if there is uncertainty about its safety?",
    "answer": "If unsure about the safety of -O3, it is recommended to compile and optimize code using the -O2 option instead."
  },
  {
    "question": "How can users identify which specific optimizations are enabled by GCC's -O3 option?",
    "answer": "Users can read the GCC man page (e.g., `man g++`) and search for \"-O3\" to see which options are turned on."
  },
  {
    "question": "What significant change occurred in GCC between versions 4.9 and 5.1?",
    "answer": "The transition from GCC version 4.9 to version 5.1 introduced a major change to its ABI (Application Binary Interface)."
  },
  {
    "question": "What can cause linking failures when using different GCC compiler versions?",
    "answer": "A major change to the ABI, such as the one between GCC 4.9 and 5.1, can cause linking to fail if different compilers are used for various parts of a project."
  },
  {
    "question": "How can the GCC Dual ABI feature help resolve linking issues with legacy libraries?",
    "answer": "GCC's Dual ABI feature can be used to instruct GCC to use the old ABI, allowing applications to link properly with legacy libraries built using an older ABI."
  },
  {
    "question": "Which specific flag should be passed to GCC v5.1 or higher to link with libraries built using an older ABI?",
    "answer": "To link with libraries built using an older ABI when using GCC v5.1 or higher, the flag `-D_GLIBCXX_USE_CXX11_ABI=0` should be passed to GCC."
  },
  {
    "question": "What is a general expectation regarding the C++ ABI with major compiler releases?",
    "answer": "It should be assumed that each major compiler release might break the C++ ABI enough that older binaries will have trouble linking C++ code."
  },
  {
    "question": "What are the typical solutions for linking problems caused by C++ ABI changes with newer compilers?",
    "answer": "The typical solutions are to either keep using the same compiler or recompile the older binaries from source with the newer compiler."
  },
  {
    "question": "What GCC option can be used to control ABI versions?",
    "answer": "The `-fabi-version` option in GCC can be used to control ABI versions."
  },
  {
    "question": "What is a potential issue with default floating-point optimizations in Intel C/C++ compilers?",
    "answer": "Intel C/C++ compilers may default to using possibly unsafe optimizations for floating-point operations."
  },
  {
    "question": "Which options are recommended for ANSI/ISO/IEEE standards-compliant floating-point support when using Intel compilers?",
    "answer": "For ANSI/ISO/IEEE standards-compliant floating-point support, users are recommended to use either `-fp-model precise` or `-fp-model source` with Intel compilers."
  },
  {
    "question": "Where can users find more details about floating-point control in Intel compilers?",
    "answer": "More details can be found by reading the Intel man pages (e.g., `man icpc`) or in the Intel slideshow titled 'Floating-point control in the Intel compiler and libraries'."
  }
]