[
  {
    "question": "Quelles sont les commandes `pdb` g\u00e9n\u00e9ralement utilis\u00e9es pour d\u00e9boguer un fichier Python ?",
    "answer": "En g\u00e9n\u00e9ral, on utilise `w`, `s`, `l`, `p`, `n` pour d\u00e9boguer un fichier."
  },
  {
    "question": "O\u00f9 puis-je trouver plus d'informations sur le d\u00e9bogueur Python (`pdb`) ?",
    "answer": "Pour plus d'information, voir la page ''The Python Debugger'' sur [https://docs.python.org/3/library/pdb.html]."
  },
  {
    "question": "Comment puis-je modifier mon script pour obtenir une trace de l'origine du probl\u00e8me si un script Python se suspend ?",
    "answer": "Avec le module `faulthandler`, vous pouvez modifier votre script pour qu'une trace de l'origine du probl\u00e8me soit fournie apr\u00e8s une certaine dur\u00e9e; voir l'information sur la commande `faulthandler.dump_traceback_later(timeout, repeat=False, file=sys.stderr, exit=False)`."
  },
  {
    "question": "Quel outil permet d'inspecter un processus Python pendant l'ex\u00e9cution d'une t\u00e2che sans modification pr\u00e9alable du script ?",
    "answer": "Vous pouvez inspecter un processus Python pendant l'ex\u00e9cution d'une t\u00e2che sans avoir \u00e0 le modifier au pr\u00e9alable avec `py-spy`."
  },
  {
    "question": "O\u00f9 faut-il installer `py-spy` pour l'utiliser ?",
    "answer": "`py-spy` doit \u00eatre install\u00e9 dans un environnement virtuel de votre r\u00e9pertoire `/home`."
  },
  {
    "question": "Quelles sont les \u00e9tapes pour inspecter un processus Python en cours d'ex\u00e9cution \u00e0 l'aide de `py-spy` ?",
    "answer": "Les \u00e9tapes sont : # Installez `py-spy` dans un environnement virtuel de votre r\u00e9pertoire `/home`. # Connectez-vous \u00e0 une t\u00e2che en cours avec `srun --pty --jobid JOBID bash`. # Trouvez l'ID du processus du script Python avec `htop -u $USER`. # Activez l'environnement virtuel o\u00f9 `py-spy` est install\u00e9. # Lancez `py-spy top --pid PID` pour visionner en direct les endroits o\u00f9 le code utilise beaucoup de temps. # Lancez `py-spy dump --pid PID` pour obtenir une trace de l'\u00e9tat de votre code."
  },
  {
    "question": "Que signifie l'erreur \"Package 'X' requires a different Python: X.Y.Z not in '>=X.Y'\" lors de l'installation d'un paquet ?",
    "answer": "Cette erreur signifie que le module Python X.Y.Z qui est charg\u00e9 n'est pas support\u00e9 par le paquet."
  },
  {
    "question": "Comment r\u00e9soudre l'erreur \"Package 'X' requires a different Python: X.Y.Z not in '>=X.Y'\" ?",
    "answer": "Pour r\u00e9soudre cette erreur, vous pouvez utiliser une version de Python plus r\u00e9cente, comme le dernier module disponible, ou installer une version moins r\u00e9cente du paquet X."
  },
  {
    "question": "Que faire en cas d'erreur \"Package has requirement X, but you'll have Y which is incompatible\" lors de l'installation d'un paquet ?",
    "answer": "Pour utiliser le nouveau r\u00e9solveur de d\u00e9pendances, installez la plus r\u00e9cente version de `pip` ou une version sup\u00e9rieure \u00e0 21.3 en ex\u00e9cutant `pip install --no-index --upgrade pip`, puis relancez la commande d'installation."
  },
  {
    "question": "Que signifie le message d'erreur \"No matching distribution found for X\" lors de l'installation d'un paquet Python ?",
    "answer": "Cela signifie que `pip` n'a trouv\u00e9 aucun paquet \u00e0 installer qui rencontre les exigences (nom, version ou tags), et il faut savoir que les wheels `manylinux_x_y` sont ignor\u00e9s."
  },
  {
    "question": "Comment v\u00e9rifier la disponibilit\u00e9 d'un paquet lorsque l'erreur \"No matching distribution found for X\" survient ?",
    "answer": "Assurez-vous que le nom et la version sont corrects. Vous pouvez aussi v\u00e9rifier si le paquet est disponible avec la commande `avail_wheels` ou en consultant la page \"Wheels disponibles\"."
  },
  {
    "question": "Est-il pr\u00e9f\u00e9rable d'installer plusieurs paquets Python individuellement ou en une seule fois ?",
    "answer": "Lorsque possible, il est pr\u00e9f\u00e9rable d'installer plusieurs paquets avec une seule commande, car `pip` peut alors r\u00e9soudre plus facilement les probl\u00e8mes de d\u00e9pendance."
  },
  {
    "question": "Pourquoi un environnement virtuel qui fonctionnait pr\u00e9c\u00e9demment pourrait-il ne plus fonctionner ?",
    "answer": "Les fr\u00e9quentes mises \u00e0 jour des paquets font en sorte qu'un environnement virtuel ne peut souvent pas \u00eatre reproduit. Il est possible aussi qu'un environnement virtuel cr\u00e9\u00e9 dans `$SCRATCH` soit partiellement d\u00e9truit lors de la purge automatique de ce syst\u00e8me de fichiers."
  },
  {
    "question": "Comment \u00e9viter qu'un environnement virtuel ne cesse de fonctionner en raison de mises \u00e0 jour ou de purges de `$SCRATCH` ?",
    "answer": "Pour contrer ceci, gelez les paquets et leurs versions avec des sp\u00e9cifications comme `package1==X.Y` et cr\u00e9ez ensuite un fichier de requis (`requirements.txt`) qui sera utilis\u00e9 pour installer ces paquets dans votre t\u00e2che."
  }
]