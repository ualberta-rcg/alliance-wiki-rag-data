[
  {
    "question": "What is the recommended approach for installing multiple Python packages?",
    "answer": "It is preferable to install multiple packages with a single `pip install` command, for example, `pip install package1 package2 package3 package4`, to help `pip` resolve dependencies more easily."
  },
  {
    "question": "Why might a virtual environment stop working between two different days?",
    "answer": "Frequent package updates can make virtual environments unreproducible. Additionally, a virtual environment created in $SCRATCH might be partially destroyed during the automatic purging of that file system."
  },
  {
    "question": "How can I make my virtual environment more stable and reproducible?",
    "answer": "To counter instability, freeze the packages and their versions during installation (e.g., `pip install --no-index 'package1==X.Y' 'package2==X.Y.Z' 'package3<X.Y' 'package4>X.Y'`) and then create a requirements file to use for your tasks."
  },
  {
    "question": "What does the error message 'ERROR: package-3.8.1-cp311-cp311-manylinux_2_28_x86_64.whl is not a supported wheel on this platform.' mean?",
    "answer": "This error means that the Python package (wheel) you are trying to install is incompatible or not supported by the platform."
  },
  {
    "question": "What are the common causes for an unsupported wheel error during package installation?",
    "answer": "Two frequent causes are installing a `manylinux` package or installing a Python package built for a different Python version than the one currently active (e.g., installing a Python 3.11 package when using Python 3.9)."
  },
  {
    "question": "How can I handle `manylinux` wheels if they are causing unsupported wheel errors?",
    "answer": "Some `manylinux` packages might be available among the pre-built Python wheels provided on the system."
  },
  {
    "question": "What can cause an `AttributeError: module \u2018numpy\u2019 has no attribute \u2018X\u2019` message?",
    "answer": "This error can occur because several attributes were declared obsolete in Numpy v1.20 and are no longer offered in v1.24. If no specific version is requested, the latest version of Numpy is installed by default, which might not include older attributes."
  },
  {
    "question": "How can I fix an `AttributeError` related to missing Numpy attributes, such as `module \u2018numpy\u2019 has no attribute \u2018bool\u2019`?",
    "answer": "This issue is resolved by installing an earlier version of Numpy, for example, using `pip install --no-index 'numpy<1.24'`."
  },
  {
    "question": "What are the primary reasons for a `ModuleNotFoundError: No module named 'X'`?",
    "answer": "The most frequent explanations are that the package is not installed or not visible to the Python interpreter, the module name does not match the actual name, or the virtual environment is defective."
  },
  {
    "question": "What should I avoid doing to prevent `ModuleNotFoundError`?",
    "answer": "To prevent this, avoid modifying the `PYTHONPATH` or `PATH` environment variables. Also, ensure you load all necessary modules before activating a virtual environment, rather than while it's active."
  },
  {
    "question": "What steps should I take if I encounter a `ModuleNotFoundError`?",
    "answer": "You should check if the package is installed with `pip list`, verify if the name you entered exactly matches the module's actual name (case, underscores, etc.), and confirm if the module is imported at the correct level from its source directory. If in doubt, recreate the environment."
  },
  {
    "question": "When does `ImportError: numpy.core.multiarray failed to import` typically occur?",
    "answer": "This message can occur when you try to import a Python module that depends on Numpy, specifically when an incompatible version of Numpy is installed or used."
  },
  {
    "question": "What specific Numpy version issue can lead to `ImportError: numpy.core.multiarray failed to import`?",
    "answer": "A typical case is Numpy version 2.0, which breaks the ABI. If a wheel built with a 1.x version of Numpy is installed with a 2.x version, this error can occur."
  },
  {
    "question": "How can I resolve `ImportError: numpy.core.multiarray failed to import`?",
    "answer": "To resolve this, you must install a compatible version of Numpy. For instance, if the issue is due to Numpy 2.0's ABI breakage, you should install an earlier version with `pip install --no-index 'numpy<2.0'`."
  }
]