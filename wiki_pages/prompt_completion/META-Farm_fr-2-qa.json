[
  {
    "question": "What is an advantage of META regarding the delivery of initial results?",
    "answer": "With META, some metajobs start and produce the first results in minutes."
  },
  {
    "question": "How does META prevent idle resources at the end of processing compared to GLOST?",
    "answer": "With META, there is no loss of resources at the end of processing, as individual metajobs exit earlier if they have no more workload. This is unlike GLOST, where MPI ranks may remain inactive until the very last, slowest rank finishes."
  },
  {
    "question": "Does META offer automated resubmission for failed or unexecuted cases?",
    "answer": "Yes, META supports automated resubmission of cases that have failed or were never executed, a feature not supported by GLOST and similar tools."
  },
  {
    "question": "Where can users find the recorded META webinar?",
    "answer": "The recorded META webinar is available at https://youtu.be/GcYbaPClwGE and was recorded on October 6, 2021."
  },
  {
    "question": "What are the initial steps for new users to start with META?",
    "answer": "New users should connect to a cluster, load the `meta-farm` module, choose a name for the case group directory, and create it using `farm_init.run Farm_name`."
  },
  {
    "question": "How do you load the `meta-farm` module?",
    "answer": "To load the `meta-farm` module, use the command `module load meta-farm`."
  },
  {
    "question": "What command is used to initialize a new case group directory?",
    "answer": "A new case group directory can be initialized using the command `farm_init.run Farm_name`, where `Farm_name` is the chosen name for the directory."
  },
  {
    "question": "What files are created when running `farm_init.run`?",
    "answer": "The `farm_init.run` command creates a case group directory along with several important files within it, some of which require personalization."
  },
  {
    "question": "What files should be placed in the case group directory?",
    "answer": "Users should copy their executable files and input files into the case group directory. This step can be skipped if full paths will be used everywhere."
  },
  {
    "question": "What is the function of the `table.dat` file in META?",
    "answer": "The `table.dat` file is a text file within the case group directory where each line describes a distinct calculation or 'case'."
  },
  {
    "question": "Where can examples for modifying `table.dat` be found?",
    "answer": "Examples for `table.dat` are available in sections such as 'single_case.sh', 'Exemple : fichiers d'entr\u00e9e num\u00e9rot\u00e9s', 'Exemple : fichier d'entr\u00e9e doit avoir le m\u00eame nom', and 'Acc\u00e9der \u00e0 chaque param\u00e8tre d'un cas'."
  },
  {
    "question": "Are modifications to `single_case.sh` always necessary?",
    "answer": "Modifications to `single_case.sh` are often not required, but users can adapt it to their needs."
  },
  {
    "question": "Which sections provide guidance on modifying `single_case.sh`?",
    "answer": "Guidance on modifying `single_case.sh` can be found in sections such as 'single_case.sh', 'STATUS et traitement des erreurs', 'Exemple : fichier d'entr\u00e9e doit avoir le m\u00eame nom', and 'Acc\u00e9der \u00e0 chaque param\u00e8tre d'un cas'."
  },
  {
    "question": "What specific modifications are required for the `job_script.sh` file?",
    "answer": "For `job_script.sh`, it is necessary to use a valid compute account name and specify an appropriate runtime duration."
  },
  {
    "question": "Where can users find more information about estimating runtime and the number of metajobs?",
    "answer": "More information on estimating runtime and the number of metajobs is available in the 'Estimation du temps d'ex\u00e9cution et du nombre de m\u00e9tat\u00e2ches' section."
  },
  {
    "question": "How do you submit a job in SIMPLE mode?",
    "answer": "To submit a job in SIMPLE mode (one case per task), execute `submit.run -1` in the case directory."
  },
  {
    "question": "How do you submit a job in META mode?",
    "answer": "To submit a job in META mode, execute `submit.run N` in the case directory, where `N` is the desired number of metajobs, which should be significantly less than the total number of cases."
  },
  {
    "question": "How can one run multiple independent case groups concurrently using META?",
    "answer": "To run multiple case groups concurrently, re-run `farm_init.run` with a different group name for each, customize `single_case.sh` and `job_script.sh` in each new directory, create separate `table.dat` files, copy necessary executables and input files, and then launch `submit.run` in each respective case directory."
  }
]