[
  {
    "question": "What is required before running the `make` command for the ABI example?",
    "answer": "Before running `make`, a module for GCC v5.1 or higher must be loaded."
  },
  {
    "question": "What is the purpose of executing the makefile example?",
    "answer": "Executing the makefile demonstrates the differences in the produced Application Binary Interface (ABI) symbols when using various GCC compiler options."
  },
  {
    "question": "How do you check the difference between the old and new C++ ABIs when compiling with `-std=c++98`?",
    "answer": "The `diff-cxx98` target in the Makefile compares `main-cxx98-oldabi.o.symbols` and `main-cxx98-newabi.o.symbols` using `diff --suppress-common-lines`."
  },
  {
    "question": "How do you check the difference between the old and new C++ ABIs when compiling with `-std=c++11`?",
    "answer": "The `diff-cxx11` target in the Makefile compares `main-cxx11-oldabi.o.symbols` and `main-cxx11-newabi.o.symbols` using `diff --suppress-common-lines`."
  },
  {
    "question": "How do you check the difference between `-std=c++98` and `-std=c++11` ABIs without explicitly setting `_GLIBCXX_USE_CXX11_ABI`?",
    "answer": "The `diff-cxx-default` target in the Makefile compares `main-cxx98.o.symbols` and `main-cxx11.o.symbols` using `diff --suppress-common-lines`."
  },
  {
    "question": "What command is used to compile `main.cxx` into `main-cxx98.o`?",
    "answer": "The command `c++ -c -o main-cxx98.o -std=c++98 main.cxx` is used to compile `main.cxx` into `main-cxx98.o`."
  },
  {
    "question": "Which compiler options are used to produce `main-cxx98-oldabi.o`?",
    "answer": "The command `c++ -c -o main-cxx98-oldabi.o -std=c++98 -D_GLIBCXX_USE_CXX11_ABI=0 main.cxx` is used to produce `main-cxx98-oldabi.o`."
  },
  {
    "question": "How are symbol names extracted from object files in the example?",
    "answer": "Symbol names are extracted using `nm [object_file] | cut -c 20- > [object_file].symbols`."
  }
]