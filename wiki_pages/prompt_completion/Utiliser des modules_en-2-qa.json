[
  {
    "question": "What is the purpose of the `module purge` command?",
    "answer": "The `module purge` sub-command allows you to remove all the modules you have loaded with a single command."
  },
  {
    "question": "Are all loaded modules removed by `module purge`?",
    "answer": "No, some modules marked as \"sticky\" (permanent) by system administrators will not be unloaded by `module purge`."
  },
  {
    "question": "Which sub-commands provide additional information about a given module?",
    "answer": "The `show`, `help`, and `whatis` sub-commands provide additional information about a given module."
  },
  {
    "question": "What information does the `module show` sub-command display?",
    "answer": "The `show` sub-command displays the entire module."
  },
  {
    "question": "What does the `module help` sub-command do?",
    "answer": "The `help` sub-command displays a help message for a module."
  },
  {
    "question": "How can you view a description of a module?",
    "answer": "The `whatis` sub-command shows a description of the module."
  },
  {
    "question": "How do you search for modules by keyword or description?",
    "answer": "The `apropos` or `keyword` sub-commands allow you to search for a keyword in all modules, useful when you don't know which module is appropriate."
  },
  {
    "question": "Is it recommended to load modules automatically in `.bashrc`?",
    "answer": "No, it is advised against loading modules automatically in your `.bashrc`."
  },
  {
    "question": "When should modules be loaded according to the recommendations?",
    "answer": "It is recommended that you load modules only when required, for example, in your job scripts."
  },
  {
    "question": "What is a recommended method for repeatedly loading a large number of modules?",
    "answer": "To facilitate the repeated loading of a large number of modules, it is recommended to use a module collection."
  },
  {
    "question": "How do you create a module collection in Lmod?",
    "answer": "First, load the desired modules, then use the `save` sub-command, providing a name for the collection, such as `module save my_modules`."
  },
  {
    "question": "How do you restore a saved module collection?",
    "answer": "You can restore a module collection in a later session or job using the command `module restore <collection_name>`, for example, `module restore my_modules`."
  },
  {
    "question": "What are hidden modules?",
    "answer": "Hidden modules are typically modules that you don't have to load manually; they are loaded automatically based on other modules."
  },
  {
    "question": "What is the purpose of a module hierarchy?",
    "answer": "A module hierarchy is used to solve the problem of complex module naming that arises from many combinations of versions of different modules in a flat structure, allowing for simpler load commands."
  },
  {
    "question": "What is an inconvenience of using a module hierarchy?",
    "answer": "An inconvenience of using a module hierarchy is that the `module avail` command only displays modules compatible with the \"parent\" modules you have loaded, making loading a parent module a prerequisite for some modules."
  },
  {
    "question": "How can you view all modules in a module hierarchy, including those incompatible with currently loaded parents?",
    "answer": "To get complete information about all modules in the hierarchy, the `module spider` command should be used, as it scans the entire hierarchy and displays all modules."
  },
  {
    "question": "What happens when `module load` detects two modules of the same family or version?",
    "answer": "When the module system detects two modules of the same family or two versions of the same module, the `module load` command will automatically replace the original module with the one to be loaded."
  },
  {
    "question": "Where can one find instructions for creating modules?",
    "answer": "Instructions for creating modules can be found in the official documentation at `http://lmod.readthedocs.io/en/latest/015_writing_modules.html`."
  },
  {
    "question": "How can modules be used with the ZSH or KSH shells?",
    "answer": "To use modules with the ZSH shell, execute `zsh -l`, and for the KSH shell, execute `ksh -l`."
  }
]