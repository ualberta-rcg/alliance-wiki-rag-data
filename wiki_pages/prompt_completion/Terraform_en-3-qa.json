[
  {
    "question": "How do you define a minimal OpenStack VM in Terraform?",
    "answer": "A minimal OpenStack VM in Terraform can be defined using a `resource \"openstack_compute_instance_v2\"` block, specifying `name`, `image_id`, `flavor_id`, `key_pair`, and `security_groups`."
  },
  {
    "question": "What is the purpose of the `resource \"openstack_compute_instance_v2\"` block in Terraform?",
    "answer": "This resource block creates a VM with the given name, image, and flavor, and associates it with a key pair and the default security group."
  },
  {
    "question": "What is important to remember when specifying `image_id`, `flavor_id`, and `key_pair` in a Terraform VM configuration?",
    "answer": "You must use your own specific values for `image_id`, `flavor_id`, and `key_pair`, as using placeholder values will likely cause the configuration to fail."
  },
  {
    "question": "How can you find the `image_id` and `flavor_id` for OpenStack VMs?",
    "answer": "You can find `image_id` and `flavor_id` by running `flavor list` or `image list` in an OpenStack CLI terminal session, or by referring to the guide in the appendix if using Horizon."
  },
  {
    "question": "Is it recommended to create a boot volume for persistent OpenStack VMs when defining them in Terraform?",
    "answer": "Yes, it is recommended that a boot volume be created for VMs using persistent flavors, as a persistent instance will probably fail unless there is sufficient empty space in the image itself."
  },
  {
    "question": "What does the `terraform plan` command do?",
    "answer": "The `terraform plan` command compiles the Terraform definition, attempts to determine how to reconcile the resulting state with the actual state on the cloud, and produces a plan of what actions it would take if the changes were applied."
  },
  {
    "question": "Why is it important to review the output of `terraform plan` before applying changes?",
    "answer": "It is definitely required to check the output of `terraform plan` before applying changes to ensure there are no surprises, as it provides a lot of information about the proposed actions."
  },
  {
    "question": "What might cause an 'incomplete credentials' error when running `terraform plan` for OpenStack?",
    "answer": "An 'incomplete credentials' error might occur if you forget to define `OS_CLOUD`, source the RC file, or if your `clouds.yaml` file is missing."
  },
  {
    "question": "What does `(known after apply)` indicate in the `terraform plan` output?",
    "answer": "`known after apply` signifies that the value will be determined from the state of newly created resources queried from OpenStack after the plan is applied."
  },
  {
    "question": "Which line in the `terraform plan` output is crucial to double-check?",
    "answer": "It is crucial to double-check the last line of the plan, which states 'Plan: X to add, Y to change, Z to destroy', to understand the exact number of resources that will be added, changed, or destroyed."
  }
]