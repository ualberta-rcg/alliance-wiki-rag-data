[
  {
    "question": "How do you define a minimal OpenStack VM using Terraform?",
    "answer": "A minimal OpenStack VM can be defined using a `resource` block of type `openstack_compute_instance_v2`, specifying attributes like `name`, `image_id`, `flavor_id`, `key_pair`, and `security_groups`."
  },
  {
    "question": "What are the essential attributes for a minimal OpenStack VM resource in Terraform?",
    "answer": "The essential attributes for a minimal OpenStack VM resource are `name`, `image_id`, `flavor_id`, `key_pair`, and `security_groups`."
  },
  {
    "question": "Why should users provide their own `image_id`, `flavor_id`, and `key_pair` values when following the tutorial?",
    "answer": "Users should provide their own values for `image_id`, `flavor_id`, and `key_pair` because using the example values will likely cause the Terraform configuration to fail."
  },
  {
    "question": "Where can you find the `image_id` and `flavor_id` for use in Terraform?",
    "answer": "You can find `image_id` and `flavor_id` by running `flavor list` or `image list` in an OpenStack CLI terminal session, or by following the guide in the appendix for Horizon (web interface)."
  },
  {
    "question": "What is the recommendation regarding volumes for persistent OpenStack VM instances defined with Terraform?",
    "answer": "For persistent instances, it is recommended that a boot volume be created, as a compute instance might fail without sufficient empty space in the image itself."
  },
  {
    "question": "What is the purpose of the `terraform plan` command?",
    "answer": "The `terraform plan` command compiles the Terraform definition, attempts to reconcile the resulting state with the actual state on the cloud, and produces a plan of what actions it would take if the changes were applied."
  },
  {
    "question": "What does the `+ create` symbol indicate in a Terraform plan output?",
    "answer": "The `+ create` symbol in a Terraform plan output indicates that a new resource will be created."
  },
  {
    "question": "What does `(known after apply)` mean in the `terraform plan` output?",
    "answer": "Values marked `(known after apply)` in the `terraform plan` output will be determined from the state of newly created resources queried from OpenStack after the plan is applied."
  },
  {
    "question": "What is the most crucial part to check in the summary of a Terraform plan?",
    "answer": "The most crucial part to check in the summary of a Terraform plan is the last line, which states the number of resources to add, change, and destroy (e.g., `Plan: 1 to add, 0 to change, 0 to destroy.`)."
  },
  {
    "question": "What common issues can cause an 'incomplete credentials' error when running `terraform plan`?",
    "answer": "An 'incomplete credentials' error when running `terraform plan` may occur if you've forgotten to define `OS_CLOUD`, source the RC file, or if your `clouds.yaml` file is missing."
  }
]