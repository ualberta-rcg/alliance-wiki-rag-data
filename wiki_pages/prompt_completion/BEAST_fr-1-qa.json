[
  {
    "question": "What is BEAST?",
    "answer": "BEAST is a cross-platform application for Bayesian MCMC analysis of molecular sequences, specifically for chronological rooted phylogenies inferred by strict or relaxed molecular clock models."
  },
  {
    "question": "What are the primary uses of BEAST?",
    "answer": "BEAST is used as a method for phylogeny reconstruction and as a testing environment for hypotheses about evolution without conditioning on a tree topology."
  },
  {
    "question": "How does MCMC (Markov Chain Monte Carlo) function within BEAST?",
    "answer": "MCMC is used to average a part of a tree so that each tree receives a weight proportional to its prior probability."
  },
  {
    "question": "Does BEAST use any external high-performance libraries?",
    "answer": "Yes, BEAST can use the high-performance beagle-lib library for calculations underlying Bayesian phylogenetic libraries or maximum likelihood estimation."
  },
  {
    "question": "How do you load the BEAST module for use?",
    "answer": "You load the BEAST module using the command `module load beast`."
  },
  {
    "question": "What dependent modules are loaded along with BEAST?",
    "answer": "Loading the BEAST module also loads the dependent `beagle-lib` and `java` modules."
  },
  {
    "question": "Which environment variable is configured when the BEAST module is loaded?",
    "answer": "The `EBROOTBEAST` environment variable is configured to point to the directory containing the application files."
  },
  {
    "question": "How are extensions added to BEAST?",
    "answer": "Extensions are added using `packagemanager` for BEAST versions 2.5.1 and later, and `addonmanager` for earlier versions."
  },
  {
    "question": "Which command is used to list available BEAST extensions for version 2.5.1?",
    "answer": "After loading the module (`module load beast/2.5.1`), use `packagemanager -list`."
  },
  {
    "question": "How do you install the SNAPP extension for BEAST version 2.5.1?",
    "answer": "First, load the BEAST 2.5.1 module (`module load beast/2.5.1`), then run `packagemanager -add SNAPP`."
  },
  {
    "question": "Where are extensions like SNAPP installed for BEAST version 2.5?",
    "answer": "Extensions for BEAST version 2.5, such as SNAPP, are installed in `~/.beast/2.5/SNAPP`."
  },
  {
    "question": "Which command is used to list available BEAST extensions for version 2.4.0?",
    "answer": "After loading the module (`module load beast/2.4.0`), use `addonmanager -list`."
  },
  {
    "question": "How do you install the SNAPP extension for BEAST version 2.4.0?",
    "answer": "First, load the BEAST 2.4.0 module (`module load beast/2.4.0`), then run `addonmanager -add SNAPP`."
  },
  {
    "question": "Where are extensions like SNAPP installed for BEAST version 2.4?",
    "answer": "Extensions for BEAST version 2.4, such as SNAPP, are installed in `~/.beast/2.4/SNAPP`."
  },
  {
    "question": "What is the basic command to execute a BEAST analysis with an input XML file?",
    "answer": "After loading the BEAST module (e.g., `module load beast/2.6.3`), you can run `beast input_beast.xml`."
  },
  {
    "question": "How is maximum memory specified for a BEAST job in a Slurm script?",
    "answer": "The Slurm directive `#SBATCH --mem-per-cpu` is used, and the BEAST-specific `BEAST_MEM` variable (e.g., `-Xmx3750M`) should be set approximately 250M lower than the `--mem-per-cpu` value."
  },
  {
    "question": "What Java option is used to set the maximum heap size for BEAST?",
    "answer": "The `BEAST_MEM` variable, typically in the format `-XmxSIZE` (e.g., `-Xmx3750M`), sets the maximum heap size for the Java Virtual Machine running BEAST."
  },
  {
    "question": "How are additional Java library paths specified for BEAST?",
    "answer": "Additional Java library paths are specified using the `-Djava.library.path=${BEAST_EXTRA_LIBS}` option in the Java command."
  }
]