[
  {
    "question": "How is the license server port extracted from the CDLMD_LICENSE_FILE in the Slurm script for Fir/Rorqual/Nibi?",
    "answer": "The license server port is extracted using the command `port=$(cat $CDLMD_LICENSE_FILE | grep -Eo '[0-9]+$')`."
  },
  {
    "question": "What utility is used to generate the machinefile for STAR-CCM+ jobs on Fir/Rorqual/Nibi and Narval clusters?",
    "answer": "The `slurm_hl2hl.py` utility is used to generate the machinefile: `slurm_hl2hl.py --format STAR-CCM+ > $SLURM_TMPDIR/machinefile`."
  },
  {
    "question": "How is the total number of cores (NCORE) calculated in the Slurm scripts for Fir/Rorqual/Nibi and Narval?",
    "answer": "The total number of cores (NCORE) is calculated as `NCORE=$((SLURM_NNODES * SLURM_CPUS_PER_TASK * SLURM_NTASKS_PER_NODE))`."
  },
  {
    "question": "What is the `starccm+` command for using a Siemens PoD license server on the Fir/Rorqual/Nibi cluster?",
    "answer": "For a Siemens PoD license server on Fir/Rorqual/Nibi, the command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -power -podkey $LM_PROJECT -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE -mpi intel -fabric psm2`."
  },
  {
    "question": "What is the `starccm+` command for using an institutional license server on the Fir/Rorqual/Nibi cluster?",
    "answer": "For an institutional license server on Fir/Rorqual/Nibi, the command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE -mpi intel -fabric psm2`."
  },
  {
    "question": "Which MPI implementation and fabric are used for STAR-CCM+ jobs on the Fir/Rorqual/Nibi cluster?",
    "answer": "On the Fir/Rorqual/Nibi cluster, STAR-CCM+ jobs use `intel` MPI with `psm2` fabric."
  },
  {
    "question": "What is the `starccm+` command for using a Siemens PoD license server on the Narval cluster?",
    "answer": "For a Siemens PoD license server on Narval, the command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -power -podkey $LM_PROJECT -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE -mpi openmpi`."
  },
  {
    "question": "What is the `starccm+` command for using an institutional license server on the Narval cluster?",
    "answer": "For an institutional license server on Narval, the command is `starccm+ -jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE -mpi openmpi`."
  },
  {
    "question": "Which MPI implementation is used for STAR-CCM+ jobs on the Narval cluster?",
    "answer": "On the Narval cluster, STAR-CCM+ jobs use `openmpi`."
  },
  {
    "question": "Which environment variable is checked to differentiate between Siemens PoD and institutional license server usage in the Slurm scripts?",
    "answer": "The `LM_PROJECT` environment variable is checked (`if [ -n \"$LM_PROJECT\" ]; then`) to determine if a Siemens PoD license server is being used."
  },
  {
    "question": "What are the default values for FLEXPORT, VENDPORT, and LICSERVER in the Trillium Slurm script configuration for the cd-adapco PoD license server?",
    "answer": "The default values are `FLEXPORT=1999`, `VENDPORT=2099`, and `LICSERVER=flex.cd-adapco.com`."
  },
  {
    "question": "How is the `CDLMD_LICENSE_FILE` explicitly set in the Trillium Slurm script?",
    "answer": "The `CDLMD_LICENSE_FILE` is explicitly set as `export CDLMD_LICENSE_FILE=\"$FLEXPORT@127.0.0.1\"`."
  },
  {
    "question": "What command is used for SSH tunneling in the Trillium Slurm script to access license servers?",
    "answer": "The SSH tunneling command used is `ssh tri-gw -L $FLEXPORT:$LICSERVER:$FLEXPORT -L $VENDPORT:$LICSERVER:$VENDPORT -N -f`."
  }
]