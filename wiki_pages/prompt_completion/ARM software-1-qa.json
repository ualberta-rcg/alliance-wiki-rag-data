[
  {
    "question": "What is ARM DDT?",
    "answer": "ARM DDT (formerly known as Allinea DDT) is a powerful commercial parallel debugger with a graphical user interface."
  },
  {
    "question": "What types of programs can ARM DDT debug?",
    "answer": "It can debug serial, MPI, multi-threaded, and CUDA programs, or any combination of these, written in C, C++, and FORTRAN."
  },
  {
    "question": "What is MAP?",
    "answer": "MAP (formerly Allinea) is an efficient parallel profiler from ARM."
  },
  {
    "question": "Which DDT modules are available on the Graham cluster?",
    "answer": "On Graham, 'ddt-cpu' is available for CPU debugging and profiling, and 'ddt-gpu' is for GPU or mixed CPU/GPU debugging."
  },
  {
    "question": "Which DDT module is available on the Niagara cluster?",
    "answer": "On Niagara, the 'ddt' module is available."
  },
  {
    "question": "How should users log in to use GUI applications like DDT/MAP and ensure proper X11 tunnelling?",
    "answer": "Users should log in using `ssh -Y` and utilize an SSH client such as MobaXTerm (Windows) or XQuartz (Mac) for proper X11 tunnelling."
  },
  {
    "question": "How are DDT and MAP typically used?",
    "answer": "Both DDT and MAP are normally used interactively through their GUI, typically accomplished using the `salloc` command."
  },
  {
    "question": "Can MAP be used non-interactively?",
    "answer": "Yes, MAP can be used non-interactively and submitted to the scheduler with the `sbatch` command."
  },
  {
    "question": "What are the current license limits for DDT/MAP usage?",
    "answer": "The current license limits DDT/MAP to a maximum of 512 CPU cores across all users at any given time, while DDT-GPU is limited to 8 GPUs."
  },
  {
    "question": "What is the first step to debug or profile CPU-only code?",
    "answer": "Allocate the node or nodes for debugging/profiling, which opens a shell session on the allocated node using a command like `salloc --x11 --time=0-1:00 --mem-per-cpu=4G --ntasks=4`."
  },
  {
    "question": "How do you load the appropriate module for CPU-only code debugging?",
    "answer": "Load the appropriate module, for example, by running `module load ddt-cpu`."
  },
  {
    "question": "How do you run the ddt or map command for CPU-only code?",
    "answer": "Execute `ddt path/to/code` or `map path/to/code`."
  },
  {
    "question": "What should be checked in the DDT/MAP application window before pressing the 'Run' button for CPU-only code?",
    "answer": "Ensure the MPI implementation is the default OpenMPI; if not, change it via the 'Change' button. Also, specify the desired number of CPU cores."
  },
  {
    "question": "How do you terminate the allocation after debugging CPU-only code?",
    "answer": "Exit the shell to terminate the allocation."
  },
  {
    "question": "What is the known compatibility issue between DDT and OpenMPI?",
    "answer": "Current versions of DDT and OpenMPI have a compatibility issue that breaks the display of message queues in DDT."
  },
  {
    "question": "What is the workaround for the DDT and OpenMPI compatibility issue?",
    "answer": "Before running DDT, execute the command `export OMPI_MCA_pml=ob1`."
  },
  {
    "question": "What is a potential consequence of using the `OMPI_MCA_pml=ob1` workaround?",
    "answer": "This workaround can make MPI code run slower, so it should only be used during debugging."
  },
  {
    "question": "How do you allocate nodes for debugging or profiling CUDA code?",
    "answer": "Allocate the node(s) using `salloc`, for example: `salloc --x11 --time=0-1:00 --mem-per-cpu=4G --ntasks=1 --gres=gpu:1`."
  },
  {
    "question": "Which module should be loaded for CUDA code debugging?",
    "answer": "Load the `ddt-gpu` module."
  },
  {
    "question": "What should you do if loading the `ddt-gpu` module suggests loading an older OpenMPI version first?",
    "answer": "Reload the OpenMPI module with the suggested command (e.g., `module load openmpi/2.0.2`), then reload the `ddt-gpu` module."
  },
  {
    "question": "What other module is required for CUDA code debugging?",
    "answer": "Ensure a `cuda` module is loaded by running `module load cuda`."
  },
  {
    "question": "How do you run the ddt command for CUDA code?",
    "answer": "Execute `ddt path/to/code`."
  },
  {
    "question": "What should be done if DDT reports a mismatch between the CUDA driver and toolkit version?",
    "answer": "Execute `export ALLINEA_FORCE_CUDA_VERSION=X.Y` (using the detected version) and then run DDT again."
  },
  {
    "question": "How can lag issues with the DDT interface be fixed when using X11 forwarding?",
    "answer": "Lag issues can be fixed by running DDT under VNC, as X11 is sensitive to packet latency."
  },
  {
    "question": "How do you configure DDT for 'manually launch backend yourself' in a VNC session?",
    "answer": "From the DDT startup screen, select 'manually launch backend yourself', input job information, press 'listen', and then click the 'help' button next to 'waiting for you to start the job...'."
  },
  {
    "question": "What is an example command to manually launch a job from a VNC session on a cluster node?",
    "answer": "After allocating a job with `salloc`, an example command is `/cvmfs/restricted.computecanada.ca/easybuild/software/2020/Core/allinea/20.2/bin/forge-client --ddtsessionfile /home/$USER/.allinea/session/gra-vdi3-1 $PROGRAM ...`."
  },
  {
    "question": "What is a common issue experienced with X11 on Graham?",
    "answer": "Users may experience issues with getting X11 to work properly on Graham."
  },
  {
    "question": "What is the workaround for X11 issues on Graham?",
    "answer": "Change permissions on your home directory so that only you have access."
  },
  {
    "question": "How can you check the current permissions of your home directory?",
    "answer": "Use the command `ls -ld /home/$USER`."
  },
  {
    "question": "What should the output of `ls -ld /home/$USER` look like for correct X11 permissions?",
    "answer": "The output should begin with `drwx------`."
  },
  {
    "question": "How do you remove read and execute permissions for groups and other users from your home directory?",
    "answer": "Use the command `chmod go-rx /home/$USER`."
  },
  {
    "question": "Can home directory permissions be restored after using DDT?",
    "answer": "Yes, if you recorded them, you can restore permissions to their previous state after using DDT."
  },
  {
    "question": "Where can one find more information about restoring home directory permissions?",
    "answer": "More information on restoring permissions can be found on the [[Sharing_data]] page."
  },
  {
    "question": "Are there any video resources available for debugging with DDT?",
    "answer": "Yes, there is a 55-minute video titled 'Debugging your code with DDT'."
  },
  {
    "question": "Is there a short tutorial available for DDT?",
    "answer": "Yes, a short DDT tutorial titled 'Parallel Debugging with DDT' is available."
  }
]