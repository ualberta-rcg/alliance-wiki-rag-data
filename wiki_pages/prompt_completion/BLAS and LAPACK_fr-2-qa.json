[
  {
    "question": "Is it possible to use Intel MKL directly, even if FlexiBLAS is the recommended option?",
    "answer": "Yes, it is always possible to use Intel MKL directly, even if FlexiBLAS is recommended."
  },
  {
    "question": "How do you configure an Intel compiler (e.g., ifort, icc, icpc) to use Intel MKL?",
    "answer": "With an Intel compiler, you replace `-lblas` and `-llapack` in the compiler and linker options with either `-mkl=sequential` or `-mkl` to use the MKL implementation of BLAS/LAPACK."
  },
  {
    "question": "Which Intel MKL option should be used to avoid internal threads?",
    "answer": "To not use internal threads with Intel MKL, the option `<tt>-mkl=sequential</tt>` should be used."
  },
  {
    "question": "What is the Intel MKL option for using internal threads?",
    "answer": "To use internal threads with Intel MKL, the option `<tt>-mkl</tt>` should be used."
  },
  {
    "question": "Where can more documentation about Intel MKL compiler options be found?",
    "answer": "More documentation on Intel MKL compiler options is available at `https://software.intel.com/en-us/mkl-linux-developer-guide-using-the-mkl-compiler-option`."
  },
  {
    "question": "How do you use Intel MKL with non-Intel compilers, such as GCC?",
    "answer": "With non-Intel compilers like GCC, you need to explicitly list the required MKL libraries during the linking step."
  },
  {
    "question": "What tool does Intel provide to help configure MKL for compilation and linking?",
    "answer": "Intel provides the MKL Link Advisor tool (found at `https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor`) to assist in determining the correct compilation and linking options."
  },
  {
    "question": "When is the MKL Link Advisor useful even when using Intel compilers?",
    "answer": "The MKL Link Advisor is also useful if you encounter 'undefined reference' errors with Intel compilers and the `-mkl` option."
  }
]