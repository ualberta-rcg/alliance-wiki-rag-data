[
  {
    "question": "How do you install the Jupyter Lmod extension?",
    "answer": "First, load the nodejs module with 'module load nodejs'. Then, install jupyterlmod using pip: 'pip install jupyterlmod'. Finally, install the lab extension with 'jupyter labextension install jupyterlab-lmod'. The last step may take a few minutes."
  },
  {
    "question": "What is the purpose of the Jupyter Lmod extension?",
    "answer": "Jupyter Lmod allows interaction with environment modules before launching kernels, using Lmod's Python interface for tasks like loading, unloading, or saving module collections."
  },
  {
    "question": "Where can I find instructions for managing loaded modules within the JupyterLab interface?",
    "answer": "You can find directives for managing loaded modules in the JupyterLab interface on the JupyterHub page."
  },
  {
    "question": "What is RStudio Server?",
    "answer": "RStudio Server enables you to develop R code in an RStudio environment accessible within a browser tab."
  },
  {
    "question": "What is a crucial step when preparing to install RStudio Server regarding Python modules?",
    "answer": "Before loading the 'python' module and creating a new virtual environment, you must load the 'rstudio-server' module with 'module load rstudio-server python'."
  },
  {
    "question": "How do you install the Jupyter RSession proxy for RStudio Server?",
    "answer": "Once JupyterLab is installed in your virtual environment, install the Jupyter RSession proxy by running 'pip install --no-index jupyter-rsession-proxy'."
  },
  {
    "question": "What should be visible in the JupyterLab interface after installing RStudio Server?",
    "answer": "You should see an RStudio application under the 'Launcher' tab."
  },
  {
    "question": "How do you activate your Python virtual environment after connecting to a cluster?",
    "answer": "You must activate it again using 'source $HOME/jupyter_py3/bin/activate'."
  },
  {
    "question": "How can you verify that your JupyterLab environment is ready and list installed Jupyter packages?",
    "answer": "You can list the installed jupyter* packages by running 'pip freeze | grep jupyter'."
  },
  {
    "question": "How do you start a JupyterLab server?",
    "answer": "To start a JupyterLab server, you need to submit an interactive job using 'salloc' with appropriate parameters for time, tasks, CPU, memory, and account."
  },
  {
    "question": "Provide an example command to start a JupyterLab server with salloc.",
    "answer": "An example command is 'salloc --time=1:0:0 --ntasks=1 --cpus-per-task=2 --mem-per-cpu=1024M --account=def-yourpi srun $VIRTUAL_ENV/bin/jupyterlab.sh'."
  },
  {
    "question": "Why is an SSH tunnel necessary to access JupyterLab on a compute node?",
    "answer": "An SSH tunnel is required because compute nodes are not directly accessible from the internet."
  },
  {
    "question": "What tool is recommended for creating an SSH tunnel on Linux or macOS?",
    "answer": "The Python package 'sshuttle' is recommended for creating an SSH tunnel on Linux or macOS."
  },
  {
    "question": "How do you create an SSH tunnel on Linux or macOS using sshuttle?",
    "answer": "Open a new terminal window and run 'sshuttle --dns -Nr <username>@<cluster>.alliancecan.ca', replacing <username> and <cluster> with your specific details."
  },
  {
    "question": "How do you connect to JupyterLab from a browser after setting up an SSH tunnel on Linux or macOS?",
    "answer": "Copy and paste the first HTTP address provided by the 'salloc' command (e.g., http://node_name.int.cluster.alliancecan.ca:8888/lab?token=...) into your web browser."
  },
  {
    "question": "Which tools can be used to create an SSH tunnel from Windows?",
    "answer": "You can use MobaXTerm or any terminal that supports the 'ssh' command."
  },
  {
    "question": "What information from the JupyterLab launch output is needed to create an SSH tunnel from Windows?",
    "answer": "You need to extract the 'hostname:port' and the 'token' from the HTTP address provided in the JupyterLab launch output."
  },
  {
    "question": "How do you create an SSH tunnel from Windows using the ssh command?",
    "answer": "In a new MobaXTerm terminal tab, run 'ssh -L 8888:<hostname:port> <username>@<cluster>.alliancecan.ca', replacing the placeholders with your extracted information."
  },
  {
    "question": "Once the SSH tunnel is established from Windows, what URL should you use in your browser to connect to JupyterLab?",
    "answer": "Open your web browser and go to 'http://localhost:8888/?token=<token>', replacing <token> with the alphanumeric value obtained from the JupyterLab launch output."
  },
  {
    "question": "How do you stop the JupyterLab server before its allocated time ends?",
    "answer": "Press CTRL-C twice in the terminal where the interactive job was launched."
  },
  {
    "question": "How do you close an SSH tunnel if you used MobaXterm?",
    "answer": "Press Ctrl-D to close the SSH tunnel."
  }
]