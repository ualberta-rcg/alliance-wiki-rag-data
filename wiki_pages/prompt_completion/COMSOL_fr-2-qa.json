[
  {
    "question": "For what type of simulations is the multi-node execution script (`script-dis.sh`) ideal?",
    "answer": "The multi-node execution script is ideal for very large simulations that exceed the capabilities of a single node."
  },
  {
    "question": "What functionalities does the multi-node execution script (`script-dis.sh`) offer?",
    "answer": "It allows restarting interrupted tasks, allocating large temporary files in the `/scratch` space, and using the default parameters of the `comsolbatch.ini` file."
  },
  {
    "question": "How many cores and nodes does the example `script-dis.sh` use?",
    "answer": "The example `script-dis.sh` uses 8 cores distributed equally on 2 nodes."
  },
  {
    "question": "What are the default Slurm parameters for time, account, and memory in the `script-dis.sh` example?",
    "answer": "The default Slurm parameters are 0-03:00 for time, `def-account` for the account, and 16G for memory."
  },
  {
    "question": "How do you specify the input and output files in the `script-dis.sh`?",
    "answer": "The input file is specified by `INPUTFILE=\"ModelToSolve.mph\"` and the output file by `OUTPUTFILE=\"SolvedModel.mph\"`."
  },
  {
    "question": "Which COMSOL modules are loaded in the `script-dis.sh` example for multi-node execution?",
    "answer": "The `StdEnv/2023` and `comsol/6.2` modules are loaded."
  },
  {
    "question": "What is the command to run COMSOL in batch mode with the `script-dis.sh` parameters?",
    "answer": "The command is `comsol batch -inputfile $INPUTFILE -outputfile $OUTPUTFILE -np $SLURM_CPUS_ON_NODE -nn $SLURM_NNODES -recoverydir $RECOVERYDIR -tmpdir $SLURM_TMPDIR -comsolinifile comsolbatch.ini -alivetime 15`."
  },
  {
    "question": "What should be done if a Java segmentation error occurs when starting a COMSOL task?",
    "answer": "If a Java segmentation error occurs, you should increase the Java heap by adding two `sed` lines after the `cp -f` commands, or increase `4G` to `8G` if the issue persists."
  },
  {
    "question": "How can the Java heap size be increased in `comsolbatch.ini` and `java.opts` from 2GB and 768MB to 4GB respectively?",
    "answer": "To increase the Java heap size, add these `sed` commands: `sed -i 's/-Xmx2g/-Xmx4g/g' comsolbatch.ini` and `sed -i 's/-Xmx768m/-Xmx4g/g' java.opts`."
  },
  {
    "question": "What is recommended if the `comsol/6.0.0.405` module on Narval performs poorly with multi-node scripts?",
    "answer": "It is recommended to use the original `comsol/6.0` module instead and create a support ticket to report the problem."
  },
  {
    "question": "What should users do if `script-smp.sh` runs slowly or freezes on Graham when executed on a single node?",
    "answer": "If `script-smp.sh` runs slowly or freezes on Graham, users should use `script-dis.sh` with `#SBATCH --nodes=1` and create a support ticket."
  },
  {
    "question": "How can COMSOL be used in graphical mode?",
    "answer": "COMSOL can be used interactively in full graphical mode on a cluster or on `gra-vdi`."
  },
  {
    "question": "When is it suitable to use COMSOL in graphical mode on cluster nodes?",
    "answer": "It is suitable for interactively running intensive test tasks with all cores and memory reserved by `salloc` on a compute node."
  },
  {
    "question": "What is the first step to use COMSOL in graphical mode on cluster nodes?",
    "answer": "The first step is to connect to a compute node (for a maximum of 3 hours) using TigerVNC."
  }
]