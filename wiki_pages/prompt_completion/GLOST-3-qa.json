[
  {
    "question": "How does GLOST distribute serial jobs among available cores?",
    "answer": "GLOST uses a cyclic distribution, assigning one processor to each job from the list. When a processor finishes a task, it is assigned the next available task from the list until all jobs are done or the job runs out of time."
  },
  {
    "question": "Why is it beneficial to use GLOST to run multiple serial jobs in separate directories?",
    "answer": "Running GLOST jobs in separate directories helps to avoid job crashes or overlaps in results, especially when programs use temporary, input, or output files with the same names."
  },
  {
    "question": "How can GLOST jobs be configured to run in dedicated directories?",
    "answer": "This can be achieved by creating the necessary input files and a dedicated directory for each job before running GLOST, or by including commands for directory creation and navigation directly within each line of the `list_glost_tasks.txt` file."
  },
  {
    "question": "What Slurm parameters are specified in the example script for running GLOST jobs in separate directories?",
    "answer": "The example Slurm script for running GLOST jobs in separate directories specifies `--nodes=1`, `--ntasks-per-node=3`, `--time=00-03:00`, and `--mem-per-cpu=4000M`."
  },
  {
    "question": "Which modules are loaded in the example GLOST script designed for jobs in separate directories?",
    "answer": "The example script loads `intel/2023.2.1`, `openmpi/4.1.5`, and `glost/0.3.1`."
  },
  {
    "question": "What is the structure of a command line for a single task in the `list_glost_tasks.txt` file when running jobs in separate directories?",
    "answer": "An example command structure is `nargument=XX && mkdir -p RUN_${nargument} && cd RUN_${nargument} && sleep 360 && echo ${nargument}.`hostname` > log_run.txt`, where `XX` is a unique argument for each task, and it creates a directory, changes into it, runs a command, and redirects output."
  },
  {
    "question": "How many tasks are listed in the `list_glost_tasks.txt` example for running jobs in separate directories?",
    "answer": "The `list_glost_tasks.txt` example for running jobs in separate directories contains 12 tasks, with `nargument` ranging from 20 to 31."
  }
]