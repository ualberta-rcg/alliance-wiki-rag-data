[
  {
    "question": "What is an EasyBuild toolchain?",
    "answer": "Toolchains are a combination of compiler, MPI implementation, CUDA version, and mathematical libraries, which are used to compile software packages."
  },
  {
    "question": "What does the toolchain name 'gofbc' typically represent?",
    "answer": "The name 'gofbc' indicates a combination of GCC, OpenMPI, FlexiBlas, and CUDA."
  },
  {
    "question": "Where can I find recipes for EasyBuild toolchains?",
    "answer": "Toolchain recipes are available in the `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO` directory."
  },
  {
    "question": "What components are included in the 'gofbc' toolchain version '2020.1.403.114'?",
    "answer": "The 'gofbc' toolchain version '2020.1.403.114' includes GCC version 9.3.0, OpenMPI 4.0.3, CUDA 11.4, and FlexiBLAS 3.0.4."
  },
  {
    "question": "What is the purpose of 'builddependencies' in a toolchain recipe?",
    "answer": "The `builddependencies` part indicates that a toolchain is a superset of other toolchains, allowing software built with the former to have dependencies on software packages built with the latter."
  },
  {
    "question": "How do I install software using EasyBuild with a recipe?",
    "answer": "First, copy the desired recipe from `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO` and modify it if needed, then run `eb <recipe.eb>` to install it."
  },
  {
    "question": "Where does EasyBuild install software by default?",
    "answer": "By default, EasyBuild installs software in your home directory, specifically in `$HOME/.local/easybuild`."
  },
  {
    "question": "How do I make a newly installed software package available as a module after installation?",
    "answer": "After the installation is complete, you should exit your session and reconnect to the cluster for the module to become available."
  },
  {
    "question": "What command should I use to reinstall an existing software version with modified parameters?",
    "answer": "To reinstall the exact same version with modified parameters, use `eb <recipe.eb> --force`."
  },
  {
    "question": "How can I install software to a different location other than my home directory using EasyBuild?",
    "answer": "To install software to a different location, such as a project directory, use `eb <recipe.eb> --installpath /path/to/your/project/easybuild`."
  },
  {
    "question": "How do I make modules from a custom installation path available in my current session?",
    "answer": "To make modules from a custom installation path available, run `export RSNT_LOCAL_MODULEPATHS=/path/to/your/project/easybuild/modules`."
  },
  {
    "question": "How can I make custom EasyBuild modules persistently available in all my sessions?",
    "answer": "To make custom modules available by default in your sessions, add the `export RSNT_LOCAL_MODULEPATHS=/path/to/your/project/easybuild/modules` command to your `.bashrc` file."
  },
  {
    "question": "Are there any additional resources available for learning about EasyBuild?",
    "answer": "Yes, additional resources include a webinar titled 'Building software on Compute Canada clusters using EasyBuild', staff-facing documentation, and many tutorials available on the EasyBuild website."
  }
]