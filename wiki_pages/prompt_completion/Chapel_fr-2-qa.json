[
  {
    "question": "Comment compiler le code `probeLocales.chpl` pour des calculs distribu\u00e9s ?",
    "answer": "Pour compiler le code `probeLocales.chpl`, utilisez la commande `chpl --fast probeLocales.chpl -o probeLocales`."
  },
  {
    "question": "Comment ex\u00e9cuter le programme compil\u00e9 `probeLocales` avec 4 locales ?",
    "answer": "Pour ex\u00e9cuter le programme compil\u00e9 `probeLocales` avec 4 locales, utilisez la commande `./probeLocales -nl 4`."
  },
  {
    "question": "Que doit-on pr\u00e9parer pour les t\u00e2ches de production Chapel ?",
    "answer": "Pour les t\u00e2ches de production, il faut pr\u00e9parer un script de soumission de t\u00e2che et le soumettre avec `sbatch`."
  },
  {
    "question": "Quel module doit \u00eatre charg\u00e9 pour utiliser un GPU NVIDIA avec Chapel sur des grappes InfiniBand ?",
    "answer": "Pour utiliser un GPU NVIDIA, il faut charger le module `chapel-ucx-cuda`."
  },
  {
    "question": "Quelles commandes sont n\u00e9cessaires pour charger les modules requis pour Chapel avec le support GPU NVIDIA ?",
    "answer": "Les commandes n\u00e9cessaires sont `module load gcc/12.3 cuda/12.2 chapel-ucx-cuda/2.4.0`."
  },
  {
    "question": "Comment allouer des ressources pour une t\u00e2che interactive Chapel avec support GPU NVIDIA ?",
    "answer": "Vous pouvez allouer des ressources avec la commande `salloc --time=0:30:0 --mem-per-cpu=3500 --gpus-per-node=1 --account=def-someprof`."
  },
  {
    "question": "Comment compiler le code `probeGPU.chpl` pour l'ex\u00e9cution sur GPU ?",
    "answer": "Pour compiler le code `probeGPU.chpl`, utilisez la commande `chpl --fast probeGPU.chpl`."
  },
  {
    "question": "Comment ex\u00e9cuter le programme compil\u00e9 `probeGPU` avec une seule locale ?",
    "answer": "Pour ex\u00e9cuter le programme compil\u00e9 `probeGPU` avec une seule locale, utilisez la commande `./probeGPU -nl 1`."
  },
  {
    "question": "Que fait le code de base `probeGPU.chpl` ?",
    "answer": "Le code `probeGPU.chpl` sert \u00e0 diagnostiquer les GPU, afficher des informations sur les locales et les GPU disponibles, et d\u00e9montrer une op\u00e9ration simple pouvant s'ex\u00e9cuter soit sur un GPU, soit sur un CPU."
  }
]