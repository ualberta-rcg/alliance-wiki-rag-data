[
  {
    "question": "How do you load the Intel compiler and GSL module for compilation on Niagara?",
    "answer": "You can load them using the command `module load intel/2018.2 gsl/2.4`."
  },
  {
    "question": "What Intel compiler flags are recommended for CPU-specific optimizations?",
    "answer": "The optimization flags `-O3 -xHost` allow the Intel compiler to use instructions specific to the existing CPU architecture."
  },
  {
    "question": "How do you link with the MKL library when using the Intel compiler?",
    "answer": "You only need the `-mkl` flag to link with the MKL library when using the Intel compiler."
  },
  {
    "question": "What optimization flags should be used with GCC for native CPU architecture?",
    "answer": "For GCC, the optimization flags would be `-O3 -march=native`."
  },
  {
    "question": "Why should you test your code before submitting a job on Niagara?",
    "answer": "You should always test your code before submitting a job to ensure its validity and to determine the resources required."
  },
  {
    "question": "Where can short test tasks be executed on Niagara?",
    "answer": "Short test tasks can be executed on the login nodes, typically for a few minutes, using at most 1-2GB of memory and a few cores."
  },
  {
    "question": "How can you launch the `ddt` debugger on Niagara's login nodes?",
    "answer": "After loading the `ddt` module with `module load ddt`, you can launch the debugger on the login nodes."
  },
  {
    "question": "How do you request an interactive debug job for tests requiring dedicated nodes?",
    "answer": "You can request an interactive debug job using the command `salloc -pdebug --nodes N --time=1:00:00`, where N is the number of nodes."
  },
  {
    "question": "What are the limits for an interactive debug session using `salloc`?",
    "answer": "An interactive debug session must not exceed one hour, should not use more than 4 cores, and each user can only have one debug session at a time."
  },
  {
    "question": "What is an alternative command for requesting an interactive debug job?",
    "answer": "An alternative is to use the command `debugjob N`, where N is the number of nodes."
  },
  {
    "question": "What is the duration of an interactive session when using `debugjob 1`?",
    "answer": "If `N=1`, the interactive session is one hour."
  },
  {
    "question": "What is the maximum number of nodes for a `debugjob` session and its duration?",
    "answer": "If `N=4` (the maximum value), the session is 30 minutes."
  },
  {
    "question": "Which job scheduler does Niagara use?",
    "answer": "Niagara uses the Slurm scheduler."
  },
  {
    "question": "How are tasks submitted to the Slurm scheduler from a login node?",
    "answer": "Tasks are submitted by passing a script to the `sbatch` command, for example: `sbatch jobscript.sh`."
  },
  {
    "question": "How are jobs accounted for on Niagara?",
    "answer": "Jobs are accounted against the Research Group's resource allocation; if no such allocation exists, the job is accounted against the 'Service d'acc\u00e8s rapide' (rapid access service)."
  },
  {
    "question": "What is the scheduling unit for tasks on Niagara?",
    "answer": "Scheduling is done by node, meaning in multiples of 40 cores."
  },
  {
    "question": "What is the maximum walltime limit for jobs on Niagara?",
    "answer": "The real-time limit should not exceed 24 hours; for users without an allocation, the limit is 12 hours."
  },
  {
    "question": "Which directories should be used for writing data during job execution on compute nodes?",
    "answer": "Writing should be done in your `scratch` or `project` directory, as the `home` directory is read-only on compute nodes."
  },
  {
    "question": "Can compute nodes access the internet?",
    "answer": "No, compute nodes cannot access the internet. Data should be downloaded to a login node before starting a job."
  },
  {
    "question": "If a user requests N nodes for a job, how much memory will their task receive?",
    "answer": "Your task always gets Nx202GB of RAM, where N represents the number of nodes."
  },
  {
    "question": "What is the recommended practice regarding core utilization for allocated nodes?",
    "answer": "You should try to use all cores of the nodes allocated to your task. Since there are 40 cores per node, your task should use Nx40 cores."
  }
]