[
  {
    "question": "What is the purpose of the `farm_init.run` command in META-Farm?",
    "answer": "The `farm_init.run` command initializes a case group."
  },
  {
    "question": "How do you submit a case group to the scheduler in META-Farm?",
    "answer": "You use the `submit.run` command to submit a case group to the scheduler."
  },
  {
    "question": "What does the `resubmit.run` command do?",
    "answer": "The `resubmit.run` command submits all failed or unexecuted treatments as a new group of cases."
  },
  {
    "question": "Which command can list all tasks and their current status?",
    "answer": "The `list.run` command lists all tasks and their current status."
  },
  {
    "question": "How can I get a summary of a case group's status with details on queued, running, and finished tasks?",
    "answer": "You can use the `query.run` command, which provides a summary of the case group's status and information on general and current execution progression. It is more practical than `list.run` for many tasks."
  },
  {
    "question": "What command is used to interrupt all running tasks and cancel those in the queue?",
    "answer": "The `kill.run` command interrupts all ongoing tasks and cancels those in the queue."
  },
  {
    "question": "How do you cancel only the tasks that are in the queue?",
    "answer": "You use the `prune.run` command to cancel only the tasks in the file d\u2019attente."
  },
  {
    "question": "Which command lists the status of all processed cases in META-Farm?",
    "answer": "The `Status.run` command (with a capital 'S') lists the status of all processed cases."
  },
  {
    "question": "What option for `Status.run` displays non-zero status lines at the end?",
    "answer": "The option `-f` for `Status.run` makes it display non-zero status lines at the very end."
  },
  {
    "question": "What is the function of the `clean.run` command?",
    "answer": "The `clean.run` command deletes all files and subdirectories in the case group directory, with the exception of `job_script.sh`, `single_case.sh`, `final.sh`, `resubmit_script.sh`, `config.h`, and `table.dat`. It also removes associated files in `/home/$USER/tmp`."
  },
  {
    "question": "Where must all META-Farm commands, except `farm_init.run`, be executed?",
    "answer": "All META-Farm commands, with the exception of `farm_init.run` itself, must be executed within a case group directory created by `farm_init.run`."
  },
  {
    "question": "What is a 'cas' in the context of META-Farm?",
    "answer": "A 'cas' (case) designates a distinct calculation, which can be the execution of a serial, parallel, or GPU program."
  },
  {
    "question": "What does the term 't\u00e2che' refer to in META-Farm?",
    "answer": "The term 't\u00e2che' (job) is used to designate an invocation to the task scheduler, and a task can group several cases."
  },
  {
    "question": "Under what conditions is it reasonable to use the SIMPLE mode in META-Farm?",
    "answer": "It is reasonable to use the SIMPLE mode when the total number of cases is fairly low (e.g., less than 500) and each case takes at least 20 minutes."
  },
  {
    "question": "What are the three essential scripts for running META-Farm?",
    "answer": "The three essential scripts are the `submit.run` command and the two customizable scripts, `single_case.sh` and `job_script.sh`."
  },
  {
    "question": "What argument is required for the `submit.run` command?",
    "answer": "An argument `N`, representing the number of tasks to submit, must be specified for the `submit.run` command."
  },
  {
    "question": "How do you specify SIMPLE mode when using `submit.run`?",
    "answer": "You specify SIMPLE mode by using `N=-1` with `submit.run`, which submits as many tasks as there are lines in the `table.dat` file."
  },
  {
    "question": "How do you specify META mode when using `submit.run`?",
    "answer": "You specify META mode by providing a positive integer `N` as an argument to `submit.run`, where `N` is the desired number of metatasks."
  },
  {
    "question": "What is the effect of the `-auto` option when used with `submit.run`?",
    "answer": "If the `-auto` option is present, the submission will be automatically rerun at the end, potentially multiple times, until all cases in `table.dat` have been processed."
  },
  {
    "question": "When is the `final.sh` script executed by `submit.run`?",
    "answer": "If a `final.sh` file is present in the case group directory, `submit.run` will treat it as a post-processing script and launch it automatically once all cases of `table.dat` have been successfully processed."
  },
  {
    "question": "Can additional `sbatch` arguments be passed to `submit.run`?",
    "answer": "Yes, any additional arguments provided after `N` and `[-auto]` will be transmitted to the `sbatch` command for launching all metatasks for that case group."
  }
]