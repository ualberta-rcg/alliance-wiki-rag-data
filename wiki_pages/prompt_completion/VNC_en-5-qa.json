[
  {
    "question": "What is the primary purpose of the `nix` module?",
    "answer": "The `nix` module provides open-source software optimized to use accelerated OpenGL whenever possible."
  },
  {
    "question": "On which systems is the `nix` module available?",
    "answer": "The `nix` module is only available on graham and gra-vdi."
  },
  {
    "question": "How do users load the `nix` module?",
    "answer": "Users can load the `nix` module by running the command `module load nix`."
  },
  {
    "question": "What commands become available after loading the `nix` module?",
    "answer": "After loading the `nix` module, the `nix` and `nix-env` commands become available to manage software packages within your personal `nix` environment."
  },
  {
    "question": "What is the initial step to install a `nix` package?",
    "answer": "To install a `nix` package, first open a terminal window and run `module load nix`."
  },
  {
    "question": "How can users search for programs within the `nix` environment?",
    "answer": "Users can search for programs using the `nix search <regexp>` command."
  },
  {
    "question": "What command is used to install `nix` packages?",
    "answer": "Packages can be installed using the `nix-env --install --attr <attribute>` command."
  },
  {
    "question": "Can you provide an example of how to install QGIS using `nix`?",
    "answer": "To install QGIS, first search with `nix search qgis`, then install using `nix-env --install --attr nixpkgs.qgis`."
  },
  {
    "question": "Does the `nix` environment persist across different login sessions?",
    "answer": "Yes, your `nix` environment persists from one login to the next, meaning software only needs to be installed once."
  },
  {
    "question": "What adjustment is required for accelerated OpenGL to function?",
    "answer": "For accelerated OpenGL to work, compiled binaries must be adjusted to pre-load \"vglfaker.so\" from VirtualGL."
  },
  {
    "question": "Is manual customization needed for OpenGL software installed via `nix` on gra-vdi?",
    "answer": "No, this level of customization is automatically done on gra-vdi when OpenGL-based software is installed with `nix`."
  },
  {
    "question": "Which utility is recommended for manually adjusting OpenGL software installed outside of `nix`?",
    "answer": "The `patchelf` utility is suggested for manually adjusting OpenGL software downloaded and installed outside of `nix`."
  },
  {
    "question": "How can the `patchelf` utility be installed into `nix`?",
    "answer": "The `patchelf` utility can be installed into `nix` using `nix-env --install --attr nixpkgs.patchelf`."
  },
  {
    "question": "What command is used with `patchelf` to add the VirtualGL system library to an application like `myglapp`?",
    "answer": "After loading the `nix` module, the command is `patchelf --add-needed /usr/lib64/VirtualGL/libvglfaker.so ~/.local/bin/myglapp`."
  },
  {
    "question": "Is it recommended to preload `vglfaker.so` using the `LD_PRELOAD` environment variable?",
    "answer": "No, preloading `vglfaker.so` via the `LD_PRELOAD` environment variable is generally a bad idea."
  },
  {
    "question": "Why is `LD_PRELOAD` generally not recommended for `vglfaker.so`?",
    "answer": "`LD_PRELOAD` applies indiscriminately to all binaries, which can cause failures for applications requiring a different `vglfaker.so`."
  },
  {
    "question": "When can `LD_PRELOAD` be used safely?",
    "answer": "`LD_PRELOAD` can be used safely in some cases within wrapper scripts."
  }
]