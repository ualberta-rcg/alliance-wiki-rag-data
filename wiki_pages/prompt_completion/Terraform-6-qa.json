[
  {
    "question": "How do you associate a floating IP with a VM using Terraform?",
    "answer": "You declare an `openstack_compute_floatingip_associate_v2` resource, setting its `floating_ip` attribute to the address of the allocated floating IP and its `instance_id` to the ID of the VM instance."
  },
  {
    "question": "What Terraform command applies the configuration to associate a floating IP?",
    "answer": "The `terraform apply` command is used to apply the configuration, which will show a plan to add the `openstack_compute_floatingip_associate_v2` resource."
  },
  {
    "question": "After associating a floating IP, how can you test connectivity to the new VM?",
    "answer": "You can typically SSH into the new VM using the allocated floating IP, for example, by running `ssh centos@X.Y.Z.W hostname`."
  },
  {
    "question": "What is the consequence of adding a root volume to an existing VM using Terraform?",
    "answer": "Adding a root volume to an existing VM is a destructive operation; it will replace the VM's boot disk, requiring the VM to be rebuilt."
  },
  {
    "question": "What configuration attributes are used to define a root volume within an `openstack_compute_instance_v2` resource in Terraform?",
    "answer": "A root volume is defined using a `block_device` subblock with attributes like `uuid` (of the image), `source_type` (e.g., \"image\"), `destination_type` (e.g., \"volume\"), `volume_size`, `boot_index`, and `delete_on_termination`."
  },
  {
    "question": "What is the significance of the `delete_on_termination` attribute when defining a block device?",
    "answer": "Setting `delete_on_termination = true` ensures that the volume is automatically cleaned up when the VM is destroyed, which is useful for testing. For real use, `false` can act as a defense against accidental deletion of resources."
  },
  {
    "question": "Why should the `image_id` attribute be removed from the main `openstack_compute_instance_v2` block when defining a root volume with a `block_device`?",
    "answer": "If `image_id` is left in the outer block while also defining a `block_device` for a root volume, Terraform will continuously detect a change between 'boot from volume' and 'boot directly from image' on subsequent runs, causing it to attempt to rebuild the instance every time."
  },
  {
    "question": "What does a `terraform plan` show when adding a root volume that causes a VM rebuild?",
    "answer": "The plan output will show `-/+ destroy and then create replacement` for the compute instance and potentially other associated resources like floating IP associations, along with a summary indicating resources to add, change, and destroy (e.g., `Plan: 2 to add, 0 to change, 2 to destroy.`)."
  }
]