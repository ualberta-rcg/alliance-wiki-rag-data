[
  {
    "question": "Who is this article intended for?",
    "answer": "This article is aimed at Windows and Mac users who have little to no experience in UNIX environments."
  },
  {
    "question": "What is the purpose of this article?",
    "answer": "It aims to provide the necessary basics for users to access and quickly use compute servers."
  },
  {
    "question": "How do connections to the compute servers work?",
    "answer": "Connections to the servers use the SSH protocol, operating in text mode via a console."
  },
  {
    "question": "Do Windows executables run on these servers?",
    "answer": "Windows executables do not run on our servers without using an emulator."
  },
  {
    "question": "Is there a self-paced course available on using the shell?",
    "answer": "Yes, there is a SHARCNET course titled 'Introduction to the Shell' available at https://training.sharcnet.ca/courses/enrol/index.php?id=182."
  },
  {
    "question": "Where can users find documentation for UNIX commands?",
    "answer": "UNIX commands are documented in reference manuals available on the servers."
  },
  {
    "question": "How do you access a command's reference manual from a terminal?",
    "answer": "You access them using the command `man command`, for example, `man ls`."
  },
  {
    "question": "What program does `man` use to display documentation, and how do you exit it?",
    "answer": "`man` uses `less`, and you must press `q` to exit this program."
  },
  {
    "question": "How do executables typically provide help on how to use them?",
    "answer": "By convention, executables contain some help, which is generally invoked using the command line argument `-h` or `--help`, or sometimes `-help`."
  },
  {
    "question": "Give an example of how to get help for the `ls` command.",
    "answer": "You can get help for the `ls` command by typing `ls --help`."
  },
  {
    "question": "Where are you directed after connecting to a server?",
    "answer": "Following your connection, you are directed to your `$HOME` directory for your user account."
  },
  {
    "question": "What is the UNIX term for 'folder'?",
    "answer": "The UNIX word for 'folder' is `directory`."
  },
  {
    "question": "What does your `$HOME` directory initially contain when your account is created?",
    "answer": "When your account is created, your `$HOME` only contains a few hidden configuration files that start with a period (.), and nothing else."
  },
  {
    "question": "What naming conventions are discouraged for files and directories on a Linux system?",
    "answer": "On a Linux system, you are strongly discouraged from creating files or directories that contain names with spaces or special characters, including accents."
  },
  {
    "question": "What command is used to list all files in a directory in a terminal?",
    "answer": "The `ls` (list) command is used to list all files in a directory."
  },
  {
    "question": "How do you include hidden files when listing directory contents?",
    "answer": "To include hidden files, use the command `ls -a`."
  },
  {
    "question": "How do you sort `ls` results by date, from newest to oldest?",
    "answer": "To sort results by date (from newest to oldest), use the command `ls -t`."
  },
  {
    "question": "How do you obtain detailed information on all files in a directory?",
    "answer": "To obtain detailed information on all files (permissions, owner, group, size, and last modification date), use the command `ls -l`."
  },
  {
    "question": "What `ls` option provides file sizes in human-readable format?",
    "answer": "The option `-h` gives the file sizes in human-readable format."
  },
  {
    "question": "Can `ls` options be combined, and provide an example.",
    "answer": "Yes, `ls` options can be combined; for example, `ls -alth` combines options for hidden files, sorting by date, detailed information, and human-readable sizes."
  },
  {
    "question": "What command is used to navigate the filesystem?",
    "answer": "The `cd` command (change directory) is used to move about in the filesystem."
  },
  {
    "question": "How do you change to a directory named `my_directory`?",
    "answer": "To change to `my_directory`, type `cd my_directory`."
  },
  {
    "question": "How do you change to the parent folder?",
    "answer": "To change to the parent folder, type `cd ..`."
  },
  {
    "question": "How do you move back to your home directory using `cd`?",
    "answer": "To move back to your home directory (`$HOME`), simply type `cd`."
  },
  {
    "question": "What command is used to create a new directory?",
    "answer": "To create (make) a directory, use the `mkdir` command, e.g., `mkdir my_directory`."
  },
  {
    "question": "What command is used to remove a directory?",
    "answer": "To remove a directory, use the `rmdir` command, e.g., `rmdir my_directory`."
  },
  {
    "question": "When does the `rmdir` command successfully remove a directory?",
    "answer": "Deleting a directory with `rmdir` only works if it is empty."
  },
  {
    "question": "What command is used to remove a file?",
    "answer": "You can remove files using the `rm` command, e.g., `rm my_file`."
  },
  {
    "question": "How do you recursively remove a directory using the `rm` command?",
    "answer": "You can recursively remove a directory using `rm -r my_directory`."
  },
  {
    "question": "What is the purpose of the `-f` option with the `rm` command?",
    "answer": "The `-f` option can be useful to bypass confirmation prompts and to continue the operation after an error, though it is potentially dangerous."
  },
  {
    "question": "What command is used to copy a file?",
    "answer": "To copy a file, use the `cp` command, e.g., `cp source_file destination_file`."
  },
  {
    "question": "How do you recursively copy a directory?",
    "answer": "To recursively copy a directory, use `cp -R source_directory destination_directory`."
  },
  {
    "question": "What command is used to rename a file or folder?",
    "answer": "To rename a file or a folder (directory), use the `mv` command (move), e.g., `mv source_file destination_file`."
  },
  {
    "question": "Does the `mv` command work for directories as well as files?",
    "answer": "Yes, the `mv` command also applies to directories, allowing you to rename them by replacing `source_file` with `source_directory` and `destination_file` with `destination_directory`."
  },
  {
    "question": "What three types of permissions do UNIX systems support?",
    "answer": "UNIX systems support read (`r`), write (`w`), and execute (`x`) permissions."
  },
  {
    "question": "What do read, write, and execute permissions mean for files?",
    "answer": "For files, `r` (read) means it can be read, `w` (write) means it can be modified, and `x` (execute) means it can be run (if it's an executable or script)."
  },
  {
    "question": "What do read, write, and execute permissions mean for directories?",
    "answer": "For a directory, `r` (read) is necessary to list its contents, `w` (write) enables modification (adding or removing a file), and `x` (execute) enables changing into it."
  },
  {
    "question": "To which three classes of users do permissions apply?",
    "answer": "Permissions apply to the owner (`u`), the group (`g`), and all others or 'the world' (`o`)."
  },
  {
    "question": "How can you check the permissions associated with files and subdirectories of the current directory?",
    "answer": "You can check permissions by using the command `ls -la`."
  }
]