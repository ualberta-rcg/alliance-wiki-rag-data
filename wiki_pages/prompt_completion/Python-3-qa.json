[
  {
    "question": "What is an example job submission script for creating a virtual environment inside a single-node job?",
    "answer": "A job submission script named `submit_venv.sh` can be used, which includes commands to load a Python module (e.g., `python/3.11`), create a virtual environment in `$SLURM_TMPDIR/env` using `virtualenv --no-download`, activate it, upgrade pip, and install packages from a `requirements.txt` file."
  },
  {
    "question": "How do you create a `requirements.txt` file for a Python environment, for example, one for TensorFlow?",
    "answer": "To create a `requirements.txt` file, first load the desired Python module (e.g., `python/3.11`) on a login node. Then, create and activate a temporary virtual environment (e.g., `virtualenv --no-download /tmp/$RANDOM`), upgrade pip, install the desired package (e.g., `pip install --no-index tensorflow`), then use `pip freeze --local > requirements.txt` to save the package list, and finally deactivate and remove the temporary environment."
  },
  {
    "question": "What is the benefit of using a `requirements.txt` file for a virtual environment?",
    "answer": "A `requirements.txt` file ensures that your Python environment is reproducible between jobs."
  },
  {
    "question": "What should be done if a required Python wheel is not available in the provided wheelhouse?",
    "answer": "If a wheel is not available in the wheelhouse, you can pre-download it. If you believe it should be included, you should contact Technical support to make a request."
  },
  {
    "question": "How are virtual environments managed when running Python scripts across multiple nodes?",
    "answer": "When running Python scripts across multiple nodes, each node must have its own virtual environment activated. The submission script should create the virtual environment on each allocated node using `srun` and then activate it on the main node before running the script with `srun`."
  },
  {
    "question": "What is the typical sequence of commands for setting up virtual environments on multiple nodes within a job submission script?",
    "answer": "In a submission script for multi-node jobs, you would use `srun --ntasks $SLURM_NNODES --tasks-per-node=1 bash << EOF` to create and activate the virtual environment on each allocated node. Inside this EOF block, you would include `virtualenv --no-download $SLURM_TMPDIR/env`, `source $SLURM_TMPDIR/env/bin/activate`, `pip install --no-index --upgrade pip`, and `pip install --no-index -r requirements.txt`. Afterward, activate the environment on the main node using `source $SLURM_TMPDIR/env/bin/activate;` and run your script with `srun python myscript.py;`."
  }
]