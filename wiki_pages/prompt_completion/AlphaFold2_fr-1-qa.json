[
  {
    "question": "What is AlphaFold?",
    "answer": "AlphaFold is a machine learning model for protein folding prediction."
  },
  {
    "question": "Which version of AlphaFold is described in this document?",
    "answer": "This document describes how to use AlphaFold v2.0, which was presented at CASP14 and published in Nature."
  },
  {
    "question": "Where can I find the source code and documentation for AlphaFold?",
    "answer": "The source code and documentation are available on the DeepMind AlphaFold GitHub page."
  },
  {
    "question": "How should I cite AlphaFold if I publish results using its code or model parameters?",
    "answer": "You must cite the publication found at https://doi.org/10.1038/s41586-021-03819-2."
  },
  {
    "question": "How can I view the available AlphaFold versions on the clusters?",
    "answer": "You can display the available versions with the command `avail_wheels alphafold --all-versions`."
  },
  {
    "question": "What Python versions are supported for AlphaFold installation as of July 2022?",
    "answer": "Python 3.7 and 3.8 are supported since July 2022."
  },
  {
    "question": "What dependencies need to be loaded before installing AlphaFold in a Python virtual environment?",
    "answer": "You need to load `StdEnv/2020 gcc/9.3.0 openmpi/4.0.3 cuda/11.4 cudnn/8.2.0 kalign/2.03 hmmer/3.2.1 openmm-alphafold/7.5.1 hh-suite/3.3.0 python/3.8`."
  },
  {
    "question": "What commands are used to create and activate a Python virtual environment for AlphaFold?",
    "answer": "First, create it with `virtualenv --no-download ~/alphafold_env`, then activate it using `source ~/alphafold_env/bin/activate`."
  },
  {
    "question": "How do you install a specific version of AlphaFold using pip within a virtual environment?",
    "answer": "After upgrading pip, use `pip install --no-index alphafold==X.Y.Z`, replacing `X.Y.Z` with the desired version number (e.g., `2.2.4`)."
  },
  {
    "question": "How do you install the latest available AlphaFold version on the clusters?",
    "answer": "To install the most recent version, do not specify a version number in the `pip install` command (e.g., `pip install --no-index alphafold`)."
  },
  {
    "question": "How can I validate the AlphaFold installation?",
    "answer": "You can validate the installation by running `run_alphafold.py --help`."
  },
  {
    "question": "How do you freeze the AlphaFold environment and its dependencies?",
    "answer": "You can freeze the environment and dependencies by running `pip freeze > ~/alphafold-requirements.txt`."
  },
  {
    "question": "Does AlphaFold require databases to function?",
    "answer": "Yes, AlphaFold requires a set of databases."
  },
  {
    "question": "Where are the AlphaFold databases located on the cluster?",
    "answer": "The AlphaFold databases are available in `/cvmfs/bio.data.computecanada.ca/content/databases/Core/alphafold2_dbs/2023_07/`."
  },
  {
    "question": "How often are the AlphaFold databases updated in CVMFS?",
    "answer": "The AlphaFold databases are updated annually in CVMFS."
  },
  {
    "question": "Where should AlphaFold databases be downloaded locally?",
    "answer": "Databases should be downloaded locally into your `$SCRATCH` directory."
  },
  {
    "question": "What is the general process to create a data directory for AlphaFold databases in `$SCRATCH`?",
    "answer": "You first set `DOWNLOAD_DIR` to `$SCRATCH/alphafold/data` and then create the directory with `mkdir -p $DOWNLOAD_DIR`."
  },
  {
    "question": "What command is used to download all AlphaFold data?",
    "answer": "The command `download_all_data.sh $DOWNLOAD_DIR` is used to download all data."
  },
  {
    "question": "What type of node should be used for downloading AlphaFold data?",
    "answer": "Data downloading should not be performed from a compute node; use a data transfer node (DTN) or a login node instead."
  },
  {
    "question": "What is the recommended tool for long AlphaFold database downloads?",
    "answer": "It is suggested to use a terminal multiplexer because the download process can take a full day."
  },
  {
    "question": "What is the specific `DOWNLOAD_DIR` configuration for AlphaFold on Graham clusters?",
    "answer": "On Graham, the `DOWNLOAD_DIR` should be configured as `/datashare/alphafold`."
  },
  {
    "question": "What is the maximum number of CPU cores AlphaFold can effectively use?",
    "answer": "AlphaFold is hardcoded to use a maximum of 8 CPU cores and does not benefit from more."
  },
  {
    "question": "Does a GPU accelerate all parts of AlphaFold execution?",
    "answer": "No, a GPU only helps to accelerate the inference part of AlphaFold execution."
  },
  {
    "question": "What are the common SLURM parameters used for AlphaFold job submissions?",
    "answer": "Common SLURM parameters include `--job-name`, `--account`, `--time`, `--cpus-per-task=8`, and `--mem=20G`. For GPU jobs, `--gres=gpu:1` is also used."
  },
  {
    "question": "How do you submit an AlphaFold job to the scheduler?",
    "answer": "You submit the job using the command `sbatch --job-name alphafold-X alphafold-gpu.sh`, adjusting the script name as needed."
  }
]