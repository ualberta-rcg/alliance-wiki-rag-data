[
  {
    "question": "What is the purpose of the SSH command `ssh nia-gw -L $FLEXPORT:$LICSERVER:$FLEXPORT -L $VENDPORT:$LICSERVER:$VENDPORT -N -f` in the Trillium Slurm script?",
    "answer": "This SSH command sets up a tunnel for the license server, forwarding the flex port and vendor port through `nia-gw` to the specified license server."
  },
  {
    "question": "How is the machinefile generated for STAR-CCM+ jobs on the Trillium cluster?",
    "answer": "The machinefile is generated by running `slurm_hl2hl.py --format STAR-CCM+` and redirecting its output to `$SLURM_TMPDIR/machinefile`."
  },
  {
    "question": "How is the total number of cores (NCORE) calculated in the Trillium Slurm script for a STAR-CCM+ job?",
    "answer": "NCORE is calculated by multiplying the number of nodes, CPUs per task, and tasks per node: `SLURM_NNODES * SLURM_CPUS_PER_TASK * SLURM_NTASKS_PER_NODE`."
  },
  {
    "question": "What is the workaround implemented in the Trillium Slurm script to address STAR-CCM+ license failures?",
    "answer": "The script includes a `while` loop that attempts to start STAR-CCM+ up to 5 times if the previous attempt failed, with a 5-second sleep between attempts after the first one, until the exit status is 0."
  },
  {
    "question": "What command line options are used to launch STAR-CCM+ for Siemens PoD license users on Trillium?",
    "answer": "STAR-CCM+ is launched with `-jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -power -podkey $LM_PROJECT -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE`."
  },
  {
    "question": "What command line options are used to launch STAR-CCM+ for institutional license users on Trillium?",
    "answer": "STAR-CCM+ is launched with `-jvmargs -Xmx4G -jvmargs -Djava.io.tmpdir=$SLURM_TMPDIR -batch -np $NCORE -nbuserdir $SLURM_TMPDIR -machinefile $SLURM_TMPDIR/machinefile $JAVA_FILE $SIM_FILE`."
  },
  {
    "question": "What are the initial steps required to set up an account for remote visualization with STAR-CCM+?",
    "answer": "To set up an account for remote visualization, you must first create a `~/.licenses/starccm.lic` file. If you are a POD license user, you must also set `export LM_PROJECT='CD-ADAPCO PROJECT ID'` and add `-power` to your command line options."
  },
  {
    "question": "How do users connect to compute nodes for remote visualization of STAR-CCM+?",
    "answer": "Users should connect with TigerVNC and then open a terminal window."
  },
  {
    "question": "What module commands are needed to run STAR-CCM+ version 15.04.010 (or newer) on compute nodes for remote visualization?",
    "answer": "You need to load `module load StdEnv/2020` and then `module load starccm-mixed/17.02.007` (or `starccm/17.02.007-R8`), followed by running `starccm+`."
  },
  {
    "question": "How do you run STAR-CCM+ versions 14.06.010, 14.04.013, or 14.02.012 on compute nodes for remote visualization?",
    "answer": "Load `StdEnv/2016`, then `starccm-mixed/14.06.010` (or `starccm/14.06.010-R8`), and finally execute `starccm+`."
  },
  {
    "question": "Which command is used to launch older versions of STAR-CCM+ (13.06.012 or older) for remote visualization on compute nodes?",
    "answer": "After loading `StdEnv/2016` and `starccm-mixed/13.06.012` (or `starccm/13.06.012-R8`), run `starccm+ -mesa`."
  },
  {
    "question": "What is the process to connect to VDI nodes for remote visualization of STAR-CCM+?",
    "answer": "Connect to `gra-vdi.alliancecan.ca` with TigerVNC, log in, and once the Remote Desktop appears, open a terminal window by clicking `Applications -> Systems Tools -> Mate Terminal`."
  },
  {
    "question": "How can users check the available STAR-CCM+ versions on VDI nodes?",
    "answer": "After loading a `StdEnv`, users can use the `module avail starccm-mixed` command to display available versions."
  },
  {
    "question": "Why is the MESA implementation of OpenGL used with STAR-CCM+ on `gra-vdi` VDI nodes?",
    "answer": "Only the MESA implementation of OpenGL is currently usable on `gra-vdi` due to `virtualgl` issues that prevent local GPU hardware acceleration for OpenGL-driven graphics."
  },
  {
    "question": "How do you load and run STAR-CCM+ version 18.04.008 (or newer) on VDI nodes for remote visualization?",
    "answer": "Load `CcEnv StdEnv/2023`, then `starccm-mixed/18.04.008` (or `starccm/18.04.008-R8`), and finally run `starccm+ -rr server`."
  },
  {
    "question": "Which module commands and launch command are used for STAR-CCM+ versions 15.04.010 through 18.02.008 on VDI nodes?",
    "answer": "Load `CcEnv StdEnv/2020`, then `starccm-mixed/15.04.010` (or `starccm/15.04.010-R8`), and then run `starccm+ -mesa`."
  }
]