[
  {
    "question": "What filesystem commands should users avoid or minimize in directories with many files?",
    "answer": "Users should minimize the use of `ls` or `du` commands, especially in directories containing a large number of files."
  },
  {
    "question": "How can users check their disk usage regularly?",
    "answer": "Users should regularly check their disk usage with the `quota` command."
  },
  {
    "question": "What are considered warning signs that should prompt careful consideration regarding file management?",
    "answer": "Warning signs include having more than 100,000 files in your space or an average data file size less than 100MB for large output."
  },
  {
    "question": "What 'housekeeping' practices are recommended to manage files and quotas?",
    "answer": "It is recommended to do 'housekeeping' regularly using commands like `gzip` and `tar` to compress multiple files and group them, thereby reducing the number of files and maintaining quotas."
  },
  {
    "question": "What is the first step in planning for I/O needs?",
    "answer": "It is always recommended to make a plan for your data needs, considering how much you will generate, how much you need to save, and where you will keep it."
  },
  {
    "question": "What are the characteristics of the ASCII data format?",
    "answer": "ASCII is a human-readable and portable file format, but it is inefficient for storage (e.g., 13 bytes per single precision float) and expensive for read/write operations."
  },
  {
    "question": "When is ASCII format suitable for use?",
    "answer": "ASCII format is good for a small input or parameter file to run a code."
  },
  {
    "question": "How can one identify if a C or FORTRAN code uses ASCII format for output?",
    "answer": "In C code, `fprintf()` is used, while in FORTRAN code, the `open` command with the `'formatted'` option or `write(6,*)` indicates ASCII format."
  },
  {
    "question": "What are the advantages of using binary data format?",
    "answer": "Binary format offers efficient storage (e.g., 4 bytes per single precision float, 8 bytes per double precision, no delimiters) and efficient read/write operations, making it computationally much 'cheaper' than ASCII."
  },
  {
    "question": "What are the disadvantages of binary data format?",
    "answer": "The disadvantages of binary format are that you must know the specific format to read it, and there can be portability issues related to endians."
  },
  {
    "question": "How much faster is binary writing compared to ASCII, according to the provided experiment?",
    "answer": "In an experiment writing 128M doubles, binary writing was significantly faster, taking 6 seconds to /scratch compared to 173 seconds for ASCII, and 20 seconds to /tmp (disk) compared to 260 seconds for ASCII."
  },
  {
    "question": "What is the purpose of MetaData (XML) in data formats?",
    "answer": "MetaData (XML) is used to encode data about data, such as the number and names of variables, their dimensions and sizes, endians, owner, date, links, and comments, which is useful for describing binary files, especially when sharing them."
  },
  {
    "question": "What are the benefits of using a database data format?",
    "answer": "A database data format is powerful and flexible, good for many small records, and can greatly simplify data organization and analysis, potentially enhancing performance for seek/sort operations."
  },
  {
    "question": "Which open-source database packages are mentioned as supported by CHARENTE?",
    "answer": "CHARENTE supports SQLite (serverless), PostgreSQL, and mySQL."
  },
  {
    "question": "What are the key advantages of standard scientific dataset libraries like HDF5 and NetCDF?",
    "answer": "These libraries efficiently store large-scale arrays, include data descriptions (metadata), provide data portability across platforms and languages, and offer optional compression, which is particularly useful for datasets with many repeating values."
  }
]