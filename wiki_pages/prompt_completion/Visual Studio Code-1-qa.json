[
  {
    "question": "What is Visual Studio Code?",
    "answer": "Visual Studio Code (VS Code) is an integrated development environment (IDE) from Microsoft that supports local development with numerous extensions and is highly customizable."
  },
  {
    "question": "Why is it recommended to use VS Code locally instead of on login nodes?",
    "answer": "VS Code is known for misbehaving on login nodes, so it's advised to use it strictly locally whenever possible or to configure it for remote connections appropriately."
  },
  {
    "question": "Why should I avoid running or debugging code on remote systems directly from Visual Studio Code?",
    "answer": "Running or debugging code directly will execute it on the login nodes, which can lead to performance issues or system disruptions."
  },
  {
    "question": "What environment is recommended for debugging tasks if Visual Studio Code is connected to remote systems?",
    "answer": "The `code-server` environment is recommended as it provides a safer and more appropriate context for debugging tasks."
  },
  {
    "question": "What are the primary recommendations for using VS Code with remote systems?",
    "answer": "The primary recommendations are to use VS Code locally and save changes with Git, use `nano` or `vim` for direct file editing on systems, load the `code-server` module for debugging, or configure VS Code for remote connections if other options are not feasible."
  },
  {
    "question": "What are the advantages of using VS Code for local development?",
    "answer": "Local usage offers speed and stability, direct access to files, extensions, and terminals with zero latency, and offline capability, allowing you to code anytime, anywhere."
  },
  {
    "question": "How do you test a project developed locally with VS Code on the remote systems?",
    "answer": "You should save your changes to a Git repository, push them to a remote host (like GitHub or GitLab), connect to the system via terminal, and then pull your changes to test them."
  },
  {
    "question": "What is the command to connect to a remote system via the terminal?",
    "answer": "You connect using the command `ssh <username>@<hostname>.alliancecan.ca`."
  },
  {
    "question": "How do you get your Git repository changes onto the remote system?",
    "answer": "You can either clone your repository using `git clone git@github.com:username/reponame.git` or, if it already exists, navigate to your repository and pull changes with `cd myrepo` followed by `git pull`."
  },
  {
    "question": "How can you test changes on the remote system after pulling them from Git?",
    "answer": "You can test your changes in a short interactive job with minimal resources."
  },
  {
    "question": "What are some lightweight command-line editors for files directly on remote systems?",
    "answer": "Terminal-based editors like `nano` or `vim` are lightweight and efficient options for editing files directly from the command line."
  },
  {
    "question": "Is there a graphical interface alternative for editing files on remote systems?",
    "answer": "Yes, the JupyterLab text editor provides a versatile graphical alternative that supports formats like Markdown and Python scripts."
  },
  {
    "question": "When should you use a `code-server` instance on the systems?",
    "answer": "You should use a `code-server` instance if you need to debug or test your code on the systems."
  },
  {
    "question": "What are the steps to start a `code-server` instance from JupyterLab?",
    "answer": "First, access one of the options to launch JupyterLab, then select minimal resources and start an interactive JupyterLab job. Finally, click on the VS Code launcher button on the Launcher tab."
  },
  {
    "question": "Does a `code-server` instance have internet access?",
    "answer": "No, the `code-server` instance runs in a compute job that does not have internet access."
  },
  {
    "question": "When should you configure VS Code for a remote connection using the Remote SSH extension?",
    "answer": "This configuration is necessary if local usage, terminal-based editors, and `code-server` instances do not meet your specific requirements."
  },
  {
    "question": "What are the initial SSH configuration steps required for remotely connecting VS Code?",
    "answer": "You need to generate your SSH key (if not already done) and add your public SSH key to the CCDB."
  },
  {
    "question": "How do you set up the SSH configuration file on your local computer for remote VS Code connections?",
    "answer": "You need to create or add to the `~/.ssh/config` file on your local computer, including entries for general host settings and specific hosts like `rorqual`, `narval`, `nibi`, or `fir`."
  },
  {
    "question": "How do you open the Command Palette in VS Code?",
    "answer": "Press `Ctrl+Shift+P` (Windows/Linux) or `Cmd+Shift+P` (macOS)."
  },
  {
    "question": "What is the process for applying local configuration settings for remote connections in VS Code?",
    "answer": "Open the Command Palette, select `Preferences: Open User Settings (JSON)`, and then paste or merge the provided configuration into your user settings."
  },
  {
    "question": "What needs to be done on the remote system to configure it for VS Code remote connection?",
    "answer": "First, log in to the system via an external terminal, then create the directory `~/.vscode-server/data/Machine/`, and finally create the `settings.json` machine configuration file within that directory."
  },
  {
    "question": "How do you connect to a remote host from VS Code after configuration?",
    "answer": "Open the Command Palette, type `remote`, select `Connect to Host...`, choose the desired remote system, and confirm."
  },
  {
    "question": "What type of node are you connected to when you establish a remote VS Code session using the Remote SSH extension?",
    "answer": "You will be connected to a login node."
  },
  {
    "question": "Is it permissible to test, debug, or run code on the login node when remotely connected via VS Code?",
    "answer": "No, it is explicitly warned not to test, debug, or run your code on the login node."
  }
]