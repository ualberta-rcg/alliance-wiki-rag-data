[
  {
    "question": "What is Valgrind?",
    "answer": "Valgrind is a powerful debugging tool that detects memory problems, including memory leaks, access to unallocated or deallocated memory, multiple deallocations, and other related issues."
  },
  {
    "question": "What kind of memory-related issues can Valgrind help detect?",
    "answer": "Valgrind can detect memory leaks, access to unallocated or deallocated memory, multiple deallocations, and can help diagnose issues causing segmentation faults, broken pipes, or bus errors."
  },
  {
    "question": "Is Valgrind available on Calcul Canada clusters without special setup?",
    "answer": "Yes, Valgrind is part of the basic software installed on Calcul Canada clusters and can be used without having to load a module."
  },
  {
    "question": "What is the issue with Valgrind and AVX-512 instructions as of December 2020?",
    "answer": "As of December 2020, current Valgrind versions cannot use AVX-512 instructions found on the latest Intel processors, which results in an 'Unrecognised instruction' error message."
  },
  {
    "question": "How can one resolve the AVX-512 instruction issue on B\u00e9luga when using Valgrind?",
    "answer": "To resolve this issue on B\u00e9luga, where the default environment uses AVX-2, you should first load the AVX-2 environment using `module load arch/avx2` and then recompile your application from scratch."
  },
  {
    "question": "How should a program be prepared for debugging with Valgrind?",
    "answer": "To extract useful information, you must first compile your code with debugging information by adding the `-g` option to the compilation command."
  },
  {
    "question": "Why might highly optimized mathematical libraries cause errors when run with Valgrind?",
    "answer": "Some highly specialized optimizations, especially with certain mathematical libraries, can generate operations that Valgrind does not recognize, leading to errors when executing Valgrind."
  },
  {
    "question": "What is the recommended approach for compiling code with mathematical libraries when debugging with Valgrind?",
    "answer": "It is recommended to compile your code by linking against an unoptimized version of libraries (e.g., Netlib BLAS and LAPACK) that do not use problematic operations, especially for diagnosing issues in your own code."
  },
  {
    "question": "What is the basic command to run a program with Valgrind for memory checking?",
    "answer": "The command is `valgrind --tool=memcheck --leak-check=yes --show-reachable=yes ./your_program`."
  },
  {
    "question": "What is a known side effect of running code with Valgrind?",
    "answer": "When using Valgrind, your code runs in an instance that validates all memory accesses, causing it to execute much more slowly."
  },
  {
    "question": "What advice is given for choosing a test problem size when using Valgrind?",
    "answer": "Due to Valgrind's slower execution speed, it is advised to choose a smaller problem for testing than what you would normally run."
  }
]