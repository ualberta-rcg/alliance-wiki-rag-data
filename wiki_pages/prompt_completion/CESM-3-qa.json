[
  {
    "question": "What is the `NETLIB_LAPACK_PATH` environment variable set to for the Beluga machine?",
    "answer": "The `NETLIB_LAPACK_PATH` for Beluga is set to `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v3/Core/imkl/2023.2.0/mkl/2023.2.0/`."
  },
  {
    "question": "What is the `OMP_STACKSIZE` environment variable set to for the Beluga machine?",
    "answer": "The `OMP_STACKSIZE` for Beluga is `256M`."
  },
  {
    "question": "What MPI C compiler is specified by `I_MPI_CC` for the Beluga machine?",
    "answer": "The `I_MPI_CC` environment variable for Beluga is `icc`."
  },
  {
    "question": "What MPI Fortran compiler is specified by `I_MPI_FC` for the Beluga machine?",
    "answer": "The `I_MPI_FC` environment variable for Beluga is `ifort`."
  },
  {
    "question": "What MPI F77 compiler is specified by `I_MPI_F77` for the Beluga machine?",
    "answer": "The `I_MPI_F77` environment variable for Beluga is `ifort`."
  },
  {
    "question": "What MPI F90 compiler is specified by `I_MPI_F90` for the Beluga machine?",
    "answer": "The `I_MPI_F90` environment variable for Beluga is `ifort`."
  },
  {
    "question": "What MPI C++ compiler is specified by `I_MPI_CXX` for the Beluga machine?",
    "answer": "The `I_MPI_CXX` environment variable for Beluga is `icpc`."
  },
  {
    "question": "What is the `RLIMIT_STACK` resource limit set to for the Beluga machine?",
    "answer": "The `RLIMIT_STACK` resource limit for Beluga is `300000000`."
  },
  {
    "question": "What is the machine name (MACH) for the Graham cluster configuration?",
    "answer": "The machine name (MACH) for the Graham cluster configuration is \"graham\"."
  },
  {
    "question": "What is the description (DESC) provided for the Graham machine?",
    "answer": "The description for the Graham machine points to `https://docs.alliancecan.ca/wiki/Graham`."
  },
  {
    "question": "What is the node name regular expression (`NODENAME_REGEX`) for the Graham machine?",
    "answer": "The `NODENAME_REGEX` for Graham is `gra.*`."
  },
  {
    "question": "What operating system (OS) is specified for the Graham machine?",
    "answer": "The operating system specified for Graham is `LINUX`."
  },
  {
    "question": "What compilers are supported on the Graham machine?",
    "answer": "The supported compilers on Graham are `intel,gnu`."
  },
  {
    "question": "What MPI libraries are used on the Graham machine?",
    "answer": "The MPI libraries used on Graham are `openmpi`."
  },
  {
    "question": "What is the placeholder value for `PROJECT` in the Graham machine configuration?",
    "answer": "The placeholder for `PROJECT` in Graham's configuration is `def-EDIT_THIS`."
  },
  {
    "question": "What is the placeholder value for `CHARGE_ACCOUNT` in the Graham machine configuration?",
    "answer": "The placeholder for `CHARGE_ACCOUNT` in Graham's configuration is `def-EDIT_THIS`."
  },
  {
    "question": "What is the `CIME_OUTPUT_ROOT` directory for the Graham machine?",
    "answer": "The `CIME_OUTPUT_ROOT` for Graham is `/scratch/$USER/cesm/output`."
  },
  {
    "question": "What is the `DIN_LOC_ROOT` (input data location root) for the Graham machine?",
    "answer": "The `DIN_LOC_ROOT` for Graham is `/scratch/$USER/cesm/inputdata`."
  },
  {
    "question": "What is the `DIN_LOC_ROOT_CLMFORC` for the Graham machine?",
    "answer": "The `DIN_LOC_ROOT_CLMFORC` for Graham is `${DIN_LOC_ROOT}/atm/datm7`."
  },
  {
    "question": "What is the `DOUT_S_ROOT` (archive case output root) for the Graham machine?",
    "answer": "The `DOUT_S_ROOT` for Graham is `$CIME_OUTPUT_ROOT/archive/case`."
  },
  {
    "question": "What is the `GMAKE` command specified for the Graham machine?",
    "answer": "The `GMAKE` command for Graham is `make`."
  },
  {
    "question": "What is the `GMAKE_J` value for the Graham machine?",
    "answer": "The `GMAKE_J` value for Graham is `8`."
  },
  {
    "question": "What batch system is configured for the Graham machine?",
    "answer": "The batch system configured for Graham is `slurm`."
  },
  {
    "question": "Who is listed as providing support for the Graham machine?",
    "answer": "The Graham machine is supported by `support@tech.alliancecan.ca`."
  },
  {
    "question": "What is the `MAX_TASKS_PER_NODE` for the Graham machine?",
    "answer": "The `MAX_TASKS_PER_NODE` for Graham is `44`."
  },
  {
    "question": "What is the `MAX_MPITASKS_PER_NODE` for the Graham machine?",
    "answer": "The `MAX_MPITASKS_PER_NODE` for Graham is `44`."
  },
  {
    "question": "Is `PROJECT_REQUIRED` set to true for the Graham machine?",
    "answer": "Yes, `PROJECT_REQUIRED` is set to `TRUE` for the Graham machine."
  },
  {
    "question": "What is the executable for `mpirun` when using `openmpi` on Graham?",
    "answer": "The `mpirun` executable for `openmpi` on Graham is `mpirun`."
  },
  {
    "question": "What argument is passed to `mpirun` for the number of tasks (`anum_tasks`) on Graham?",
    "answer": "The argument `-np {{ total_tasks }}` is passed to `mpirun` for `anum_tasks` on Graham."
  },
  {
    "question": "What type of `module_system` is configured for Graham?",
    "answer": "The `module_system` configured for Graham is of type `module`."
  },
  {
    "question": "What is the Perl `init_path` for the module system on Graham?",
    "answer": "The Perl `init_path` for Graham's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/perl`."
  },
  {
    "question": "What is the Python `init_path` for the module system on Graham?",
    "answer": "The Python `init_path` for Graham's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/env_modules_python.py`."
  },
  {
    "question": "What is the CSH `init_path` for the module system on Graham?",
    "answer": "The CSH `init_path` for Graham's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/csh`."
  },
  {
    "question": "What is the SH `init_path` for the module system on Graham?",
    "answer": "The SH `init_path` for Graham's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/sh`."
  },
  {
    "question": "What command is used to purge modules on Graham?",
    "answer": "The command `purge` is used to purge modules on Graham."
  },
  {
    "question": "What is the standard environment module loaded on Graham?",
    "answer": "The `StdEnv/2023` module is loaded as the standard environment on Graham."
  },
  {
    "question": "What modules are loaded when using the Intel compiler on Graham?",
    "answer": "When using the Intel compiler on Graham, the `intel/2023.2.1`, `git-annex/10.20231129`, and `cmake/3.27.7` modules are loaded."
  },
  {
    "question": "What modules are loaded when using OpenMPI on Graham?",
    "answer": "When using OpenMPI on Graham, the `openmpi/4.1.5`, `hdf5-mpi/1.14.2`, `netcdf-c++4-mpi/4.3.1`, `netcdf-fortran-mpi/4.6.1`, `netcdf-mpi/4.9.2`, `xml-libxml/2.0208`, and `flexiblas/3.3.1` modules are loaded."
  },
  {
    "question": "What is the `NETCDF_PATH` environment variable set to for Graham?",
    "answer": "The `NETCDF_PATH` for Graham is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/pnetcdf/1.12.3`."
  },
  {
    "question": "What is the `NETCDF_FORTRAN_PATH` environment variable set to for Graham?",
    "answer": "The `NETCDF_FORTRAN_PATH` for Graham is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/netcdf-fortran-mpi/4.6.1/`."
  },
  {
    "question": "What is the `NETCDF_C_PATH` environment variable set to for Graham?",
    "answer": "The `NETCDF_C_PATH` for Graham is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/netcdf-c++4-mpi/4.3.1/`."
  },
  {
    "question": "What is the `NETLIB_LAPACK_PATH` environment variable set to for Graham?",
    "answer": "The `NETLIB_LAPACK_PATH` for Graham is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v3/Core/imkl/2023.2.0/mkl/2023.2.0/`."
  },
  {
    "question": "What is the `OMP_STACKSIZE` environment variable set to for Graham?",
    "answer": "The `OMP_STACKSIZE` for Graham is `256M`."
  },
  {
    "question": "What MPI C compiler is specified by `I_MPI_CC` for Graham?",
    "answer": "The `I_MPI_CC` environment variable for Graham is `icc`."
  },
  {
    "question": "What MPI Fortran compiler is specified by `I_MPI_FC` for Graham?",
    "answer": "The `I_MPI_FC` environment variable for Graham is `ifort`."
  },
  {
    "question": "What MPI F77 compiler is specified by `I_MPI_F77` for Graham?",
    "answer": "The `I_MPI_F77` environment variable for Graham is `ifort`."
  },
  {
    "question": "What MPI F90 compiler is specified by `I_MPI_F90` for Graham?",
    "answer": "The `I_MPI_F90` environment variable for Graham is `ifort`."
  },
  {
    "question": "What MPI C++ compiler is specified by `I_MPI_CXX` for Graham?",
    "answer": "The `I_MPI_CXX` environment variable for Graham is `icpc`."
  },
  {
    "question": "What is the `RLIMIT_STACK` resource limit set to for Graham?",
    "answer": "The `RLIMIT_STACK` resource limit for Graham is `300000000`."
  },
  {
    "question": "What specific note is mentioned about the Narval configuration regarding Intel dependencies and AMD processors?",
    "answer": "The Narval configuration note states that despite Intel software dependencies, the configuration works on Narval's AMD processors."
  },
  {
    "question": "What is the machine name (MACH) for the Narval cluster configuration?",
    "answer": "The machine name (MACH) for the Narval cluster configuration is \"narval\"."
  },
  {
    "question": "What is the description (DESC) provided for the Narval machine?",
    "answer": "The description for the Narval machine points to `https://docs.alliancecan.ca/wiki/Narval/en`."
  },
  {
    "question": "What is the node name regular expression (`NODENAME_REGEX`) for the Narval machine?",
    "answer": "The `NODENAME_REGEX` for Narval is `n[acgl].*.narval.calcul.quebec`."
  },
  {
    "question": "What operating system (OS) is specified for the Narval machine?",
    "answer": "The operating system specified for Narval is `LINUX`."
  },
  {
    "question": "What compilers are supported on the Narval machine?",
    "answer": "The supported compilers on Narval are `intel,gnu`."
  },
  {
    "question": "What MPI libraries are used on the Narval machine?",
    "answer": "The MPI libraries used on Narval are `openmpi`."
  },
  {
    "question": "What is the placeholder value for `PROJECT` in the Narval machine configuration?",
    "answer": "The placeholder for `PROJECT` in Narval's configuration is `def-EDIT_THIS`."
  },
  {
    "question": "What is the placeholder value for `CHARGE_ACCOUNT` in the Narval machine configuration?",
    "answer": "The placeholder for `CHARGE_ACCOUNT` in Narval's configuration is `def-EDIT_THIS`."
  },
  {
    "question": "What is the `CIME_OUTPUT_ROOT` directory for the Narval machine?",
    "answer": "The `CIME_OUTPUT_ROOT` for Narval is `/scratch/$USER/cesm/output`."
  },
  {
    "question": "What is the `DIN_LOC_ROOT` (input data location root) for the Narval machine?",
    "answer": "The `DIN_LOC_ROOT` for Narval is `/scratch/$USER/cesm/inputdata`."
  },
  {
    "question": "What is the `DIN_LOC_ROOT_CLMFORC` for the Narval machine?",
    "answer": "The `DIN_LOC_ROOT_CLMFORC` for Narval is `${DIN_LOC_ROOT}/atm/datm7`."
  },
  {
    "question": "What is the `DOUT_S_ROOT` (archive case output root) for the Narval machine?",
    "answer": "The `DOUT_S_ROOT` for Narval is `$CIME_OUTPUT_ROOT/archive/case`."
  },
  {
    "question": "What is the `GMAKE` command specified for the Narval machine?",
    "answer": "The `GMAKE` command for Narval is `make`."
  },
  {
    "question": "What is the `GMAKE_J` value for the Narval machine?",
    "answer": "The `GMAKE_J` value for Narval is `8`."
  },
  {
    "question": "What batch system is configured for the Narval machine?",
    "answer": "The batch system configured for Narval is `slurm`."
  },
  {
    "question": "Who is listed as providing support for the Narval machine?",
    "answer": "The Narval machine is supported by `support@tech.alliancecan.ca`."
  },
  {
    "question": "What is the `MAX_TASKS_PER_NODE` for the Narval machine?",
    "answer": "The `MAX_TASKS_PER_NODE` for Narval is `64`."
  },
  {
    "question": "What is the `MAX_MPITASKS_PER_NODE` for the Narval machine?",
    "answer": "The `MAX_MPITASKS_PER_NODE` for Narval is `64`."
  },
  {
    "question": "Is `PROJECT_REQUIRED` set to true for the Narval machine?",
    "answer": "Yes, `PROJECT_REQUIRED` is set to `TRUE` for the Narval machine."
  },
  {
    "question": "What is the executable for `mpirun` when using `openmpi` on Narval?",
    "answer": "The `mpirun` executable for `openmpi` on Narval is `mpirun`."
  },
  {
    "question": "What argument is passed to `mpirun` for the number of tasks (`anum_tasks`) on Narval?",
    "answer": "The argument `-np {{ total_tasks }}` is passed to `mpirun` for `anum_tasks` on Narval."
  },
  {
    "question": "What type of `module_system` is configured for Narval?",
    "answer": "The `module_system` configured for Narval is of type `module`."
  },
  {
    "question": "What is the Perl `init_path` for the module system on Narval?",
    "answer": "The Perl `init_path` for Narval's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/perl`."
  },
  {
    "question": "What is the Python `init_path` for the module system on Narval?",
    "answer": "The Python `init_path` for Narval's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/env_modules_python.py`."
  },
  {
    "question": "What is the CSH `init_path` for the module system on Narval?",
    "answer": "The CSH `init_path` for Narval's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/csh`."
  },
  {
    "question": "What is the SH `init_path` for the module system on Narval?",
    "answer": "The SH `init_path` for Narval's module system is `/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/init/sh`."
  },
  {
    "question": "What command is used to purge modules on Narval?",
    "answer": "The command `purge` is used to purge modules on Narval."
  },
  {
    "question": "What is the standard environment module loaded on Narval?",
    "answer": "The `StdEnv/2023` module is loaded as the standard environment on Narval."
  },
  {
    "question": "What modules are loaded when using the Intel compiler on Narval?",
    "answer": "When using the Intel compiler on Narval, the `intel/2023.2.1`, `git-annex/10.20231129`, and `cmake/3.27.7` modules are loaded."
  },
  {
    "question": "What modules are loaded when using OpenMPI on Narval?",
    "answer": "When using OpenMPI on Narval, the `openmpi/4.1.5`, `hdf5-mpi/1.14.2`, `netcdf-c++4-mpi/4.3.1`, `netcdf-fortran-mpi/4.6.1`, `netcdf-mpi/4.9.2`, `xml-libxml/2.0208`, and `flexiblas/3.3.1` modules are loaded."
  },
  {
    "question": "What is the `NETCDF_PATH` environment variable set to for Narval?",
    "answer": "The `NETCDF_PATH` for Narval is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/pnetcdf/1.12.3`."
  },
  {
    "question": "What is the `NETCDF_FORTRAN_PATH` environment variable set to for Narval?",
    "answer": "The `NETCDF_FORTRAN_PATH` for Narval is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/netcdf-fortran-mpi/4.6.1/`."
  },
  {
    "question": "What is the `NETCDF_C_PATH` environment variable set to for Narval?",
    "answer": "The `NETCDF_C_PATH` for Narval is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v4/MPI/intel2023/openmpi4/netcdf-c++4-mpi/4.3.1/`."
  },
  {
    "question": "What is the `NETLIB_LAPACK_PATH` environment variable set to for Narval?",
    "answer": "The `NETLIB_LAPACK_PATH` for Narval is `/cvmfs/soft.computecanada.ca/easybuild/software/2023/x86-64-v3/Core/imkl/2023.2.0/mkl/2023.2.0/`."
  },
  {
    "question": "What is the `OMP_STACKSIZE` environment variable set to for Narval?",
    "answer": "The `OMP_STACKSIZE` for Narval is `256M`."
  },
  {
    "question": "What MPI C compiler is specified by `I_MPI_CC` for Narval?",
    "answer": "The `I_MPI_CC` environment variable for Narval is `icc`."
  },
  {
    "question": "What MPI Fortran compiler is specified by `I_MPI_FC` for Narval?",
    "answer": "The `I_MPI_FC` environment variable for Narval is `ifort`."
  },
  {
    "question": "What MPI F77 compiler is specified by `I_MPI_F77` for Narval?",
    "answer": "The `I_MPI_F77` environment variable for Narval is `ifort`."
  },
  {
    "question": "What MPI F90 compiler is specified by `I_MPI_F90` for Narval?",
    "answer": "The `I_MPI_F90` environment variable for Narval is `ifort`."
  },
  {
    "question": "What MPI C++ compiler is specified by `I_MPI_CXX` for Narval?",
    "answer": "The `I_MPI_CXX` environment variable for Narval is `icpc`."
  },
  {
    "question": "What is the `RLIMIT_STACK` resource limit set to for Narval?",
    "answer": "The `RLIMIT_STACK` resource limit for Narval is `300000000`."
  }
]