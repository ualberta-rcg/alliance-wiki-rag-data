[
  {
    "question": "What is a 'Job' in the context of a batch system?",
    "answer": "A job is the basic execution object managed by the batch system, representing a collection of one or more related computing processes managed as a whole."
  },
  {
    "question": "What information is included in a job description when submitted to a batch system?",
    "answer": "A job description includes a resource request, such as the amount of required memory, the duration of the job, and the number of compute cores the job will require."
  },
  {
    "question": "What are the two main types of jobs mentioned?",
    "answer": "Jobs can be either serial (running on one compute core) or parallel (running on multiple compute cores)."
  },
  {
    "question": "What is a 'Parallel job'?",
    "answer": "A parallel job is one that runs simultaneously on multiple CPU cores."
  },
  {
    "question": "How are parallel jobs classified?",
    "answer": "Parallel jobs can be classified as threaded/SMP jobs running on a single compute node and sharing the same memory space, or distributed memory jobs that can run across several compute nodes."
  },
  {
    "question": "What is a 'Serial job'?",
    "answer": "A serial job is a job that requires only one compute CPU core to run."
  },
  {
    "question": "What is meant by 'Uneven usage'?",
    "answer": "Uneven usage refers to users having inconsistent workloads with significant peaks and valleys, rather than the relatively consistent usage most schedulers are tuned to deliver over a fixed period."
  },
  {
    "question": "What should a user do if they anticipate bursty workloads or variable usage?",
    "answer": "Users should indicate anticipated bursty workloads or variable usage in their RAC application."
  },
  {
    "question": "Who should a user contact if they are having problems running jobs?",
    "answer": "If experiencing problems running jobs, users should contact Technical support."
  },
  {
    "question": "How is 'Memory per core' defined?",
    "answer": "Memory per core is the amount of memory (RAM) per CPU core."
  },
  {
    "question": "Provide an example of how 'Memory per core' is calculated.",
    "answer": "If a compute node has 2 CPUs, each with 6 cores and 24GB of installed RAM, it will have 2GB of memory per core (24GB / 12 cores = 2GB/core)."
  },
  {
    "question": "What does 'Memory per node' refer to?",
    "answer": "Memory per node refers to the total amount of installed RAM in a compute node."
  },
  {
    "question": "How is 'System memory per core' calculated?",
    "answer": "System memory per core is calculated as the amount of system memory requested by a job in GB divided by the number of CPU cores requested by the job."
  },
  {
    "question": "How is 'System memory per GPU' calculated?",
    "answer": "System memory per GPU is calculated as the amount of system memory requested by a job in GB divided by the number of GPUs requested by the job."
  },
  {
    "question": "What is a 'Disk'?",
    "answer": "A disk, hard drive, or solid-state drive is a form of permanent storage, used to hold programs, input files, and output results, unlike a computer's main memory (RAM)."
  },
  {
    "question": "What are 'Filesystems'?",
    "answer": "Filesystems are directory structures made available for use by systems in a cluster, each potentially having different performance characteristics, space availability, and intended use."
  },
  {
    "question": "What is the 'Scratch' filesystem used for?",
    "answer": "The Scratch filesystem is composed of high-performance storage available on compute nodes, primarily intended for temporary or transient files, bulk results of computations, or any material that can be easily recreated or reacquired."
  },
  {
    "question": "What happens to data on the 'Scratch' filesystem?",
    "answer": "Data may be copied to scratch and then removed once job execution is complete, and scratch storage is subject to periodic 'cleaning' or purging according to local system policies."
  },
  {
    "question": "Is 'Scratch' storage formally allocated?",
    "answer": "No, Scratch storage is not formally allocated, though it is limited by generous quotas."
  },
  {
    "question": "What is the 'Home' filesystem used for?",
    "answer": "The Home filesystem is commonly used for storing user's personal files, executable programs, job execution scripts, and relatively small input datasets."
  },
  {
    "question": "What are the characteristics of a 'home directory' within the 'Home' filesystem?",
    "answer": "A home directory is a persistent folder for each user, smaller than scratch, backed up regularly in most systems, and visible to all nodes in a given cluster."
  },
  {
    "question": "What is the 'Project' filesystem?",
    "answer": "The Project filesystem is a medium to high-performance disk also available on compute nodes, larger than home, and generally used to store frequently-used project data with minimum data churning."
  },
  {
    "question": "How is the 'Project' filesystem allocated?",
    "answer": "The Project filesystem is allocated through the RAC process."
  },
  {
    "question": "What is the 'Nearline' filesystem?",
    "answer": "The Nearline filesystem is a disk-tape hybrid storage system where data exceeding a certain size threshold is automatically migrated from disk to tape and back again upon read operations."
  },
  {
    "question": "How do users access files on 'Nearline' storage?",
    "answer": "Access to Nearline storage requires deliberate user actions, such as using Linux command-line tools (cp, mv, rsync) to place files in the designated location or transfer them from other filesystems."
  },
  {
    "question": "What are the characteristics of the tape subsystem in 'Nearline' storage?",
    "answer": "The tape subsystem has very high capacity but introduces latency when files need to be accessed again."
  },
  {
    "question": "When should 'Nearline' storage be used?",
    "answer": "Nearline storage should be used for datasets that are infrequently accessed but need to be retained for long periods, and are part of an 'active' project."
  },
  {
    "question": "How is 'Nearline' capacity managed and allocated?",
    "answer": "Nearline capacity is managed by quotas, and allocations are made via the RAC process."
  }
]