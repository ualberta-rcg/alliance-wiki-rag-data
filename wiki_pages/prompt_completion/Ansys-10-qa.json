[
  {
    "question": "What modules are required for the Fluent 'Multinode (by core + restart)' Slurm script?",
    "answer": "The script requires loading `StdEnv/2023` and `ansys/2023R2` or newer versions, applicable to beluga, cedar, graham, and narval clusters."
  },
  {
    "question": "Which Ansys and StdEnv module versions are no longer supported for Fluent in the 'Multinode (by core + restart)' script?",
    "answer": "The `StdEnv/2020` module is no longer supported, and older Ansys versions like `ansys/2019R3` (narval only) and `ansys/2021R2` (beluga, cedar, graham) are also not supported by this script."
  },
  {
    "question": "What user-defined variables must be specified in the Fluent 'Multinode (by core + restart)' Slurm script?",
    "answer": "Users must specify `MYVERSION` (e.g., '3d'), `MYJOUFILE` (journal filename), `MYJOUFILERES` (journal restart filename), `MYCASFILERES` (case restart filename), and `MYDATFILERES` (data restart filename)."
  },
  {
    "question": "How is the total number of cores (NCORES) calculated in the 'Multinode (by core + restart)' Fluent script?",
    "answer": "NCORES is calculated as the product of `SLURM_NTASKS` (total number of tasks/cores requested) and `SLURM_CPUS_PER_TASK`."
  },
  {
    "question": "What command is used to run Fluent in single-node mode for a restart step in the 'Multinode (by core + restart)' script?",
    "answer": "For a single-node restart step, the command is `fluent -g $MYVERSION -t $NCORES -affinity=0 -mpi=intel -pshmem -I $MYFILEJOURES`."
  },
  {
    "question": "What command is used to run Fluent in multi-node mode for a restart step in the 'Multinode (by core + restart)' script?",
    "answer": "For a multi-node restart step, the command is `fluent -g $MYVERSION -t $NCORES -affinity=0 -mpi=intel -pib -cnf=/tmp/machinefile-$SLURM_JOB_ID -i $MYJOUFILERES`."
  },
  {
    "question": "What happens if a Fluent job completes successfully within the 'Multinode (by core + restart)' Slurm script?",
    "answer": "If a job completes successfully, the script prints 'Job completed successfully! Exiting now.' and then calls `scancel $SLURM_ARRAY_JOB_ID` to terminate any remaining array tasks."
  },
  {
    "question": "How does the 'Multinode (by core + restart)' script prepare for a subsequent restart if the current job array task is not the last one?",
    "answer": "If the current array task is not the last one, the script creates symbolic links (`ln -sfv`) for the most recent `.cas` and `.dat` output files to `MYCASFILERES` and `MYDATFILERES` respectively, and then attempts to restart the job."
  },
  {
    "question": "What is the primary function of Fluent journal files?",
    "answer": "Fluent journal files are used to include any command from Fluent's Text-User-Interface (TUI) to change simulation parameters like temperature, pressure, and flow speed, or to automate simulation workflows."
  },
  {
    "question": "How can Fluent journal files be used to run a series of simulations under different conditions?",
    "answer": "By only changing the parameters within the journal file, users can run a series of simulations under different conditions with a single case file."
  },
  {
    "question": "What commands control the file format for Fluent journal files, and what are the implications?",
    "answer": "The command `/file/cff-files no` is used for the legacy `.cas/.dat` file format, while `/file/cff-files yes` is used for the more efficient `.cas.h5/.dat.h5` file format. This choice affects the default behavior based on the Ansys module version."
  },
  {
    "question": "What is the default file format for Fluent journal files in module versions 2019R3 or older?",
    "answer": "For Fluent module versions 2019R3 or older, the default file format for journal files is the legacy `.cas/.dat` format, controlled by `/file/cff-files no`."
  },
  {
    "question": "What is the default file format for Fluent journal files in module versions 2020R1 or newer?",
    "answer": "For Fluent module versions 2020R1 or newer, the default file format for journal files is the more efficient `.cas.h5/.dat.h5` format, controlled by `/file/cff-files yes`."
  }
]