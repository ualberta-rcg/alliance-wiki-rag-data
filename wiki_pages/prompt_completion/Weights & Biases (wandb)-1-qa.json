[
  {
    "question": "What is Weights & Biases (wandb)?",
    "answer": "Weights & Biases (wandb) is a meta machine learning platform designed to help AI practitioners and teams build reliable machine learning models for real-world applications by streamlining the machine learning model lifecycle."
  },
  {
    "question": "What functionalities does wandb offer for machine learning experiments?",
    "answer": "By using wandb, you can track, compare, explain, and reproduce machine learning experiments."
  },
  {
    "question": "What are the requirements for full usage of wandb on compute nodes?",
    "answer": "Full usage of wandb on compute nodes requires internet access as well as access to Google Cloud Storage."
  },
  {
    "question": "Which Alliance clusters have limited wandb availability?",
    "answer": "B\u00e9luga, Narval, and TamIA clusters have limited wandb availability, accessible only to users from MILA and other eligible groups via `httpproxy`."
  },
  {
    "question": "Is wandb fully available on the Cedar cluster?",
    "answer": "Yes, wandb is fully available on the Cedar cluster, and `httpproxy` is not required."
  },
  {
    "question": "Why is wandb not available on the Graham cluster?",
    "answer": "Wandb is not available on the Graham cluster because internet access is disabled on its compute nodes."
  },
  {
    "question": "Which clusters support wandb usage without requiring the `httpproxy` module?",
    "answer": "Cedar and Vulcan clusters support wandb usage without `httpproxy`."
  },
  {
    "question": "How can members of the MILA Qu\u00e9bec AI Institute use wandb on Alliance clusters?",
    "answer": "Members of the MILA Qu\u00e9bec AI Institute may use wandb on any clusters with internet access, provided they use a valid 'Mila-org' Weights & Biases account."
  },
  {
    "question": "What issues arise when using wandb on B\u00e9luga, Narval, and TamIA for uploading environment data or artifacts?",
    "answer": "The wandb package will attempt to upload environment information to a Google Cloud Storage bucket, which is not allowed on these clusters, leading to a job crash or freeze. Uploading artifacts with `wandb.save()` also causes issues."
  },
  {
    "question": "Can the automatic upload behavior to Google Cloud Storage be disabled for wandb on B\u00e9luga, Narval, and TamIA?",
    "answer": "No, it is not currently possible to disable this behavior."
  },
  {
    "question": "How can users effectively use wandb on B\u00e9luga, Narval, and TamIA clusters despite the restrictions?",
    "answer": "Users can still use wandb by enabling the `offline` mode."
  },
  {
    "question": "What happens when wandb is run in `offline` mode?",
    "answer": "In `offline` mode, wandb writes all metrics, logs, and artifacts to the local disk and does not attempt to sync anything to the Weights & Biases service on the internet."
  },
  {
    "question": "How do you sync data from an offline wandb run to the online service after a job completes?",
    "answer": "After your jobs finish running, you can sync their wandb content to the online service by running the command `wandb sync` on the login node."
  },
  {
    "question": "What is an alternative to Weights & Biases that works on B\u00e9luga, Narval, and TamIA?",
    "answer": "Comet.ml is a product very similar to Weights & Biases, and it works on B\u00e9luga, Narval, and TamIA."
  },
  {
    "question": "What is the recommended number of CPUs for a Slurm job using wandb?",
    "answer": "At least two CPUs per task are recommended: one for the main process and one for the wandb process."
  },
  {
    "question": "How do you install wandb into a virtual environment within a Slurm job script?",
    "answer": "You would load the python module, create a virtual environment with `virtualenv --no-download $SLURM_TMPDIR/env`, activate it, and then install wandb using `pip install --no-index wandb`."
  },
  {
    "question": "What command is used to enable offline mode for wandb in a shell script?",
    "answer": "The command `wandb offline` is used to enable offline mode."
  },
  {
    "question": "How is wandb initialized in a Python script for a project, ensuring a 'fork' start method?",
    "answer": "It is initialized with `wandb.init(project=\"wandb-pytorch-test\", settings=wandb.Settings(start_method=\"fork\"))`."
  },
  {
    "question": "What is the command to sync all locally stored offline wandb runs to the server?",
    "answer": "The command `wandb sync ./wandb/offline-run*` can be used on the login node to sync all runs."
  }
]