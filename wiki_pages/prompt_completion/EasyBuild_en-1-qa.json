[
  {
    "question": "What is EasyBuild?",
    "answer": "EasyBuild is a tool designed for building, installing, and maintaining software on high-performance computing systems."
  },
  {
    "question": "Where is EasyBuild used for building software?",
    "answer": "EasyBuild is used to build almost all software in the CVMFS software repository."
  },
  {
    "question": "What is a key feature of EasyBuild regarding software availability?",
    "answer": "A key feature of EasyBuild is its automatic generation of environment modules, which make software packages available in a user's session."
  },
  {
    "question": "Which standard Linux environment variables does EasyBuild define in modules?",
    "answer": "EasyBuild defines standard Linux environment variables such as PATH, CPATH, and LIBRARY_PATH."
  },
  {
    "question": "What are the two EasyBuild-specific environment variables that are particularly interesting to users?",
    "answer": "The two EasyBuild-specific environment variables are `EBROOT<name>` and `EBVERSION<name>`."
  },
  {
    "question": "What does the `EBROOT<name>` environment variable contain?",
    "answer": "The `EBROOT<name>` environment variable contains the full path to the installation location of the software `<name>`."
  },
  {
    "question": "What does the `EBVERSION<name>` environment variable contain?",
    "answer": "The `EBVERSION<name>` environment variable contains the full version of the software `<name>` loaded by the module."
  },
  {
    "question": "What is the value of `EBROOTPYTHON` for the `python/3.10.2` module on Narval?",
    "answer": "For the `python/3.10.2` module on Narval, `EBROOTPYTHON` is `/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.10.2`."
  },
  {
    "question": "What is the value of `EBVERSIONPYTHON` for the `python/3.10.2` module?",
    "answer": "For the `python/3.10.2` module, `EBVERSIONPYTHON` is `3.10.2`."
  },
  {
    "question": "How can you view the EasyBuild-specific environment variables defined by a module like `python/3.10.2`?",
    "answer": "You can view them using the command: `module show python/3.10.2 | grep EB`."
  },
  {
    "question": "Where does EasyBuild store installation recipes and logs?",
    "answer": "EasyBuild keeps a copy of the installation recipe and a detailed log inside the software's installation directory, specifically in the `$EBROOT<name>/easybuild` directory."
  },
  {
    "question": "What files would be found in the easybuild directory for `python/3.10.2`?",
    "answer": "For the `python/3.10.2` module, files such as `$EBROOTPYTHON/easybuild/Python-3.10.2.eb` (the recipe) and `$EBROOTPYTHON/easybuild/easybuild-Python-3.10.2-*.log` (the log file) would be found."
  },
  {
    "question": "Is it generally recommended to install software using EasyBuild in your own account?",
    "answer": "In most cases, it is preferable to ask technical support to install software centrally, rather than using EasyBuild in your own account."
  },
  {
    "question": "What are the benefits of having software installed centrally instead of in a user's own account?",
    "answer": "Central installation ensures software availability on all clusters, avoids using a user's quota, and prevents undue load on parallel filesystems."
  },
  {
    "question": "Under what circumstances might a user want to install software with EasyBuild in their own account?",
    "answer": "A user might want to install software in their own space if they need a custom/modified build, a nightly build or a version without a release number, or if central installation is not allowed due to licensing reasons (e.g., VASP, Materials Studio)."
  },
  {
    "question": "When should a user NOT install software packages in their own space using EasyBuild?",
    "answer": "A user should NOT install software in their own space if they need a different release version of a centrally available package, or if they need a software package built with a different compiler, MPI, or CUDA implementation."
  },
  {
    "question": "What should a user do if they are unsure about installing software in their own account?",
    "answer": "When in doubt, users should ask technical support for advice."
  },
  {
    "question": "What is an EasyBuild recipe also known as?",
    "answer": "An EasyBuild recipe is also known as an EasyConfig file."
  },
  {
    "question": "What kind of information do EasyBuild recipes contain?",
    "answer": "Recipes are text files that contain the information EasyBuild needs to build a particular piece of software in a specific environment."
  },
  {
    "question": "What is the naming convention for EasyBuild recipe files?",
    "answer": "EasyBuild recipe files are named following the convention: `<name>-<version>-<toolchain name>-<toolchain version>.eb`."
  },
  {
    "question": "Where can users find EasyBuild recipes that are known to work?",
    "answer": "The surest way to find a working recipe is to start from one of the recipes that have already been installed, which can be found in the installation folder or in the `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO` folder."
  }
]