[
  {
    "question": "How can performance be improved in GROMACS once Domain Decomposition with MPI processes reaches its scaling limit?",
    "answer": "Performance can be further improved by using OpenMP threads to spread the work of an MPI process over more than one CPU core."
  },
  {
    "question": "How do you enable OpenMP threads for GROMACS jobs using Slurm?",
    "answer": "Use Slurm's `--cpus-per-task` parameter in the job script (for both `#SBATCH` and `srun`) and either set the `OMP_NUM_THREADS` variable using `export OMP_NUM_THREADS=\"${SLURM_CPUS_PER_TASK:-1}\"` or use the `mdrun` parameter `-ntomp ${SLURM_CPUS_PER_TASK:-1}`."
  },
  {
    "question": "What is the recommended number of OpenMP threads per MPI process for GROMACS?",
    "answer": "According to GROMACS developers, the optimum is usually between 2 and 6 OpenMP threads per MPI process (cpus-per-task)."
  },
  {
    "question": "How should `ntasks-per-node` and `cpus-per-task` be configured for non-PME GROMACS systems?",
    "answer": "For systems that don't use PME, you can choose 2 or 4 `ntasks-per-node` and set `cpus-per-task` to a value such that `ntasks-per-node * cpus-per-task` matches the number of CPU cores in a compute node."
  },
  {
    "question": "How does GROMACS compute the real-space portion of short-range, non-bonded interactions?",
    "answer": "GROMACS uses optimized kernel functions available for various SIMD instruction sets like AVX, AVX2, and AVX512."
  },
  {
    "question": "When are GROMACS kernel functions for SIMD instruction sets chosen?",
    "answer": "Kernel functions are chosen during GROMACS compilation and should match the capabilities of the CPUs used for simulations."
  },
  {
    "question": "What information does GROMACS provide in its log file regarding CPU architecture?",
    "answer": "GROMACS reports what SIMD instruction set it supports in its log file and will warn if the selected kernel function is suboptimal."
  },
  {
    "question": "What kind of tools does GROMACS offer for post-processing and analysis?",
    "answer": "GROMACS contains a large number of tools for common tasks of post-processing and analysis."
  },
  {
    "question": "Where can users find documentation for GROMACS analysis commands?",
    "answer": "The GROMACS manual contains a list of available commands organized by topic and by name."
  },
  {
    "question": "What types of files do GROMACS analysis commands typically read?",
    "answer": "These commands typically read trajectory files (in XTC, TNG or TRR format) and coordinate files (GRO, PDB, TPR, etc.)."
  },
  {
    "question": "What format do GROMACS analysis commands use for writing plots?",
    "answer": "GROMACS analysis commands write plots in the XVG format."
  },
  {
    "question": "Which plotting tool can utilize GROMACS' XVG files?",
    "answer": "The plotting tool Grace (command `xmgrace`) can use XVG files as input."
  },
  {
    "question": "What is VMD?",
    "answer": "VMD is a molecular visualization program designed for displaying, animating, and analyzing large biomolecular systems using 3-D graphics and built-in scripting."
  },
  {
    "question": "Can VMD be used for analysis beyond visualization?",
    "answer": "Yes, VMD also offers a large number of built-in and external plugins for analysis and can be used in command line mode."
  },
  {
    "question": "Which Python packages are available for GROMACS trajectory analysis?",
    "answer": "MDAnalysis and MDTraj are two Python packages provided as precompiled Python wheels for GROMACS trajectory analysis."
  },
  {
    "question": "What are the capabilities of MDAnalysis and MDTraj?",
    "answer": "They can read and write trajectory and coordinate files of GROMACS (TRR and XTC) and many other MD packages, and they include a variety of commonly used analysis functions."
  },
  {
    "question": "Can MDAnalysis read GROMACS TPR files?",
    "answer": "MDAnalysis can read topology information from GROMACS TPR files, though often not those created by the latest versions of GROMACS."
  }
]