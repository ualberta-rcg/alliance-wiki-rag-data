[
  {
    "question": "How do you create model checkpoints when training with Keras in TensorFlow?",
    "answer": "To create checkpoints with Keras, you should use the `callbacks` parameter of the `model.fit()` method, specifically using `tf.keras.callbacks.ModelCheckpoint`."
  },
  {
    "question": "Provide an example of how to configure Keras callbacks for creating checkpoints at the end of each epoch.",
    "answer": "An example configuration is: `callbacks = [tf.keras.callbacks.ModelCheckpoint(filepath='./ckpt',save_freq='epoch')]` which is then passed to `model.fit()` as `model.fit(dataset, epochs=10 , callbacks=callbacks)`."
  },
  {
    "question": "Where can users find information on creating checkpoints with a custom TensorFlow training loop?",
    "answer": "Users should refer to the official TensorFlow documentation on \"Writing Checkpoints\" for information on custom training loops."
  },
  {
    "question": "What error might occur when using the scikit-image library with TensorFlow regarding OMP?",
    "answer": "You may encounter the error: `OMP: Error #15: Initializing libiomp5.so, but found libiomp5.so already initialized.`"
  },
  {
    "question": "Why does the `OMP: Error #15` occur when scikit-image is used with TensorFlow?",
    "answer": "This error happens because the TensorFlow library tries to load a bundled version of OMP, which conflicts with the system version."
  },
  {
    "question": "How can you work around the `OMP: Error #15` when using scikit-image with TensorFlow?",
    "answer": "The workaround involves navigating to your virtual environment, setting the `LIBIOMP_PATH` by tracing `skimage.transform.AffineTransform`, and then creating symbolic links for `libiomp5.so` using `find -path '*_solib_local*' -name libiomp5.so -exec ln -sf $LIBIOMP_PATH {} \\;`."
  },
  {
    "question": "What error message indicates a missing `libcupti.so` library in TensorFlow?",
    "answer": "An error message like `I tensorflow/stream_executor/dso_loader.cc:142] Couldn't open CUDA library libcupti.so.9.0. LD_LIBRARY_PATH: /usr/local/cuda-9.0/lib64` indicates that `libcupti.so` is missing."
  },
  {
    "question": "What TensorFlow features require the `libcupti.so` library?",
    "answer": "Some tracing features of TensorFlow require `libcupti.so` to be available."
  },
  {
    "question": "What is the solution for the `libcupti.so` missing library error?",
    "answer": "Before executing your script, load the appropriate CUDA module (e.g., `module load cuda/9.0.xxx`) and export `LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_HOME/extras/CUPTI/lib64/`."
  },
  {
    "question": "How can one find the appropriate CUDA version for resolving the `libcupti.so` error?",
    "answer": "The appropriate CUDA version can be found by using the command `module av cuda`."
  },
  {
    "question": "What error might occur if `libiomp5.so` is erroneously installed as a text file?",
    "answer": "You might encounter an error such as `/home/username/venv/lib/python3.6/site-packages/tensorflow/python/../../_solib_local/_U@mkl_Ulinux_S_S_Cmkl_Ulibs_Ulinux___Uexternal_Smkl_Ulinux_Slib/libiomp5.so: invalid ELF header`."
  },
  {
    "question": "How can the `libiomp5.so: invalid ELF header` error be resolved?",
    "answer": "To resolve this, access the directory mentioned in the error and execute the command `ln -sf $(cat libiomp5.so) libiomp5.so` to replace the erroneous text file with the correct symbolic link."
  },
  {
    "question": "Which configuration parameters control the number of threads used by TensorFlow?",
    "answer": "The configuration parameters `intra_op_parallelism_threads` and `inter_op_parallelism_threads` influence the number of threads used by TensorFlow."
  },
  {
    "question": "How do you set the `intra_op_parallelism_threads` and `inter_op_parallelism_threads` in TensorFlow?",
    "answer": "You can set these parameters using `tf.config.threading.set_inter_op_parallelism_threads(num_threads)` and `tf.config.threading.set_intra_op_parallelism_threads(num_threads)`."
  },
  {
    "question": "What is a known bug in Keras implementation of TensorFlow after version 2.8.3?",
    "answer": "A bug affects the performance of data augmentation layers with the prefix `tf.keras.layers.Random` after TensorFlow version 2.8.3, significantly slowing down the training process."
  },
  {
    "question": "Which specific Keras layers are affected by the performance bug after TensorFlow version 2.8.3?",
    "answer": "Layers such as `tf.keras.layers.RandomRotation` and `tf.keras.layers.RandomTranslation` are affected by the bug."
  },
  {
    "question": "What is the impact of the Keras data augmentation bug?",
    "answer": "The bug significantly slows down the training process by more than 100 times."
  },
  {
    "question": "In which TensorFlow version was the Keras data augmentation bug fixed?",
    "answer": "The bug affecting Keras data augmentation layers was fixed in TensorFlow version 2.12."
  }
]