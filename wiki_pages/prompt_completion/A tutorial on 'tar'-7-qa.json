[
  {
    "question": "How can you determine the size of a file, directory, or archive from the terminal?",
    "answer": "You can use the command `du -sh [your_file ...]` to see the size. For example, `du -sh results.tar work tests` would show the sizes of `results.tar`, `work`, and `tests`."
  },
  {
    "question": "Why would you split files or directories?",
    "answer": "You might split files or directories into smaller parts to avoid having to handle huge files, especially when transferring them."
  },
  {
    "question": "What is the command syntax for splitting a large file or tar file into smaller parts?",
    "answer": "The syntax is `split -b <Size-in-MB><file or tar-file-name><prefix-name>`. An example is `split -b 100MB results.tar small-res`."
  },
  {
    "question": "What is the purpose of the `-b` option when using the `split` command?",
    "answer": "The `-b` option is used to specify the desired size (in MB) for each of the smaller parts created by the split command."
  },
  {
    "question": "How does the `split` command name the smaller files by default?",
    "answer": "By default, the small file names will start with the specified prefix (e.g., `small-res`) followed by alphabetic suffixes, such as `small-resaa`, `small-resab`, `small-resac`, and so on."
  },
  {
    "question": "How do you recover an original file after it has been split into multiple smaller parts?",
    "answer": "To recover the original file, use the `cat` command with a wildcard for the prefixed small files, redirecting the output to your desired archive name, for example: `cat small_res* > your_archive_name.tar`."
  },
  {
    "question": "What option can be used with `split` to append numbers instead of alphabets to the names of the smaller files?",
    "answer": "To append numbers in place of alphabets, use the `-d` option with the `split` command."
  },
  {
    "question": "Which command is used to display the current working path in the terminal?",
    "answer": "The `pwd` (present work directory) command is used to see the current working path."
  },
  {
    "question": "Which command is used to list files and sub-directories?",
    "answer": "The `ls` (list) command is used to see the files and sub-directories."
  },
  {
    "question": "What is an important note regarding free space when applying `gzip` or `bzip2` commands?",
    "answer": "An important note is that applying `gzip` or `bzip2` commands requires free space to create the final compressed file. These commands will fail if there is no space left or if you are out of quota."
  },
  {
    "question": "How can users on CC clusters check if they have enough disk space or quota?",
    "answer": "On CC clusters, users can use the `quota` or `quota \u2013s` command from their terminal to see if they have enough space to write additional data."
  },
  {
    "question": "How do you apply `tar` to archive a single directory?",
    "answer": "To apply `tar` to one directory, for example named `results`, you would use the command: `tar -cvf results.tar results`."
  },
  {
    "question": "How do you apply `tar` to multiple files or directories to combine them into a single archive file?",
    "answer": "To apply `tar` to multiple files or directories, you list them after the archive name, for example: `tar -cvf your_archive.tar dir1 dir2 dir3 dir4 dir5 file1 file2 file3 file4 file5`."
  },
  {
    "question": "How can you create a `tar` archive that includes all files or directories starting with a specific letter or containing a chain of characters?",
    "answer": "You can use a wildcard with `tar`, for example, `tar -cvf your_archive.tar r*` will include all files or directories that start with the letter 'r'."
  }
]