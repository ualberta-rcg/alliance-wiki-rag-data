[
  {
    "question": "What is the primary factor determining the order of job scheduling on the clusters?",
    "answer": "The order in which jobs are considered for scheduling is determined by 'priority'."
  },
  {
    "question": "Which algorithm is used to determine job priority on the systems?",
    "answer": "Priority on our systems is determined using the Fair Tree algorithm."
  },
  {
    "question": "What is a Resource Allocation Project (RAP) in the context of job submission?",
    "answer": "Each job is charged to a Resource Allocation Project (RAP), which might hold a grant of CPU or GPU time."
  },
  {
    "question": "How do you specify the project when submitting a job?",
    "answer": "You specify the project with the `--account` argument to `sbatch`."
  },
  {
    "question": "What are the typical prefixes for account codes belonging to Resource Allocation Competition (RAC) projects?",
    "answer": "Account codes for Resource Allocation Competition (RAC) projects will probably begin with `rrg-` or `rpp-`."
  },
  {
    "question": "What are the typical prefixes for account codes belonging to non-RAC (Rapid Access Service) projects?",
    "answer": "Account codes for non-RAC projects, also known as Rapid Access Service projects, will probably begin with `def-`."
  },
  {
    "question": "How are target usage levels set for RAC projects?",
    "answer": "RAC projects have target levels determined by the number of CPU-years or GPU-years granted with each RAC award."
  },
  {
    "question": "How are target usage levels set for non-RAC projects?",
    "answer": "Non-RAC projects (`def-` accounts) all have equal target levels, and that equal value is adjusted every few minutes based on the number of projects that are active on the cluster."
  },
  {
    "question": "What command can be used to examine a research group's usage and share information?",
    "answer": "The `sshare` command can be used to examine a group's usage and share information."
  },
  {
    "question": "What suffix must be added to the account code when using the `sshare` command?",
    "answer": "You must append `_cpu` or `_gpu` to the end of the account code, as appropriate, since CPU and GPU use are tracked separately."
  },
  {
    "question": "Which part of the `sshare` output is most critical for project-level scheduling decisions?",
    "answer": "The first line of the `sshare` output, which does not include a user name and describes the status of the project relative to all other projects using the cluster, is most important for scheduling."
  },
  {
    "question": "What does a high `LevelFS` value for a project indicate regarding job priority?",
    "answer": "If a project uses less than its target usage, its `LevelFS` will be greater than 1.0, and new jobs will enjoy high priority."
  },
  {
    "question": "What does a `LevelFS` value below 1.0 for a project indicate regarding job priority?",
    "answer": "If a project uses more than its target usage, its `LevelFS` will be below 1.0, and the priority of new jobs belonging to that project will also be low."
  },
  {
    "question": "How does a user's fairshare within a group impact the group's overall priority compared to other research groups?",
    "answer": "The priority of jobs belonging to a group as compared to the priority of jobs belonging to other research groups is determined solely by the group\u2019s fairshare and not the users' fairshare within the group."
  },
  {
    "question": "In Slurm documentation, what is an 'association'?",
    "answer": "The project by itself, or the user within a project, is referred to as an 'association' in the Slurm documentation."
  },
  {
    "question": "What does `RawShares` represent for RAC projects in `sshare` output?",
    "answer": "`RawShares` is proportional to the number of CPU-years that was granted to the project for use on this cluster in the Resource Allocation Competition."
  },
  {
    "question": "What value do inactive accounts receive for `RawShares`?",
    "answer": "For numeric reasons, inactive accounts (which do not have pending or running jobs) are given only one share for `RawShares`."
  },
  {
    "question": "What is `NormShares` in the `sshare` output?",
    "answer": "`NormShares` is the number of shares assigned to the user or account divided by the total number of assigned shares within the level, representing a fraction of shares relative to others at that level."
  },
  {
    "question": "How is `RawUsage` calculated, and how does past usage influence it?",
    "answer": "`RawUsage` is calculated from the total number of resource-seconds (CPU time, GPU time, and memory) charged to an account. Past usage is discounted with a half-life of one week, so usage more than a few weeks in the past has only a small effect on priority."
  },
  {
    "question": "What does `EffectvUsage` indicate?",
    "answer": "`EffectvUsage` is the association's usage normalized with its parent; for example, the project's usage relative to other projects, or a user's usage relative to other users in that project."
  },
  {
    "question": "How is `LevelFS` calculated?",
    "answer": "`LevelFS` is calculated as `NormShares / EffectvUsage`."
  },
  {
    "question": "What does a `LevelFS` value between 0 and 1 signify?",
    "answer": "If an association is over-served, its `LevelFS` value is between 0 and 1."
  },
  {
    "question": "What does a `LevelFS` value greater than 1 signify?",
    "answer": "If an association is under-served, its `LevelFS` value is greater than 1."
  },
  {
    "question": "What `LevelFS` value is given to associations with no usage?",
    "answer": "Associations with no usage receive the highest possible `LevelFS` value, which is infinity."
  },
  {
    "question": "What does a `LevelFS` near 1.0 indicate for a project?",
    "answer": "A project which consistently uses its target amount will have a `LevelFS` near 1.0."
  }
]