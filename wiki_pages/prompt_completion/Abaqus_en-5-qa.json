[
  {
    "question": "How do you specify to write restart data for a total of 12 time increments in an Abaqus explicit analysis input file?",
    "answer": "To write restart data for a total of 12 time increments in the input file, specify `*RESTART, WRITE, OVERLAY, NUMBER INTERVAL=12, TIME MARKS=NO`."
  },
  {
    "question": "How can you check for completed restart information in Abaqus explicit analysis output files?",
    "answer": "You can check for completed restart information in relevant output files by running `egrep -i \"step|restart\" testet*.com testet*.msg testet*.sta`."
  },
  {
    "question": "Are input file modifications required to restart an explicit analysis using the temporary directory restart script?",
    "answer": "No, input file modifications are not required to restart the analysis when using the temporary directory restart script for explicit analysis."
  },
  {
    "question": "What Slurm directives are used in the temporary directory restart script for explicit analysis?",
    "answer": "The Slurm directives in the temporary directory restart script for explicit analysis are `#SBATCH --account=def-group`, `#SBATCH --time=00-06:00`, `#SBATCH --mem=8000M`, `#SBATCH --cpus-per-task=4`, and `#SBATCH --nodes=1`."
  },
  {
    "question": "What is the Abaqus command used in the temporary directory restart script for explicit analysis?",
    "answer": "The Abaqus command used is `abaqus job=testet2 input=$SLURM_SUBMIT_DIR/myexp-sim.inp recover scratch=$SLURM_TMPDIR cpus=$SLURM_CPUS_ON_NODE interactive mp_mode=threads memory=\"$((${SLURM_MEM_PER_NODE}-3072))MB\"`."
  },
  {
    "question": "What environment variable is set for MPI in the multiple node explicit analysis script?",
    "answer": "The environment variable `I_MPI_HYDRA_TOPOLIB=ipl` is set for MPI in the multiple node explicit analysis script, especially when using abaqus/2021."
  },
  {
    "question": "How is the `mp_host_list` generated and exported in the multiple node explicit analysis script?",
    "answer": "The `mp_host_list` is generated by processing the output of `slurm_hl2hl.py --format MPIHOSTLIST`, then formatted into a Python-like list string, exported as an environment variable, and echoed into `abaqus_v6.env`."
  },
  {
    "question": "How can you estimate the total Slurm node memory required for a simulation?",
    "answer": "The total Slurm node memory (`--mem=`) required can be estimated by examining the Abaqus output `test.dat` file, specifically the 'MEMORY TO MINIMIZE I/O' (MRMIO) value, or by monitoring memory consumption interactively using `ps` or `top` commands."
  },
  {
    "question": "What is the command to obtain a Slurm allocation for interactive memory monitoring?",
    "answer": "To obtain a Slurm allocation for interactive memory monitoring, use the command: `salloc --time=0:30:00 --cpus-per-task=8 --mem=64G --account=def-piname`."
  },
  {
    "question": "How do you monitor memory consumption using `top` on a compute node after getting an salloc allocation?",
    "answer": "First, SSH into the cluster, then SSH into the compute node reserved by salloc (e.g., `ssh gra100`), and finally run `top -u $USER` to watch the VIRT and RES columns."
  },
  {
    "question": "What is the significance of 'MEMORY TO MINIMIZE I/O' (MRMIO) in Abaqus memory estimates?",
    "answer": "To completely satisfy the recommended MRMIO value, at least the same amount of non-swapped physical memory (RES) must be available to Abaqus to minimize I/O operations and avoid virtualization to scratch disk."
  },
  {
    "question": "Why is it necessary to slightly over-allocate the requested Slurm node memory (`--mem=`)?",
    "answer": "It's necessary to slightly over-allocate the requested Slurm node memory because the Resident Set Size (RES) will generally be less than the Virtual Memory (VIRT) by a relatively constant amount for a given simulation."
  },
  {
    "question": "What happens if the RES memory available to Abaqus drops below the MINIMUM MEMORY REQUIRED (MMR)?",
    "answer": "If the RES memory available to Abaqus drops below the MINIMUM MEMORY REQUIRED (MMR), Abaqus will exit due to an Out of Memory (OOM) error."
  },
  {
    "question": "How can you investigate the performance impact of reducing RES memory when MRMIO is large?",
    "answer": "You can investigate by lowering the `#SBATCH --mem=` value in the Slurm script and running a series of short test jobs (e.g., with `8G, 16G, 32G, 64G` for a 96GB MRMIO) to find an acceptable minimal performance impact, noting that smaller values increase scratch space usage."
  },
  {
    "question": "How is the `mem-per-cpu` value roughly determined for multi-node Slurm scripts if `mp_host_split` is not specified or set to 1?",
    "answer": "If `mp_host_split` is not specified or set to 1, the `mem-per-cpu` value can be roughly determined by multiplying the largest memory estimate (per compute process from the output dat file) by the number of nodes, and then dividing by the number of `ntasks`."
  },
  {
    "question": "What is the constraint on `mp_host_split` for multi-process Abaqus jobs?",
    "answer": "The `mp_host_split` value must be less than or equal to the number of cores per node assigned by Slurm at runtime, otherwise Abaqus will terminate."
  },
  {
    "question": "Where can users find more details about the upper limit of memory that can be allocated by Abaqus?",
    "answer": "More details about the upper limit of memory that can be allocated by Abaqus can be found in the \"ABAQUS ANALYSIS USER'S MANUAL\"."
  },
  {
    "question": "How does the 'MEMORY' parameter relate to actual memory usage and scratch disk usage in Abaqus?",
    "answer": "If the `MEMORY` parameter (upper limit) is greater than 'MEMORY TO MINIMIZE I/O', actual memory usage will be close to the latter, and scratch disk usage will be near zero. Otherwise, actual memory usage will be close to the `MEMORY` limit, and scratch disk usage will be roughly proportional to the difference between 'MEMORY TO MINIMIZE I/O' and the `MEMORY` limit."
  },
  {
    "question": "How can Abaqus be run interactively in graphical mode on a cluster using VNC?",
    "answer": "On a cluster, connect to a compute node with TigerVNC, open a terminal, load modules `StdEnv/2020` and `abaqus/2021`, then start Abaqus with `abaqus cae -mesa`."
  },
  {
    "question": "What is the URL to connect to for running Abaqus interactively in GUI desktop via On Demand?",
    "answer": "Users should connect to `ondemand.sharcnet.ca` from their laptop browser."
  },
  {
    "question": "What modules should be loaded before starting Abaqus CAE in graphical mode on On Demand?",
    "answer": "Load `module load StdEnv/2020` and `module load abaqus/2021` before starting Abaqus CAE."
  },
  {
    "question": "How do you start the Abaqus application in graphical mode using the On Demand system?",
    "answer": "After loading the necessary modules, start the application with `abaqus cae`."
  },
  {
    "question": "What is an important note regarding gra-vdi for Abaqus graphical use?",
    "answer": "Gra-vdi will be permanently shut down soon, and users should switch to the new Ondemand system for graphical use."
  },
  {
    "question": "What causes an Abaqus CAE error \"No socket connection to license server manager\"?",
    "answer": "This error occurs if there are no free CAE licenses available, meaning all issued licenses are currently in use."
  },
  {
    "question": "How many CAE licenses are issued on the SHARCNET license?",
    "answer": "The SHARCNET license issues a total of 4 CAE licenses, with 2 free and 2 reserved."
  }
]