[
  {
    "question": "What is the primary function of Fluent journal files?",
    "answer": "Fluent journal files allow users to include any command from Fluent's Text-User-Interface (TUI) to change simulation parameters, run a series of simulations under different conditions, and automate tasks like loading files, running solvers, and writing results."
  },
  {
    "question": "How can you specify the file format Fluent should use for reading/writing files in a journal file?",
    "answer": "You can use the `/file/cff-files no` command for the legacy .cas/.dat format (default for module versions 2019R3 or older), or `/file/cff-files yes` for the more efficient .cas.h5/.dat.h5 format (default for module versions 2020R1 or newer)."
  },
  {
    "question": "In a Fluent journal file, how do you prevent the software from asking for confirmation before overwriting files?",
    "answer": "Add the command `/file/confirm-overwrite no` to your journal file."
  },
  {
    "question": "What command reads an input case and data file in a Fluent journal file?",
    "answer": "The command `/file/read-case-data FFF-in` reads an input case and data file, where 'FFF-in' should be replaced with your actual filename."
  },
  {
    "question": "How do you set the number of iterations for the solver in a Fluent journal file for a steady simulation?",
    "answer": "Use the command `/solve/iterate 1000`, replacing '1000' with the desired number of iterations."
  },
  {
    "question": "How can you write the final output data file from a Fluent simulation via a journal file?",
    "answer": "Use the command `/file/write-case-data FFF-out`, where 'FFF-out' should be your desired output filename."
  },
  {
    "question": "What is the command to generate an optional simulation report in a Fluent journal file?",
    "answer": "Use `/report/summary y \"My_Simulation_Report.txt\"`, customizing the report filename as needed."
  },
  {
    "question": "How do you ensure Fluent shuts down cleanly after a journal file execution?",
    "answer": "Include the `/exit` command at the end of your journal file."
  },
  {
    "question": "How do you configure Fluent to auto-save data files periodically in a journal file?",
    "answer": "Use `/file/auto-save/data-frequency 100` to save a data file every 100 iterations or time steps."
  },
  {
    "question": "What command allows Fluent to retain only a specified number of the most recent auto-saved data files?",
    "answer": "The command `/file/auto-save/retain-most-recent-files y` retains the most recent files (e.g., 5, as suggested in the example)."
  },
  {
    "question": "How can you direct auto-saved data files to a specific subdirectory and append iteration information to their names in Fluent?",
    "answer": "Use `/file/auto-save/root-name output/FFF-out` to save files to an 'output' subdirectory and append iteration numbers."
  },
  {
    "question": "What command reads only the input case file for a transient Fluent simulation?",
    "answer": "Use `/file/read-case FFF-transient-inp`, replacing 'FFF-transient-inp' with your case file name."
  },
  {
    "question": "How can you configure Fluent to auto-save case files only when they are modified during a transient simulation?",
    "answer": "Add `/file/auto-save/case-frequency if-case-is-modified` to your journal file."
  },
  {
    "question": "What journal file command sets the physical time step size for a transient simulation?",
    "answer": "The command `/solve/set/time-step 0.0001` sets the physical time step size, with '0.0001' being the customizable value."
  },
  {
    "question": "How do you specify the reporting interval for convergence monitors in a transient Fluent simulation journal file?",
    "answer": "Use `/solve/set/reporting-interval 1` to set the interval."
  },
  {
    "question": "What command initializes a transient Fluent simulation using the hybrid initialization method?",
    "answer": "The command `/solve/initialize/hyb-initialization` performs hybrid initialization."
  },
  {
    "question": "How do you set the total number of time steps and maximum iterations per time step in a transient Fluent journal file?",
    "answer": "Use `/solve/dual-time-iterate 1000 75` to specify 1000 time steps and a maximum of 75 iterations per time step."
  },
  {
    "question": "What is the initial step for using User-Defined Functions (UDFs) with Fluent on a cluster?",
    "answer": "The first step is to transfer your UDF source file (e.g., sampleudf.c) and any dependency files to the cluster."
  },
  {
    "question": "Where should UDF source files be located on the cluster?",
    "answer": "UDFs should be placed in the same directory where your journal, case (.cas), and data (.dat) files reside."
  },
  {
    "question": "What is a crucial consideration when transferring UDF source files from a Windows machine to a Linux-based cluster?",
    "answer": "Ensure the text mode setting of your transfer client is used, otherwise Fluent may not be able to read the file properly on Linux."
  },
  {
    "question": "Before uploading a Fluent case file for use with UDFs, what should be verified in the GUI?",
    "answer": "Check that neither the Interpreted UDFs Dialog Box nor the UDF Library Manager Dialog Box are configured to use any UDF; this ensures the journal file commands control UDF usage."
  },
  {
    "question": "How do you instruct Fluent to interpret a UDF at runtime using a journal file?",
    "answer": "Add the command `define/user-defined/interpreted-functions \"sampleudf.c\" \"cpp\" 10000 no` to your journal file before reading case/data files. Replace \"sampleudf.c\" with your source file name."
  },
  {
    "question": "Is the journal file command for interpreted UDFs different for serial versus parallel Fluent simulations?",
    "answer": "No, the command remains the same regardless of whether the simulation is run in serial or parallel."
  },
  {
    "question": "What is required for a UDF to be used with a Fluent parallel job (both single-node SMP and multi-node MPI)?",
    "answer": "The UDF must be parallelized, which involves adding compiler directives, predicates, and reduction macros to the serial UDF code."
  },
  {
    "question": "What are the potential consequences if a UDF is not parallelized for parallel Fluent jobs?",
    "answer": "Failure to parallelize a UDF for parallel jobs can result in Fluent running slowly at best, or immediately crashing at worst."
  },
  {
    "question": "Where can detailed information on parallelizing User-Defined Functions (UDFs) for Fluent be found?",
    "answer": "Detailed information is available in 'Part I: Chapter 7: Parallel Considerations' of the Ansys 2024 Fluent Customization Manual."
  },
  {
    "question": "What is the initial step required to use a compiled UDF on an Alliance cluster?",
    "answer": "Your UDF must be compiled on an Alliance cluster at least once, which creates a `libudf` subdirectory structure containing the required `libudf.so` shared library."
  },
  {
    "question": "Can a `libudf` directory be copied from a personal laptop to an Alliance cluster for compiled UDFs?",
    "answer": "No, the `libudf` directory cannot simply be copied from a remote system, as the library dependencies of the shared library will not be satisfied, causing Fluent to crash."
  },
  {
    "question": "What command compiles a UDF in a Fluent journal file?",
    "answer": "Use `define/user-defined/compiled-functions compile libudf yes sampleudf.c \"\" \"\"`, replacing `sampleudf.c` with your UDF source file name."
  },
  {
    "question": "What command loads a compiled UDF library in a Fluent journal file?",
    "answer": "Use `define/user-defined/compiled-functions load libudf` to load the compiled library."
  },
  {
    "question": "Why should both the compile and load commands for a compiled UDF not be uncommented in the journal file when submitting jobs?",
    "answer": "Leaving both uncommented will cause the UDF to be automatically recompiled for each job, which is highly inefficient and can lead to race-condition-like build conflicts if multiple jobs run from the same directory."
  },
  {
    "question": "How can a UDF be compiled using the Fluent GUI on a cluster?",
    "answer": "You can compile a UDF by running the Fluent GUI (on any cluster compute node or gra-vdi), navigating to the 'Compiled UDFs Dialog Box', adding the UDF source file, and clicking 'Build'."
  },
  {
    "question": "What Fluent journal file command can be used to enable the updating of Discrete Phase Model (DPM) source terms every flow iteration?",
    "answer": "The command `/define/models/dpm/interaction/coupled-calculations yes` enables updating DPM source terms every flow iteration."
  },
  {
    "question": "How would you delete an existing DPM injection named 'injection-0:1' via a Fluent journal file?",
    "answer": "Use the command `/define/models/dpm/injections/delete-injection injection-0:1`."
  },
  {
    "question": "What is the journal file command to create a DPM injection from a file named 'zinjection01.inj'?",
    "answer": "The command is `/define/models/dpm/injections/create injection-0:1 no yes file no zinjection01.inj no no no no`."
  },
  {
    "question": "How do you list the particles for a specific DPM injection named 'injection-0:1' in the Fluent console using a journal file?",
    "answer": "Use `/define/models/dpm/injections/list-particles injection-0:1`."
  },
  {
    "question": "What is the journal file command to list the properties of a DPM injection named 'injection-0:1'?",
    "answer": "Use `/define/models/dpm/injections/list-injection-properties injection-0:1`."
  }
]