[
  {
    "question": "What is SSH and how does it protect communication security?",
    "answer": "SSH is a software protocol used to connect to clusters, protecting communication security by verifying the server\u2019s identity and the user's identity against known identification data, and by encrypting the connection."
  },
  {
    "question": "Why were changes made to the SSH options for connecting to the clusters?",
    "answer": "Changes were made because security risks evolve over time, meaning certain SSH options are no longer deemed secure, and some encryption algorithms and protocols from ten or fifteen years ago now pose an unacceptable risk of compromise."
  },
  {
    "question": "When were users informed about the SSH changes through email?",
    "answer": "Email explanations about these changes were sent to all users on July 29, and with more detail on September 16."
  },
  {
    "question": "What are the three main SSH security improvements implemented?",
    "answer": "The main SSH security improvements implemented are disabling certain encryption algorithms, disabling certain public key types, and regenerating the cluster's host keys."
  },
  {
    "question": "When were these SSH security improvements implemented on Graham, B\u00e9luga, and Cedar?",
    "answer": "The SSH security improvements were implemented on September 24, 2019, on Graham, and one week later on B\u00e9luga and Cedar."
  },
  {
    "question": "Do the SSH changes affect users connecting to Arbutus?",
    "answer": "No, the upcoming SSH changes do not concern users connecting to Arbutus because they connect via a web interface, not SSH."
  },
  {
    "question": "What warning message might appear the first time a user logs into a cluster after the SSH changes?",
    "answer": "The first time a user logs in after the changes, they will probably see a warning message like 'WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!'."
  },
  {
    "question": "Why does the SSH client display a 'REMOTE HOST IDENTIFICATION HAS CHANGED' warning?",
    "answer": "This warning is displayed because the host keys on the cluster were changed, and the user's SSH client software remembers the old host keys to prevent 'man-in-the-middle' attacks."
  },
  {
    "question": "How should MobaXterm, PuTTY, or WinSCP users handle the host key warning?",
    "answer": "Users of MobaXterm, PuTTY, or WinSCP should accept the new host key by clicking 'Yes' in the pop-up window, but only if the fingerprint matches one listed in the SSH host key fingerprints section; otherwise, they should contact technical support."
  },
  {
    "question": "How can macOS, Linux, GitBash, or Cygwin users remove old host keys for the Graham cluster?",
    "answer": "For Graham, users should tell their system to 'forget' the old host key by running the command: `for h in 2620:123:7002:4::{2..5} 199.241.166.{2..5} {gra-login{1..3},graham,gra-dtn,gra-dtn1,gra-platform,gra-platform1}.{sharcnet,computecanada}.ca; do ssh-keygen -R $h; done`."
  },
  {
    "question": "What should a command-line SSH user do when asked to confirm a new host key after running `ssh-keygen -R`?",
    "answer": "The user should type 'yes' only if the displayed fingerprint matches one listed in the SSH host key fingerprints section; otherwise, they should not accept the connection and contact technical support."
  },
  {
    "question": "Why might an SSH key no longer work, leading to a password prompt?",
    "answer": "An SSH key might no longer work, causing a password prompt, because 1024-bit DSA & RSA keys have been disabled due to security improvements."
  },
  {
    "question": "What is the solution if a user's SSH key no longer works?",
    "answer": "If an SSH key no longer works, the user needs to generate a new stronger key and add their client's new public key to the remote host for authentication."
  },
  {
    "question": "What do error messages like 'no matching cipher found' or 'no matching key exchange method found' indicate?",
    "answer": "These error messages indicate that the user needs to upgrade their SSH client to one of the compatible clients listed in the document."
  },
  {
    "question": "Which Linux SSH clients are listed as compatible with the new configuration?",
    "answer": "Compatible Linux clients include OpenSSH_7.4p1 (OpenSSL 1.0.2k-fips on CentOS 7.5, 7.6) and OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.13 (OpenSSL 1.0.1f on Ubuntu 14)."
  },
  {
    "question": "How can an OS X user check their SSH client version?",
    "answer": "An OS X user can determine the exact version of their SSH client using the command `ssh -V`."
  },
  {
    "question": "Name some compatible Windows SSH clients for the new configuration.",
    "answer": "Compatible Windows SSH clients include MobaXterm Home Edition v11.1, PuTTY 0.72, and Windows Services for Linux (WSL) v1 (e.g., Ubuntu 18.04 with OpenSSH_7.6p1 or openSUSE Leap 15.1 with OpenSSH_7.9p1)."
  },
  {
    "question": "What iOS SSH client is mentioned as compatible?",
    "answer": "The iOS client Termius, version 4.3.12, is mentioned as compatible."
  },
  {
    "question": "How can one remotely retrieve SSH host fingerprints?",
    "answer": "One can retrieve SSH host fingerprints remotely using the commands `ssh-keyscan <hostname> | ssh-keygen -E md5 -l -f -` or `ssh-keyscan <hostname> | ssh-keygen -E sha256 -l -f -`."
  }
]