[
  {
    "question": "What is the purpose of the `diff-cxx98` target in the Makefile?",
    "answer": "The `diff-cxx98` target shows the \"Difference between the old and new C++ ABIs with -std=c++98\"."
  },
  {
    "question": "What command is executed by the `diff-cxx98` target to compare symbol files?",
    "answer": "The command `diff --suppress-common-lines main-cxx98-oldabi.o.symbols main-cxx98-newabi.o.symbols` is executed."
  },
  {
    "question": "How does the Makefile demonstrate the difference between old and new C++ ABIs when using `-std=c++11`?",
    "answer": "It uses the `diff-cxx11` target, which compares symbol files for `main-cxx11-oldabi.o` and `main-cxx11-newabi.o`."
  },
  {
    "question": "What is the purpose of the `diff-cxx-default` target?",
    "answer": "The `diff-cxx-default` target shows the \"Difference between -std=c++98 and -std=c++11 ABI w/o _GLIBCXX_USE_CXX11_ABI\"."
  },
  {
    "question": "What is a prerequisite before running `make` for this example?",
    "answer": "Before running `make`, you must ensure you have loaded a module for GCC v5.1 or higher."
  },
  {
    "question": "What does executing the make file demonstrate?",
    "answer": "Executing the make file will demonstrate the differences in the produced ABI symbols with different GCC compiler options."
  },
  {
    "question": "How is the `main-cxx98.o` object file compiled according to the `Makefile` output?",
    "answer": "It is compiled using `c++ -c -o main-cxx98.o -std=c++98 main.cxx`."
  },
  {
    "question": "What compiler option is used to explicitly enable the new C++11 ABI when compiling with `-std=c++98`?",
    "answer": "The option `-D_GLIBCXX_USE_CXX11_ABI=1` is used, as seen in the compilation of `main-cxx98-newabi.o`."
  },
  {
    "question": "Which compiler flag forces the use of the old C++11 ABI when compiling with `-std=c++11`?",
    "answer": "The flag `-D_GLIBCXX_USE_CXX11_ABI=0` is used to force the old C++11 ABI, as shown in the compilation of `main-cxx11-oldabi.o`."
  },
  {
    "question": "How are symbol names extracted from object files and saved to a `.symbols` file in the Makefile?",
    "answer": "The command `nm $@ | cut -c 20- >$@.symbols` is used to extract and save the symbol names."
  }
]