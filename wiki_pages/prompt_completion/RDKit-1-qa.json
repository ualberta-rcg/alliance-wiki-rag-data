[
  {
    "question": "What is RDKit?",
    "answer": "RDKit is a collection of cheminformatics and machine-learning software written in C++ and Python."
  },
  {
    "question": "How can I find the available versions of the RDKit module?",
    "answer": "You can find available versions by running the command: `module spider rdkit`."
  },
  {
    "question": "How do I get more information about a specific RDKit version, such as 2024.03.5?",
    "answer": "You can get more information by running: `module spider rdkit/X.Y.Z`, replacing `X.Y.Z` with the desired version, like `2024.03.5`."
  },
  {
    "question": "How can I discover which Python versions are compatible with a specific RDKit module version?",
    "answer": "To discover compatible Python versions, run the command: `module spider rdkit/X.Y.Z`, where `X.Y.Z` is the desired RDKit version."
  },
  {
    "question": "What is the first step when `rdkit` is a dependency of another package and you have a Python virtual environment active?",
    "answer": "The first step is to deactivate any active Python virtual environment by running: `test $VIRTUAL_ENV && deactivate`."
  },
  {
    "question": "Why is it important to deactivate a virtual environment before loading the RDKit module?",
    "answer": "If you had a virtual environment activated, it's important to deactivate it first, then load the module, before reactivating your virtual environment."
  },
  {
    "question": "How do you load a specific RDKit module version along with a Python module?",
    "answer": "You can load the module using a command like: `module load rdkit/2024.03.5 python/3.12`."
  },
  {
    "question": "How can I check if `rdkit` is visible by `pip` after loading the module?",
    "answer": "You can check by running the command: `pip list | grep rdkit`."
  },
  {
    "question": "How do you confirm that RDKit is working correctly after loading the module?",
    "answer": "You can confirm by running `python -c 'import rdkit'`. If no errors are raised, it means everything is OK."
  },
  {
    "question": "What is the final step after loading the RDKit module and verifying its visibility for a package dependency?",
    "answer": "The final step is to create a virtual environment and install your packages."
  },
  {
    "question": "What error might you encounter if `rdkit` is not accessible when trying to import it in Python?",
    "answer": "You may get the error: `ModuleNotFoundError: No module named 'rdkit'`."
  },
  {
    "question": "What are possible solutions for the `ModuleNotFoundError: No module named 'rdkit'`?",
    "answer": "Possible solutions include checking compatible Python versions with `module spider rdkit/X.Y.Z` and ensuring the RDKit module is loaded before activating your virtual environment."
  }
]