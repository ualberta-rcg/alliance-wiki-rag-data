[
  {
    "question": "Where can I find general information about using GPUs on your systems for GROMACS?",
    "answer": "You can find general information on using GPUs on our systems by reading the [[Using GPUs with Slurm]] page."
  },
  {
    "question": "How do I request a single GPU per node in a Slurm job script for GROMACS?",
    "answer": "You can request one GPU per node using `#SBATCH --gpus-per-node=1` in your Slurm job script."
  },
  {
    "question": "What is the recommended number of OpenMP threads per MPI process for GROMACS GPU runs?",
    "answer": "According to GROMACS developers, the optimum number of `--cpus-per-task` (OpenMP threads per MPI process) is between 2 and 6."
  },
  {
    "question": "Can GROMACS run GPU simulations with only 1 OpenMP thread?",
    "answer": "GROMACS will not run GPU runs with only 1 OpenMP thread unless forced by setting the `-ntomp` option."
  },
  {
    "question": "What modules are needed to run GROMACS 2024.4 with GPU support under StdEnv/2023?",
    "answer": "To run GROMACS 2024.4 with GPU support under StdEnv/2023, you need to load `StdEnv/2023`, `gcc/12.3`, `openmpi/4.1.5`, `cuda/12.2`, and `gromacs/2024.4`."
  },
  {
    "question": "Is it efficient to use more than one GPU for GROMACS simulations?",
    "answer": "Using more than a single GPU usually leads to poor efficiency. It is recommended to carefully test and compare multi-GPU and single-GPU performance before deciding."
  },
  {
    "question": "Which GROMACS versions have a known bug when using the `-update gpu` option on Volta or newer GPUs?",
    "answer": "GROMACS versions 2020.0 up to and including 2021.5 contain a bug that could perturb the virial calculation and lead to incorrect pressure coupling when using the `mdrun` option `-update gpu` on Volta or newer generation GPUs (V100, T4, A100)."
  },
  {
    "question": "How likely is the GPU bug in GROMACS versions 2020.0-2021.5 to appear?",
    "answer": "The GROMACS developers stated that the GPU update is not enabled by default, so the error only appears in simulations where it was manually selected, and even then, the error might be rare."
  },
  {
    "question": "Where can I find more details about GPU node configurations on the clusters?",
    "answer": "More information about different GPU node configurations (GPU models and number of GPUs and CPUs per node) can be found on the [[Using GPUs with Slurm#Available GPUs]] page."
  },
  {
    "question": "What are the constraints for choosing `--tasks-per-node` and `--gpus-per-node` for GROMACS 2018.2?",
    "answer": "For GROMACS 2018.2, the number of `--tasks-per-node` always needs to be the same as, or a multiple of the number of GPUs (`--gpus-per-node`)."
  },
  {
    "question": "What resource allocation should be avoided when running GROMACS on GPUs?",
    "answer": "You should avoid using a larger fraction of CPUs and memory than the fraction of GPUs you have requested in a node."
  },
  {
    "question": "Where can I find GROMACS GPU benchmark results?",
    "answer": "You can explore GROMACS GPU benchmark results on the MDBench portal."
  },
  {
    "question": "Why do GROMACS and other MD simulation programs struggle to fully utilize recent GPU models like Nvidia A100 and H100?",
    "answer": "GROMACS and other MD simulation programs are unable to fully use recent GPU models such as the Nvidia A100 and H100 unless the molecular system is very large (millions of atoms), otherwise, a significant fraction of allocated computational resources is wasted."
  },
  {
    "question": "What is a recommended solution for efficient GPU usage with GROMACS for multiple similar simulations?",
    "answer": "The preferred solution is to run multiple similar simulations on a single GPU using `mdrun -multidir`. This is suitable for repeating simulations, simulating protein variants, or ensemble-based simulations."
  }
]