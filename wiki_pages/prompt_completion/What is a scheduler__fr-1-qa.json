[
  {
    "question": "How does interacting with Alliance servers differ from using a graphical user interface (GUI)?",
    "answer": "With Alliance servers, interaction is primarily through a command-line interface via a console, rather than clicking windows, menus, and buttons found in a GUI."
  },
  {
    "question": "Why are programs on Alliance servers often placed in a queue instead of executing immediately?",
    "answer": "Programs are placed in a queue to be executed when CPU cores are available, which helps to avoid interference and prevent a decrease in performance."
  },
  {
    "question": "What are the three main steps involved in using the command-line interface to run a program on Alliance servers?",
    "answer": "The steps involve preparing a script that specifies the program, data source, and result destination; submitting this script to a scheduler; and then retrieving the result once the task is finished."
  },
  {
    "question": "Can users interact with a program while it is running as a job on Alliance servers?",
    "answer": "Users generally do not interact with the program during its execution, but they can inquire about its progression."
  },
  {
    "question": "What is the purpose of lines that begin with `#SBATCH` in a task script?",
    "answer": "Lines starting with `#SBATCH` are directives that describe to the scheduler what it needs to know about the task to be executed, such as execution time."
  },
  {
    "question": "Which specific task scheduling solution is used for Alliance clusters?",
    "answer": "The Alliance clusters have adopted the Slurm Workload Manager solution for task scheduling."
  },
  {
    "question": "What are the primary functions of a task scheduler?",
    "answer": "A task scheduler maintains a database of tasks, applies rules for limits and priorities, prevents resource overload (e.g., assigning one CPU core per task), determines which tasks to execute and on which nodes, launches tasks, and performs cleanup after task completion."
  },
  {
    "question": "How are resources requested for a calculation on the Alliance clusters?",
    "answer": "Resources are requested using a task script, where parameters such as execution time and the number of processors are defined."
  },
  {
    "question": "What happens if a task's specified execution time or memory is less than its actual requirements?",
    "answer": "If the specified values are insufficient and the task exceeds the allocated time or memory, it will be stopped."
  },
  {
    "question": "What are the negative consequences of requesting more resources than a task actually needs?",
    "answer": "If more resources are requested than needed, the task might remain in the queue longer than necessary, and its execution would unnecessarily use resources that could otherwise be available for other tasks."
  },
  {
    "question": "If no number of processors is specified in a task script, how many processors will be allocated by default?",
    "answer": "If no number of processors is specified, a single processor will be allocated by default."
  },
  {
    "question": "What is an example of a simple job script's content?",
    "answer": "A simple script like 'simple_job.sh' might contain '#!/bin/bash', '#SBATCH --time=00:01:00', 'echo 'Hello, world!'', and 'sleep 30'."
  },
  {
    "question": "What programs are executed in the 'simple_job.sh' example script?",
    "answer": "The 'simple_job.sh' example script executes two programs: 'echo' and 'sleep'."
  }
]