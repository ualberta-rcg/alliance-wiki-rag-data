[
  {
    "question": "How can you determine which packages are activated or not activated for a specific LAMMPS module?",
    "answer": "After loading a LAMMPS module, you can launch `cat ${EBROOTLAMMPS}/list-packages.txt` to see the activated ('Supported') and non-activated ('Not Supported') packages."
  },
  {
    "question": "What should you do if the `list-packages.txt` file is not found for a LAMMPS module?",
    "answer": "If `list-packages.txt` is not found, you can try to determine the available packages by opening the EasyBuild recipe file at `$EBROOTLAMMPS/easybuild/LAMMPS*.eb` and looking for the `general_packages` block."
  },
  {
    "question": "What are the names of the example input and task script files provided in the document?",
    "answer": "The example files are `lammps.in` for the input, `run_lmp_serial.sh` for a sequential task, and `run_lmp_mpi.sh` for an MPI task."
  },
  {
    "question": "What kind of simulation is described in the `lammps.in` example file?",
    "answer": "The `lammps.in` file describes a '3d Lennard-Jones melt' simulation."
  },
  {
    "question": "Which LAMMPS module is used in the provided example task scripts (`run_lmp_serial.sh` and `run_lmp_mpi.sh`)?",
    "answer": "The example task scripts load the `lammps-omp/20210929` module, along with `StdEnv/2020`, `intel/2020.1.217`, and `openmpi/4.0.3`."
  },
  {
    "question": "What type of calculation typically occupies the largest portion of CPU time in molecular dynamics simulations using LAMMPS?",
    "answer": "The calculation of pair interactions between particles occupies the largest part of the CPU time in molecular dynamics simulations."
  },
  {
    "question": "How does LAMMPS distribute work among available processors in a simulation?",
    "answer": "LAMMPS uses the domain decomposition method to distribute work, assigning a portion of the simulation box to each available processor."
  },
  {
    "question": "What can happen to CPU efficiency when the number of processors is increased for a fixed number of particles in LAMMPS?",
    "answer": "Increasing the number of processors for a fixed number of particles can lead to longer communication times between processors, eventually causing lower CPU efficiency."
  },
  {
    "question": "What is recommended before running large-scale LAMMPS simulations to optimize performance?",
    "answer": "Before executing simulations for problems of a certain size, it is recommended to perform short tests with a different number of cores to identify the core count likely to offer the best efficiency."
  },
  {
    "question": "For a simulation of 4000 particles with 12 MPI tasks, what percentage of time is spent on pair interactions and communication?",
    "answer": "For a simulation of 4000 particles with 12 MPI tasks, pair calculations occupy 46.45% of the time and communication between processors occupies 44.5%."
  },
  {
    "question": "Why is the efficiency reported as very low for a system of 4000 atoms using 12 cores?",
    "answer": "The efficiency is very low because the 4000-atom system is distributed over 12 small boxes, resulting in a significant proportion of time spent on communication."
  },
  {
    "question": "What trend is observed in the communication time as the number of cores increases for a given number of atoms, according to the performance table?",
    "answer": "According to the performance table, the percentage of time spent on communication generally increases as the number of cores increases for a given number of atoms."
  },
  {
    "question": "What trend is observed in the pair calculation time as the number of cores increases for a given number of atoms, according to the performance table?",
    "answer": "According to the performance table, the percentage of time spent on pair calculations generally decreases as the number of cores increases for a given number of atoms."
  }
]