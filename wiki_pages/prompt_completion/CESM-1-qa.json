[
  {
    "question": "What is the Community Earth System Model (CESM)?",
    "answer": "The Community Earth System Model (CESM) is a fully coupled global climate model developed in collaboration with colleagues in the research community. It provides state-of-the-art computer simulations of Earth's past, present, and future climate states."
  },
  {
    "question": "What is the primary benefit of a local installation of CESM 2.1?",
    "answer": "Local installations allow for source code changes, which can be useful for specific research purposes."
  },
  {
    "question": "Where should a user download CESM 2.1 from for a local installation?",
    "answer": "Users should download CESM 2.1 from the CESM developers into their local directory."
  },
  {
    "question": "How do you clone CESM Version 2.1.5?",
    "answer": "To clone CESM Version 2.1.5, use the command: `git clone -b release-cesm2.1.5 https://github.com/ESCOMP/CESM.git /path/to/CESM`."
  },
  {
    "question": "What is the status of CESM Version 2.1.3?",
    "answer": "CESM Version 2.1.3 has been very popular in the research community but may become obsolete as it is no longer officially supported."
  },
  {
    "question": "How do you clone the older CESM Version 2.1.3?",
    "answer": "To clone the older CESM Version 2.1.3, use the command: `git clone -b release-cesm2.1.3 https://github.com/ESCOMP/CESM.git /path/to/CESM`."
  },
  {
    "question": "What modifications are required to make CESM Version 2.1.3 work?",
    "answer": "Some external dependencies must be replaced with newer versions using `sed` commands on the `Externals.cfg` file, for example: `sed -i 's/cam_cesm2_1_rel_41/cam_cesm2_1_rel_59/g' /path/to/CESM/Externals.cfg`."
  },
  {
    "question": "What is the purpose of the `checkout_externals` script in CESM?",
    "answer": "The `checkout_externals` script is used to checkout individual model components before the first use of CESM."
  },
  {
    "question": "How do you run the `checkout_externals` script?",
    "answer": "You run the `checkout_externals` script using the command: `/path/to/CESM/manage_externals/checkout_externals`."
  },
  {
    "question": "How do you validate the checkout of external model components?",
    "answer": "To validate the checkout, run the `checkout_externals` script with the `-S` flag: `/path/to/CESM/manage_externals/checkout_externals -S`."
  },
  {
    "question": "What is the name and path of the local machine configuration file for CESM?",
    "answer": "The local machine configuration file is named `config_machines.xml` and is located at `~/.cime/config_machines.xml`."
  },
  {
    "question": "What specific lines must be updated in the `~/.cime/config_machines.xml` file?",
    "answer": "Both configuration lines containing `def-EDIT_THIS` must be updated with the compute account a user wants to use on the cluster."
  },
  {
    "question": "What batch system is configured for Beluga, Cedar, Graham, Narval, Niagara, and Rorqual in `config_machines.xml`?",
    "answer": "For Beluga, Cedar, Graham, Narval, Niagara, and Rorqual, the `config_machines.xml` file configures the `slurm` batch system."
  },
  {
    "question": "What compilers are supported on Beluga, Cedar, Graham, Narval, Niagara, and Rorqual according to `config_machines.xml`?",
    "answer": "The supported compilers on these machines are `intel` and `gnu`."
  },
  {
    "question": "What is the `CIME_OUTPUT_ROOT` directory configured for Beluga, Cedar, Graham, Narval, Niagara, and Rorqual?",
    "answer": "The `CIME_OUTPUT_ROOT` directory is configured as `/scratch/$USER/cesm/output`."
  },
  {
    "question": "What is the maximum number of tasks per node on the Beluga cluster?",
    "answer": "The maximum number of tasks per node on the Beluga cluster is 40."
  },
  {
    "question": "What is the maximum number of tasks per node on the Cedar cluster?",
    "answer": "The maximum number of tasks per node on the Cedar cluster is 48."
  },
  {
    "question": "What is the maximum number of tasks per node on the Graham cluster?",
    "answer": "The maximum number of tasks per node on the Graham cluster is 44."
  },
  {
    "question": "What is the maximum number of tasks per node on the Narval cluster?",
    "answer": "The maximum number of tasks per node on the Narval cluster is 64."
  },
  {
    "question": "What is the maximum number of tasks per node on the Niagara cluster?",
    "answer": "The maximum number of tasks per node on the Niagara cluster is 40."
  },
  {
    "question": "What is the maximum number of tasks per node on the Rorqual cluster?",
    "answer": "The maximum number of tasks per node on the Rorqual cluster is 192."
  },
  {
    "question": "Which MPI library is configured for use with mpirun on these clusters?",
    "answer": "OpenMPI (`openmpi`) is configured for use with mpirun."
  },
  {
    "question": "What Intel compiler modules are loaded for all listed machines in `config_machines.xml`?",
    "answer": "The Intel compiler modules loaded are `intel/2023.2.1`, `git-annex/10.20231129`, and `cmake/3.27.7`."
  },
  {
    "question": "What OpenMPI related modules are loaded for all listed machines in `config_machines.xml`?",
    "answer": "The OpenMPI related modules loaded are `openmpi/4.1.5`, `hdf5-mpi/1.14.2`, `netcdf-c++4-mpi/4.3.1`, `netcdf-fortran-mpi/4.6.1`, `netcdf-mpi/4.9.2`, `xml-libxml/2.0208`, and `flexiblas/3.3.1`."
  },
  {
    "question": "What environment variable is set for `OMP_STACKSIZE` in the machine configurations?",
    "answer": "The `OMP_STACKSIZE` environment variable is set to `256M`."
  },
  {
    "question": "How do you validate the `~/.cime/config_machines.xml` file?",
    "answer": "To validate the `~/.cime/config_machines.xml` file, run the command: `xmllint --noout --schema /path/to/CESM/cime/config/xml_schemas/config_machines.xsd ~/.cime/config_machines.xml`."
  },
  {
    "question": "What command can you use to query the current machine configuration?",
    "answer": "You can query the current machine configuration with the command: `/path/to/CESM/cime/scripts/query_config --machines current`."
  },
  {
    "question": "Where can one find the official template for additional machine configuration parameters?",
    "answer": "The official template can be found at `/path/to/CESM/cime/config/xml_schemas/config_machines_template.xml` and can be viewed with `less`."
  },
  {
    "question": "What is the name and path of the local batch configuration file for CESM?",
    "answer": "The local batch configuration file is named `config_batch.xml` and is located at `~/.cime/config_batch.xml`."
  },
  {
    "question": "What are the common `sbatch` directives for job submission in `config_batch.xml`?",
    "answer": "Common `sbatch` directives include `--job-name={{ job_id }}`, `--nodes={{ num_nodes }}`, `--ntasks-per-node={{ tasks_per_node }}`, `--output={{ job_id }}`, `--exclusive`, and `--mem=0`."
  },
  {
    "question": "What is the maximum walltime and node range for the 'beluga' queue in `config_batch.xml`?",
    "answer": "The 'beluga' queue has a maximum walltime of 12:00:00 and supports 1 to 576 nodes."
  },
  {
    "question": "What is the maximum walltime and node range for the 'cedar' queue in `config_batch.xml`?",
    "answer": "The 'cedar' queue has a maximum walltime of 12:00:00 and supports 1 to 1360 nodes."
  },
  {
    "question": "What is the maximum walltime and node range for the 'graham' queue in `config_batch.xml`?",
    "answer": "The 'graham' queue has a maximum walltime of 12:00:00 and supports 1 to 136 nodes."
  },
  {
    "question": "What is the maximum walltime and node range for the 'narval' queue in `config_batch.xml`?",
    "answer": "The 'narval' queue has a maximum walltime of 12:00:00 and supports 1 to 1145 nodes."
  },
  {
    "question": "What is the maximum walltime and node range for the 'niagara' queue in `config_batch.xml`?",
    "answer": "The 'niagara' queue has a maximum walltime of 12:00:00 and supports 1 to 2024 nodes."
  },
  {
    "question": "What is the maximum walltime and node range for the 'rorqual' queue in `config_batch.xml`?",
    "answer": "The 'rorqual' queue has a maximum walltime of 12:00:00 and supports 1 to 670 nodes."
  },
  {
    "question": "What specific `sbatch` constraint is used for the Niagara cluster in `config_batch.xml`?",
    "answer": "The Niagara cluster uses the `sbatch` constraint `--constraint=[skylake|cascade]`."
  },
  {
    "question": "How do you validate the `~/.cime/config_batch.xml` file?",
    "answer": "To validate the `~/.cime/config_batch.xml` file, run the command: `xmllint --noout --schema /path/to/CESM/cime/config/xml_schemas/config_batch.xsd ~/.cime/config_batch.xml`."
  },
  {
    "question": "What is the name and path of the local compilers configuration file for CESM?",
    "answer": "The local compilers configuration file is named `config_compilers.xml` and is located at `~/.cime/config_compilers.xml`."
  },
  {
    "question": "What `CPPDEFS` flags are enabled for the 'gptl' model in `config_compilers.xml`?",
    "answer": "The `CPPDEFS` flags enabled for the 'gptl' model are `-DHAVE_NANOTIME -DBIT64 -DHAVE_VPRINTF -DHAVE_BACKTRACE -DHAVE_SLASHPROC -DHAVE_COMM_F2C -DHAVE_TIMES -DHAVE_GETTIMEOFDAY`."
  },
  {
    "question": "Which filesystem hint is specified for PIO in `config_compilers.xml`?",
    "answer": "The `PIO_FILESYSTEM_HINTS` is set to `lustre`."
  },
  {
    "question": "How do you validate the `~/.cime/config_compilers.xml` file?",
    "answer": "To validate the `~/.cime/config_compilers.xml` file, run the command: `xmllint --noout --schema /path/to/CESM/cime/config/xml_schemas/config_compilers_v2.xsd ~/.cime/config_compilers.xml`."
  },
  {
    "question": "What are the initial steps to set up directories for a CESM test case?",
    "answer": "The initial steps are to create input and output directories: `mkdir -p $SCRATCH/cesm/inputdata` and `mkdir -p $SCRATCH/cesm/output`."
  },
  {
    "question": "How do you create a new CESM test case with a specific compset and resolution?",
    "answer": "To create a new CESM test case, use the command: `/path/to/CESM/cime/scripts/create_newcase --case test_case --compset IHistClm50Bgc --res f19_g17`."
  },
  {
    "question": "What are the subsequent steps after creating a new CESM case, before running it?",
    "answer": "After creating a new case and navigating into its directory (`cd test_case`), you need to run `./case.setup`, `./case.build`, and `./check_input_data --download`."
  },
  {
    "question": "How do you preview and submit a CESM test case?",
    "answer": "To preview and submit a CESM test case, run `./preview_run` followed by `./case.submit`."
  }
]