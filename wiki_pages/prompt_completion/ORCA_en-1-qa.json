[
  {
    "question": "What is ORCA?",
    "answer": "ORCA is a flexible, efficient, and easy-to-use general-purpose tool for quantum chemistry."
  },
  {
    "question": "What is ORCA's specific emphasis?",
    "answer": "ORCA's specific emphasis is on the spectroscopic properties of open-shell molecules."
  },
  {
    "question": "What types of quantum chemical methods does ORCA support?",
    "answer": "ORCA supports a wide variety of standard quantum chemical methods, including semiempirical methods, DFT, and single- and multireference correlated ab initio methods."
  },
  {
    "question": "Can ORCA account for environmental and relativistic effects?",
    "answer": "Yes, ORCA can treat environmental and relativistic effects."
  },
  {
    "question": "What is the first step to get access to prebuilt ORCA executables?",
    "answer": "You have to register at https://orcaforum.kofo.mpg.de/."
  },
  {
    "question": "After registering for ORCA executables, what email should you look for to request access?",
    "answer": "You will receive a second email stating that the 'registration for ORCA download and usage has been completed', which you should copy when contacting technical support."
  },
  {
    "question": "Which version of ORCA 6 is recommended, and why?",
    "answer": "ORCA 6.0.1 is recommended over 6.0.0 because it addresses some bugs of the first release."
  },
  {
    "question": "How do you load the orca/6.0.1 module?",
    "answer": "To load orca/6.0.1, use `module load StdEnv/2023 gcc/12.3 openmpi/4.1.5 orca/6.0.1`."
  },
  {
    "question": "Does ORCA 6.0.1 include any other software?",
    "answer": "Yes, ORCA 6.0.1 includes xtb 6.7.1."
  },
  {
    "question": "Which ORCA 5 version is recommended and why?",
    "answer": "Version 5.0.4 is recommended over earlier 5.0.x versions because it fixes bugs, most notably one involving D4 dispersion gradients."
  },
  {
    "question": "How do you load the orca/5.0.4 module?",
    "answer": "To load orca/5.0.4, use `module load StdEnv/2020 gcc/10.3.0 openmpi/4.1.1 orca/5.0.4`."
  },
  {
    "question": "What are the ways to load ORCA version 4.2.1?",
    "answer": "ORCA version 4.2.1 can be loaded using either `module load StdEnv/2020 gcc/9.3.0 openmpi/4.0.3 orca/4.2.1` or `module load nixpkgs/16.09 gcc/7.3.0 openmpi/3.1.4 orca/4.2.1`."
  },
  {
    "question": "What two additional parameters should be set in ORCA input files?",
    "answer": "You should make sure to set 'number of CPUs' and 'maxcore' in ORCA input files."
  },
  {
    "question": "How can you check which versions of ORCA are available?",
    "answer": "To see which versions of ORCA are currently available, type `module spider orca`."
  },
  {
    "question": "How can you get detailed information about a specific ORCA module?",
    "answer": "For detailed information about a specific version, use the module's full name, for example, `module spider orca/4.0.1.2`."
  },
  {
    "question": "What variables can be defined to resolve MPI errors with ORCA executables?",
    "answer": "You can try defining `export OMPI_MCA_mtl='^mxm'` and `export OMPI_MCA_pml='^yalla'`."
  },
  {
    "question": "How is ORCA started in a job script, unlike most MPI programs?",
    "answer": "ORCA is not started with a parallel launch command like `mpirun` or `srun`, but requires the full path to the program, which is given by `$EBROOTORCA`."
  },
  {
    "question": "What modules are loaded in the example job script for ORCA 4.2.1?",
    "answer": "The example job script loads `StdEnv/2020 gcc/9.3.0 openmpi/4.0.3` and then `orca/4.2.1`."
  },
  {
    "question": "In the example job script, how many tasks (CPUs) are requested?",
    "answer": "The example job script requests `--ntasks=8` for cpus."
  },
  {
    "question": "What is the memory per CPU specified in the example ORCA job script?",
    "answer": "The memory per CPU specified is `--mem-per-cpu=3G`."
  }
]