[
  {
    "question": "What is the recommended use case for Jupyter Lab and notebooks?",
    "answer": "Jupyter Lab and notebooks are meant for short interactive tasks like testing, debugging, or quickly visualizing data, typically lasting only a few minutes."
  },
  {
    "question": "How should longer analyses be performed when using Jupyter?",
    "answer": "Longer analyses must be done in a non-interactive job using `sbatch`."
  },
  {
    "question": "What is Project Jupyter?",
    "answer": "Project Jupyter is a non-profit, open-source project that originated from the IPython Project in 2014, designed to support interactive data science and scientific computing across various programming languages."
  },
  {
    "question": "What is JupyterLab?",
    "answer": "JupyterLab is a web-based interactive development environment for notebooks, code, and data, featuring a flexible interface for configuring workflows and a modular design that supports extensions."
  },
  {
    "question": "Where should a JupyterLab server be run?",
    "answer": "A JupyterLab server should only run on a compute node or a cloud instance, not on cluster login nodes due to imposed limits on CPU time and memory."
  },
  {
    "question": "How do users reserve resources for JupyterLab on a compute node?",
    "answer": "Users can reserve compute resources by submitting a job that requests a specific number of CPUs (and optionally GPUs), an amount of memory, and the run time."
  },
  {
    "question": "What is the primary method for installing JupyterLab described in this document?",
    "answer": "JupyterLab is installed using the `pip` command within a Python virtual environment."
  },
  {
    "question": "What is the first step to create a Python virtual environment for JupyterLab?",
    "answer": "The first step is to load a Python module using `module load python`."
  },
  {
    "question": "What specific command is used to create a new Python virtual environment for JupyterLab?",
    "answer": "A new Python virtual environment is created using `virtualenv --no-download $HOME/jupyter_py3`."
  },
  {
    "question": "How do you activate a newly created Python virtual environment for JupyterLab?",
    "answer": "To activate the virtual environment, use the command `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "What command is used to install JupyterLab within an activated virtual environment?",
    "answer": "JupyterLab is installed using `pip install --no-index jupyterlab` after updating pip with `pip install --no-index --upgrade pip`."
  },
  {
    "question": "How do you create a wrapper script for launching JupyterLab in the virtual environment?",
    "answer": "A wrapper script is created by echoing the launch command into a file: `echo -e '#!/bin/bash\nunset XDG_RUNTIME_DIR\njupyter lab --ip $(hostname -f) --no-browser' > $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "What command makes the JupyterLab wrapper script executable?",
    "answer": "The script is made executable with `chmod u+x $VIRTUAL_ENV/bin/jupyterlab.sh`."
  },
  {
    "question": "What is the purpose of JupyterLab extensions?",
    "answer": "Extensions allow users to add functionalities and modify the JupyterLab\u2019s user interface."
  },
  {
    "question": "What is Jupyter Lmod?",
    "answer": "Jupyter Lmod is an extension that allows users to interact with environment modules, such as loading, unloading, or saving collections, before launching kernels."
  },
  {
    "question": "How do you install the Jupyter Lmod extension?",
    "answer": "To install Jupyter Lmod, first load nodejs (`module load nodejs`), then install `jupyterlmod` via pip (`pip install jupyterlmod`), and finally install the labextension (`jupyter labextension install jupyterlab-lmod`)."
  },
  {
    "question": "What is RStudio Server in the context of JupyterLab?",
    "answer": "RStudio Server allows users to develop R codes in an RStudio environment that appears in their web browser within a separate tab, integrated with JupyterLab."
  },
  {
    "question": "What specific module must be loaded first if you intend to use RStudio Server with JupyterLab?",
    "answer": "The `rstudio-server` module must be loaded before the `python` module and before creating a new virtual environment: `module load rstudio-server python`."
  },
  {
    "question": "What additional package needs to be installed for RStudio Server integration after JupyterLab is installed?",
    "answer": "The `jupyter-rsession-proxy` package needs to be installed using `pip install --no-index jupyter-rsession-proxy`."
  }
]