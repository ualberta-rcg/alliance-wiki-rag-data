[
  {
    "question": "What is the Genome Analysis Toolkit (GATK)?",
    "answer": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data."
  },
  {
    "question": "For what purpose is GATK well-established?",
    "answer": "GATK is well established for germline short variant discovery from whole genome and exome sequencing data."
  },
  {
    "question": "What is GATK's role in genomics research?",
    "answer": "GATK is a leading tool in variant discovery and best practices for genomics research."
  },
  {
    "question": "How can I access GATK version information?",
    "answer": "To access GATK version information, use the `module` command."
  },
  {
    "question": "What command shows available GATK versions?",
    "answer": "You can use `module spider gatk` to get information about GATK and its available versions."
  },
  {
    "question": "Can you list some available GATK versions?",
    "answer": "Some available GATK versions include gatk/3.7, gatk/3.8, gatk/4.0.0.0, gatk/4.0.8.1, gatk/4.0.12.0, gatk/4.1.0.0, gatk/4.1.2.0, gatk/4.1.7.0, gatk/4.1.8.0, gatk/4.1.8.1, gatk/4.2.2.0, gatk/4.2.4.0, and gatk/4.2.5.0."
  },
  {
    "question": "How do I get specific information on a particular GATK version?",
    "answer": "More specific information on any given GATK version, such as gatk/4.1.8.1, can be accessed with `module spider gatk/4.1.8.1`."
  },
  {
    "question": "What is the prerequisite module for GATK/4.1.8.1?",
    "answer": "The `StdEnv/2020` module is a prerequisite for GATK/4.1.8.1."
  },
  {
    "question": "How do I load GATK/4.1.8.1 with its prerequisite?",
    "answer": "You can load GATK/4.1.8.1 with its prerequisite using `module load StdEnv/2020 gatk/4.1.8.1`."
  },
  {
    "question": "If StdEnv/2020 is loaded by default, how do I load GATK/4.1.8.1?",
    "answer": "If `StdEnv/2020` is loaded by default, you can simply load GATK/4.1.8.1 with `module load gatk/4.1.8.1`."
  },
  {
    "question": "How do later versions of GATK (>=4.0.0.0) handle Java executables?",
    "answer": "Later versions of GATK (>=4.0.0.0) provide a wrapper over the Java executables (.jar), and loading the GATK modules automatically sets most necessary environmental variables."
  },
  {
    "question": "What command provides usage information and examples for the GATK wrapper?",
    "answer": "The `module spider` command also provides information on usage and some examples of the GATK wrapper."
  },
  {
    "question": "What is the general syntax for running GATK tools?",
    "answer": "The general syntax for running GATK tools is `gatk [--java-options \"-Xmx4G\"] ToolName [GATK args]`."
  },
  {
    "question": "How can arguments be passed directly to Java when running GATK?",
    "answer": "Arguments can be passed directly to Java through the `--java-options` argument."
  },
  {
    "question": "How do you specify the maximum heap memory for the Java Virtual Machine when running GATK?",
    "answer": "You specify the maximum heap memory using `-Xmx` within the `--java-options`, for example, `-Xmx8G` to reserve 8 Gb of memory."
  },
  {
    "question": "What recommended option should always be used with GATK for better error information?",
    "answer": "It is recommended to always use `-DGATK_STACKTRACE_ON_USER_EXCEPTION=true` with GATK, as it provides more information if the program fails."
  },
  {
    "question": "What is a key requirement for options passed to `--java-options`?",
    "answer": "All options passed to `--java-options` must be within quotation marks."
  },
  {
    "question": "How should temporary files be handled when using GATK in an sbatch job on your systems?",
    "answer": "When using GATK in an `sbatch` job, it is recommended to use the `--tmp-dir` option and set it to `${SLURM_TMPDIR}` to redirect temporary files to local storage."
  },
  {
    "question": "What option should be enabled for `GenomicsDBImport` to optimize performance on shared Posix Filesystems?",
    "answer": "When using `GenomicsDBImport`, ensure the `--genomicsdb-shared-posixfs-optimizations` option is enabled to improve usability and performance for shared Posix Filesystems (e.g., NFS, Lustre)."
  },
  {
    "question": "What should be done if `GenomicsDBImport` shared Posix filesystem optimizations are not possible or when using GNU parallel?",
    "answer": "If `GenomicsDBImport` shared Posix filesystem optimizations are not possible or if you are using GNU parallel, copy your database to `${SLURM_TMPDIR}` and run it from there to prevent IO operations from disrupting the filesystem."
  },
  {
    "question": "Why is `${SLURM_TMPDIR}` recommended for certain GATK operations?",
    "answer": "`${SLURM_TMPDIR}` is recommended because it is a local storage, offering faster performance and ensuring that IO operations do not affect other users."
  }
]