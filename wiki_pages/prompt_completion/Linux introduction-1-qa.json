[
  {
    "question": "What is the target audience for this article?",
    "answer": "This article is aimed at Windows and Mac users who have little to no experience in UNIX environments."
  },
  {
    "question": "How do connections to compute servers work?",
    "answer": "Connections to the servers use the SSH protocol, in text mode, meaning you use a console instead of a graphical interface (GUI)."
  },
  {
    "question": "Do Windows executables run on these compute servers?",
    "answer": "No, Windows executables do not run on these servers without using an emulator."
  },
  {
    "question": "Is there a self-paced course available for learning about the shell?",
    "answer": "Yes, SHARCNET offers a self-paced course titled 'Introduction to the Shell' at https://training.sharcnet.ca/courses/enrol/index.php?id=182."
  },
  {
    "question": "How can I access documentation for UNIX commands from a terminal?",
    "answer": "You can access reference manuals for UNIX commands by typing `man command` in the terminal."
  },
  {
    "question": "How do you exit the `man` program?",
    "answer": "You must press `q` to exit the `man` program."
  },
  {
    "question": "How do executables typically provide help on how to use them?",
    "answer": "Executables often contain built-in help, which can generally be invoked using the command line argument `-h`, `--help`, or in some cases, `-help`."
  },
  {
    "question": "What is the `$HOME` directory?",
    "answer": "The `$HOME` directory is the UNIX term for your user account's folder, where you are directed after connecting to the system."
  },
  {
    "question": "What does your `$HOME` directory typically contain when your account is first created?",
    "answer": "Initially, your `$HOME` directory contains only a few hidden configuration files that start with a period (.)."
  },
  {
    "question": "What is discouraged when naming files or directories on a Linux system?",
    "answer": "On a Linux system, it is strongly discouraged to create files or directories with names containing spaces or special characters, including accents."
  },
  {
    "question": "What command is used to list all files in a directory?",
    "answer": "To list all files in a directory, use the `ls` command."
  },
  {
    "question": "How do you list hidden files in a directory?",
    "answer": "To include hidden files in the listing, use `ls -a`."
  },
  {
    "question": "How can you sort directory contents by date, from newest to oldest?",
    "answer": "Use the command `ls -t` to sort results by date (from newest to oldest)."
  },
  {
    "question": "How do you obtain detailed information about all files in a directory?",
    "answer": "To get detailed information on all files (permissions, owner, group, size, and last modification date), use `ls -l`."
  },
  {
    "question": "How do you display file sizes in a human-readable format?",
    "answer": "The option `-h` gives the file sizes in human-readable format, for example, `ls -lh` or `ls -alth`."
  },
  {
    "question": "Can you combine options with the `ls` command?",
    "answer": "Yes, you can combine options, for example, `ls -alth`."
  },
  {
    "question": "What command is used to move around in the filesystem?",
    "answer": "To move about in the filesystem, use the `cd` command (change directory)."
  },
  {
    "question": "How do you change to a specific directory named `my_directory`?",
    "answer": "To change to `my_directory`, type `cd my_directory`."
  },
  {
    "question": "How do you change to the parent folder of the current directory?",
    "answer": "To change to the parent folder, type `cd ..`."
  },
  {
    "question": "How do you move back to your home directory?",
    "answer": "To move back to your home directory, simply type `cd`."
  },
  {
    "question": "What command is used to create a new directory?",
    "answer": "To create a directory, use the `mkdir` command, for example `mkdir my_directory`."
  },
  {
    "question": "What command is used to remove an empty directory?",
    "answer": "To remove an empty directory, use the `rmdir` command, for example `rmdir my_directory`."
  },
  {
    "question": "When does the `rmdir` command work for removing a directory?",
    "answer": "The `rmdir` command only works if the directory is empty."
  },
  {
    "question": "How do you delete files?",
    "answer": "You can remove files using the `rm` command, for example `rm my_file`."
  },
  {
    "question": "How do you recursively remove a directory and its contents?",
    "answer": "You can recursively remove a directory using `rm -r my_directory`."
  },
  {
    "question": "What is the purpose of the `-f` option with the `rm` command?",
    "answer": "The `-f` option with `rm` can be useful to bypass confirmation prompts and continue the operation after an error."
  },
  {
    "question": "How do you copy a file?",
    "answer": "To copy a file, use the `cp` command: `cp source_file destination_file`."
  },
  {
    "question": "How do you recursively copy a directory?",
    "answer": "To recursively copy a directory, use `cp -R source_directory destination_directory`."
  },
  {
    "question": "What command is used to rename a file or directory?",
    "answer": "To rename a file or a folder (directory), use the `mv` command (move), for example `mv source_file destination_file`."
  },
  {
    "question": "What are the three types of permissions supported by UNIX systems?",
    "answer": "UNIX systems support read (`r`), write (`w`), and execute (`x`) permissions."
  },
  {
    "question": "What do read, write, and execute permissions mean for files?",
    "answer": "For files, read permissions allow the file to be read, write permissions allow it to be modified, and execute permissions allow it to be run (if it's an executable or script)."
  },
  {
    "question": "What do read, write, and execute permissions mean for directories?",
    "answer": "For a directory, read permissions are necessary to list its contents, write permissions enable modification (adding or removing files), and execute permissions enable changing into it."
  },
  {
    "question": "To which classes of users do permissions apply?",
    "answer": "Permissions apply to three classes of users: the owner (`u`), the group (`g`), and all others or 'the world' (`o`)."
  },
  {
    "question": "How can you view the permissions associated with files and subdirectories?",
    "answer": "To know which permissions are associated with files and subdirectories of the current directory, use the command `ls -la`."
  },
  {
    "question": "What do the 10 characters at the beginning of each line from `ls -la` output represent?",
    "answer": "The 10 characters at the beginning of each line show the permissions."
  },
  {
    "question": "What does the first character of the permission string indicate?",
    "answer": "The first character indicates the file type."
  },
  {
    "question": "What does a `d` as the first character in a permission string signify?",
    "answer": "A `d` indicates that the item is a directory."
  },
  {
    "question": "What does an `l` as the first character in a permission string signify?",
    "answer": "An `l` indicates that the item is a symbolic link."
  },
  {
    "question": "What does a `-` as the first character in a permission string signify?",
    "answer": "A `-` indicates that the item is a normal file."
  },
  {
    "question": "What does `drwxrwxrwx` represent for a directory?",
    "answer": "`drwxrwxrwx` means a directory that is world-readable, world-writable, and world-executable (everyone can list, modify, and enter it)."
  },
  {
    "question": "What does `drwxr-xr-x` mean for a directory?",
    "answer": "`drwxr-xr-x` indicates a directory that can be listed and entered by everybody, but only the owner can add or remove files."
  },
  {
    "question": "What does `-rwxr-xr-x` mean for a file?",
    "answer": "`-rwxr-xr-x` indicates a world-readable and world-executable file that can only be changed by its owner."
  },
  {
    "question": "What does `-rw-r--r--` mean for a file?",
    "answer": "`-rw-r--r--` indicates a world-readable file that can only be changed by its owner."
  },
  {
    "question": "What does `-rw-rw----` mean for a file?",
    "answer": "`-rw-rw----` indicates a file that can be read and changed by its owner and by its group members."
  },
  {
    "question": "What does `-rw-------` mean for a file?",
    "answer": "`-rw-------` indicates a file that can only be read and changed by its owner."
  },
  {
    "question": "What does `drwx--x--x` mean for a directory?",
    "answer": "`drwx--x--x` means a directory that can only be listed or modified by its owner, but all others can still pass through it to deeper subdirectories."
  },
  {
    "question": "What does `drwx-wx-wx` mean for a directory?",
    "answer": "`drwx-wx-wx` means a directory that everybody can enter and modify, but only the owner can list its contents."
  },
  {
    "question": "What permissions are required in parent directories to read or write in a subdirectory?",
    "answer": "To be able to read or write in a directory, you need to have execute permissions (`x`) set in all parent directories, all the way up to the filesystem's root (`/`)."
  },
  {
    "question": "What information does the `ls -la` command provide after listing permissions?",
    "answer": "After permissions, `ls -la` gives a number, followed by the file owner's name, the file group's name, its size, last modification date, and name."
  },
  {
    "question": "What command is used to change file permissions?",
    "answer": "The `chmod` command allows you to change file permissions."
  },
  {
    "question": "How do you specify users when using the `chmod` command?",
    "answer": "You specify users using `u` for the owner, `g` for the group, `o` for other users, or `a` for all three."
  },
  {
    "question": "How do you add or remove permissions with `chmod`?",
    "answer": "Use `+` to add permissions and `-` to remove permissions, followed by the permission types (`r` for read, `w` for write, `x` for execute)."
  },
  {
    "question": "How do you prevent group members and all others from reading or modifying `secret.txt`?",
    "answer": "Use the command `chmod go-rwx secret.txt`."
  },
  {
    "question": "How do you allow everybody to read the file `public.txt`?",
    "answer": "Use the command `chmod a+r public.txt`."
  },
  {
    "question": "How do you make the file `script.sh` executable for all users?",
    "answer": "Use the command `chmod a+x script.sh`."
  },
  {
    "question": "How do you allow group members to read and write in the directory `shared`?",
    "answer": "Use the command `chmod g+rwx shared`."
  },
  {
    "question": "How do you prevent other users from reading or modifying your home directory?",
    "answer": "Use the command `chmod go-rw ~`."
  }
]