[
  {
    "question": "Qu'est-ce qu'EasyBuild ?",
    "answer": "EasyBuild est un outil pour la construction, l\u2019installation et la maintenance de logiciels sur les syst\u00e8mes de calcul de haute performance."
  },
  {
    "question": "Quelle est l'une des principales fonctionnalit\u00e9s d'EasyBuild ?",
    "answer": "Une des fonctionnalit\u00e9s principales d\u2019EasyBuild est sa capacit\u00e9 de g\u00e9n\u00e9rer automatiquement des modules d\u2019environnement qui peuvent \u00eatre utilis\u00e9s pour rendre un logiciel disponible dans une session."
  },
  {
    "question": "Quelles variables d'environnement sp\u00e9cifiques \u00e0 EasyBuild sont d\u00e9finies pour les utilisateurs ?",
    "answer": "EasyBuild d\u00e9finit `EBROOT<name>` qui contient le chemin complet du r\u00e9pertoire o\u00f9 se trouve le logiciel `<name>`, et `EBVERSION<name>` qui contient la version compl\u00e8te du logiciel `<name>` charg\u00e9 par le module."
  },
  {
    "question": "Donnez un exemple des variables d'environnement d\u00e9finies pour le module `python/3.10.2`.",
    "answer": "Pour le module `python/3.10.2` sur Narval, `EBROOTPYTHON` est `/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.10.2` et `EBVERSIONPYTHON` est `3.10.2`."
  },
  {
    "question": "Comment peut-on conna\u00eetre les variables d'environnement sp\u00e9cifiques \u00e0 EasyBuild d\u00e9finies par un module comme `python/3.10.2` ?",
    "answer": "Pour conna\u00eetre les variables d\u2019environnement d\u00e9finies par le module `python/3.10.2`, utilisez la commande `module show python/3.10.2 | grep EB`."
  },
  {
    "question": "O\u00f9 EasyBuild conserve-t-il les recettes d'installation et les journaux des paquets logiciels ?",
    "answer": "EasyBuild conserve une copie de la recette utilis\u00e9e pour installer chaque paquet logiciel et un journal d\u00e9taill\u00e9 dans le r\u00e9pertoire d\u2019installation `$EBROOT<name>/easybuild`."
  },
  {
    "question": "Quels fichiers trouve-t-on dans le r\u00e9pertoire `$EBROOTPYTHON/easybuild` pour le module `python/3.10.2` ?",
    "answer": "Pour le module `python/3.10.2`, le r\u00e9pertoire d\u2019installation contient `$EBROOTPYTHON/easybuild/Python-3.10.2.eb` et `$EBROOTPYTHON/easybuild/easybuild-Python-3.10.2-*.log`."
  },
  {
    "question": "Est-il recommand\u00e9 d'utiliser EasyBuild pour installer des logiciels dans son propre compte ?",
    "answer": "Non, dans la plupart des cas, il est pr\u00e9f\u00e9rable de demander au soutien technique d\u2019installer ces logiciels pour un usage g\u00e9n\u00e9ralis\u00e9, car cela rendra le paquet disponible sur toutes les grappes, \u00e9vitera d\u2019affecter votre quota et ne causera pas une charge indue sur le syst\u00e8me de fichiers parall\u00e8le."
  },
  {
    "question": "Dans quels cas est-il justifi\u00e9 d'utiliser EasyBuild pour installer un logiciel dans son r\u00e9pertoire /home ?",
    "answer": "Il est justifi\u00e9 d'utiliser EasyBuild pour installer un logiciel dans votre r\u00e9pertoire /home si vous avez besoin d\u2019un logiciel modifi\u00e9 ou personnalis\u00e9, si vous avez besoin d\u2019installer un logiciel qui change chaque jour ou n\u2019a pas de num\u00e9ro de version, ou s'il n'est pas possible d'installer le paquet pour utilisation g\u00e9n\u00e9ralis\u00e9e pour des raisons de licence (ex: VASP, Materials Studio)."
  },
  {
    "question": "Dans quelles situations ne faut-il pas installer des paquets logiciels dans son propre espace avec EasyBuild ?",
    "answer": "Il ne faut pas installer de paquets logiciels dans votre propre espace si vous avez besoin d\u2019une version diff\u00e9rente ou si vous avez besoin d\u2019un paquet logiciel construit avec un compilateur diff\u00e9rent, avec MPI ou avec une impl\u00e9mentation CUDA."
  },
  {
    "question": "Que faire en cas d'h\u00e9sitation concernant l'installation d'un logiciel avec EasyBuild ?",
    "answer": "En cas d'h\u00e9sitation, il faut contacter le soutien technique."
  },
  {
    "question": "Qu'est-ce qu'une recette EasyBuild ?",
    "answer": "Une recette est un fichier EasyConfig au format texte qui contient l\u2019information dont EasyBuild a besoin pour construire un logiciel donn\u00e9 dans un environnement donn\u00e9."
  },
  {
    "question": "Quelle est la convention de nommage pour les recettes EasyBuild ?",
    "answer": "La convention de nommage est `<name>-<version>-<toolchain name>-<toolchain version>.eb`, o\u00f9 `<name>` est le nom du paquet, `<version>` est la version du paquet, `<toolchain name>` est le nom de la cha\u00eene de compilation et `<toolchain version>` est la version de la cha\u00eene de compilation."
  },
  {
    "question": "Quelle est la meilleure fa\u00e7on de trouver une recette EasyBuild fonctionnelle ?",
    "answer": "La meilleure fa\u00e7on d\u2019avoir une recette qui fonctionne est de commencer avec une des recettes que nous avons install\u00e9es, que l'on peut trouver dans le r\u00e9pertoire d'installation ou dans le r\u00e9pertoire `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO`."
  },
  {
    "question": "Qu'est-ce qu'une cha\u00eene de compilation (toolchain) dans le contexte d'EasyBuild ?",
    "answer": "Une cha\u00eene de compilation est un ensemble form\u00e9 d\u2019un compilateur, d\u2019une impl\u00e9mentation MPI, d\u2019une version de CUDA et de biblioth\u00e8ques math\u00e9matiques; cet ensemble sert \u00e0 compiler le paquet logiciel."
  },
  {
    "question": "Donnez un exemple de nom de cha\u00eene de compilation et sa signification.",
    "answer": "Un exemple est `gofbc`, qui est une combinaison de GCC, OpenMPI, FlexiBlas et CUDA."
  },
  {
    "question": "Est-il n\u00e9cessaire de m\u00e9moriser la composition exacte d'une cha\u00eene de compilation ?",
    "answer": "Non, il n\u2019est pas n\u00e9cessaire de se souvenir de la composition d\u2019une cha\u00eene parce qu'elles-m\u00eames ont des recettes qu\u2019on trouve dans le r\u00e9pertoire `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO`."
  },
  {
    "question": "Quels sont les composants de la cha\u00eene de compilation `gofbc` version `2020.1.403.114` ?",
    "answer": "La cha\u00eene `gofbc` version `2020.1.403.114` contient GCC 9.3.0, OpenMPI 4.0.3, CUDA 11.4 et FlexiBLAS 3.0.4."
  },
  {
    "question": "Quelle est la relation entre les cha\u00eenes de compilation `gofbc`, `gompic` et `gccflexiblascuda` ?",
    "answer": "La cha\u00eene `gofbc` est un surensemble des cha\u00eenes `gompic` et `gccflexiblascuda`. Les paquets logiciels construits avec le surensemble `gofbc` peuvent d\u00e9pendre de paquets logiciels construits avec les sous-cha\u00eenes `gompic` et `gccflexiblascuda`."
  },
  {
    "question": "Comment installer un logiciel avec EasyBuild une fois qu'une recette est trouv\u00e9e ?",
    "answer": "Une fois une recette satisfaisante trouv\u00e9e, copiez-la du r\u00e9pertoire `/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/$EBVERSIONGENTOO`, modifiez-la au besoin, puis lancez la commande `eb <recipe.eb>`."
  },
  {
    "question": "O\u00f9 les logiciels sont-ils install\u00e9s par d\u00e9faut lorsque la commande `eb <recipe.eb>` est utilis\u00e9e ?",
    "answer": "Le logiciel est install\u00e9 dans votre r\u00e9pertoire /home, plus pr\u00e9cis\u00e9ment dans `$HOME/.local/easybuild`."
  },
  {
    "question": "Que faut-il faire apr\u00e8s l'installation d'un logiciel avec EasyBuild pour pouvoir l'utiliser ?",
    "answer": "Quand l\u2019installation est termin\u00e9e, il faut fermer votre session et se reconnecter \u00e0 la grappe pour que le logiciel puisse \u00eatre charg\u00e9 avec un module."
  },
  {
    "question": "Comment r\u00e9installer une version existante d'un logiciel EasyBuild avec des param\u00e8tres modifi\u00e9s ?",
    "answer": "Si vous r\u00e9installez une version existante install\u00e9e pour usage g\u00e9n\u00e9ralis\u00e9 avec des param\u00e8tres modifi\u00e9s, vous devrez utiliser la commande `eb <recipe.eb> --force` pour installer une version locale dans votre r\u00e9pertoire /home."
  },
  {
    "question": "Comment installer un logiciel EasyBuild dans un r\u00e9pertoire autre que /home, comme /project ?",
    "answer": "Pour installer un paquet logiciel dans votre espace /project, par exemple, utilisez la commande `eb <recipe.eb> --installpath /path/to/your/project/easybuild`."
  },
  {
    "question": "Comment rendre les modules install\u00e9s localement (par exemple, dans /project) disponibles dans les sessions ?",
    "answer": "Pour que ces modules soient disponibles dans vos sessions, utilisez la commande `export RSNT_LOCAL_MODULEPATHS=/path/to/your/project/easybuild/modules`."
  },
  {
    "question": "Comment rendre les modules install\u00e9s localement disponibles par d\u00e9faut dans toutes les sessions ?",
    "answer": "Pour que ces modules soient disponibles par d\u00e9faut dans vos sessions, ajoutez la commande `export RSNT_LOCAL_MODULEPATHS=/path/to/your/project/easybuild/modules` au fichier `.bashrc` de votre r\u00e9pertoire /home."
  }
]