[
  {
    "question": "What is AlphaFold?",
    "answer": "AlphaFold is a machine learning model designed for the prediction of protein folding."
  },
  {
    "question": "Which version of AlphaFold is discussed on this page?",
    "answer": "This page discusses AlphaFold v2.0, the version that was entered in CASP14 and published in Nature."
  },
  {
    "question": "Where can I find the source code and documentation for AlphaFold?",
    "answer": "The source code and documentation for AlphaFold are available on its GitHub page."
  },
  {
    "question": "How should I cite AlphaFold if I use its source code or model parameters in a publication?",
    "answer": "Any publication arising from the use of AlphaFold's source code or model parameters should cite the AlphaFold paper."
  },
  {
    "question": "How can I list the available versions of AlphaFold on the clusters?",
    "answer": "You can list the available versions of AlphaFold by using the command `avail_wheels alphafold --all-versions`."
  },
  {
    "question": "What are some of the AlphaFold versions available on the clusters?",
    "answer": "Available AlphaFold versions include 2.3.1, 2.3.0, 2.2.4, 2.2.3, 2.2.2, 2.2.1, 2.1.1, and 2.0.0, all for Python 3."
  },
  {
    "question": "What dependencies need to be loaded to install AlphaFold?",
    "answer": "To install AlphaFold, you need to load the following modules: `StdEnv/2020 gcc/9.3.0 openmpi/4.0.3 cuda/11.4 cudnn/8.2.0 kalign/2.03 hmmer/3.2.1 openmm-alphafold/7.5.1 hh-suite/3.3.0 python/3.8`."
  },
  {
    "question": "Which Python versions are supported by AlphaFold as of July 2022?",
    "answer": "As of July 2022, only Python 3.7 and 3.8 are supported for AlphaFold."
  },
  {
    "question": "How do I create a Python virtual environment for AlphaFold?",
    "answer": "You can create a Python virtual environment by running `virtualenv --no-download ~/alphafold_env`."
  },
  {
    "question": "How do I activate the AlphaFold Python virtual environment?",
    "answer": "Activate the virtual environment by running `source ~/alphafold_env/bin/activate`."
  },
  {
    "question": "How do I install a specific version of AlphaFold within the virtual environment?",
    "answer": "After upgrading pip, you can install a specific version using `pip install --no-index alphafold==X.Y.Z`, replacing `X.Y.Z` with the desired version (e.g., `2.2.4`)."
  },
  {
    "question": "How can I install the latest available version of AlphaFold?",
    "answer": "To install the latest version, you can omit specifying the version number: `pip install --no-index alphafold`."
  },
  {
    "question": "How can I validate the AlphaFold installation?",
    "answer": "You can validate the installation by running `run_alphafold.py --help` within the activated virtual environment."
  },
  {
    "question": "How do I freeze the AlphaFold environment and save its requirements?",
    "answer": "To freeze the environment and requirements, use the command `pip freeze > ~/alphafold-requirements.txt`."
  },
  {
    "question": "Does AlphaFold require external databases?",
    "answer": "Yes, AlphaFold requires a set of databases to function."
  },
  {
    "question": "Where are AlphaFold databases available on CVMFS?",
    "answer": "The AlphaFold databases are available in `/cvmfs/bio.data.computecanada.ca/content/databases/Core/alphafold2_dbs/`."
  },
  {
    "question": "Are AlphaFold databases on CVMFS updated?",
    "answer": "Yes, AlphaFold databases on CVMFS undergo yearly updates."
  },
  {
    "question": "How can I access the AlphaFold database updated in January 2024?",
    "answer": "You can access the January 2024 updated database by exporting `DOWNLOAD_DIR=/cvmfs/bio.data.computecanada.ca/content/databases/Core/alphafold2_dbs/2024_01/`."
  },
  {
    "question": "Can I download AlphaFold databases to my local `$SCRATCH` directory?",
    "answer": "Yes, you can choose to download the databases locally into your `$SCRATCH` directory."
  },
  {
    "question": "What is an important requirement for the location of AlphaFold databases?",
    "answer": "The databases must reside in the `$SCRATCH` directory."
  },
  {
    "question": "What are the initial steps to download AlphaFold data locally?",
    "answer": "First, create a data folder by setting `export DOWNLOAD_DIR=$SCRATCH/alphafold/data` and then `mkdir -p $DOWNLOAD_DIR`."
  },
  {
    "question": "How do I download all AlphaFold data after setting up the directory?",
    "answer": "With your modules loaded and virtual environment activated, run `download_all_data.sh $DOWNLOAD_DIR`."
  },
  {
    "question": "From which node type should AlphaFold data downloading be performed?",
    "answer": "This step cannot be done from a compute node; it should be done on a data transfer node (DTN) or a login node."
  },
  {
    "question": "What is recommended when downloading AlphaFold data, given it can take a full day?",
    "answer": "It is suggested to use a terminal multiplexer because the download can take up to a full day."
  },
  {
    "question": "What is the recommended `DOWNLOAD_DIR` setting for Graham clusters?",
    "answer": "For Graham clusters, you should set `export DOWNLOAD_DIR=/datashare/alphafold`."
  },
  {
    "question": "What is the approximate total size of the AlphaFold 2.3 database structure?",
    "answer": "The AlphaFold 2.3 database structure is approximately 2.6 TB in total."
  },
  {
    "question": "What is the approximate total size of the AlphaFold 2.2 database structure?",
    "answer": "The AlphaFold 2.2 database structure is approximately 2.2 TB in total, with about 428 GB downloaded."
  },
  {
    "question": "What is the maximum number of CPU cores recommended for running AlphaFold and why?",
    "answer": "You should request at most 8 CPU cores when running AlphaFold because it is hardcoded not to use more and does not benefit from additional cores."
  },
  {
    "question": "What are the common SBATCH directives found in AlphaFold submission scripts?",
    "answer": "Common SBATCH directives include `--job-name`, `--account`, `--time`, `--cpus-per-task=8`, `--mem`, and `--gres=gpu:1` for GPU jobs."
  },
  {
    "question": "What is a notable change in database path options between AlphaFold 2.2 and 2.3?",
    "answer": "The `--uniclust30_database_path` option in AlphaFold 2.2 was renamed to `--uniref30_database_path` in version 2.3."
  }
]