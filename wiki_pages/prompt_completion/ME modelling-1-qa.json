[
  {
    "question": "What are ME-models?",
    "answer": "ME-models (Metabolism and Expression models) are mathematical knowledgebases that integrate information on both the expression machinery and metabolism of a cell and are capable of generating predictions of phenotype."
  },
  {
    "question": "How are ME-models formulated and solved?",
    "answer": "They are formulated as optimization problems where a bisection method finds the optimum growth rate and proteome allocation."
  },
  {
    "question": "Why is an efficient computing approach necessary for ME-models?",
    "answer": "Solving these complex methods requires an efficient computing approach that is best obtained in low-level programming languages."
  },
  {
    "question": "What does the solveME Python wrapper utilize for efficiency?",
    "answer": "The solveME Python wrapper allows the utilization of Fortran efficiency and the qMinos solver."
  },
  {
    "question": "What functionality does the CobraME package provide?",
    "answer": "The CobraME package provides useful functions to build and solve ME models with the ease of Python."
  },
  {
    "question": "Which specific ME-model of Escherichia coli can the EcoliME package construct?",
    "answer": "The EcoliME package provides the ability to construct the iJL1678b ME-model of Escherichia coli."
  },
  {
    "question": "What is the recommended method for managing dependencies in the ME-modelling environment?",
    "answer": "The ME-modelling environment dependencies are most easily managed by using a Python Virtual environment."
  },
  {
    "question": "What Python version is used in the provided steps for setting up a virtual environment with virtualenv?",
    "answer": "The provided steps for setting up a virtual environment use Python2 using the virtualenv software."
  },
  {
    "question": "What alternatives are there for creating a virtual environment besides virtualenv?",
    "answer": "Conda or venv would also work for creating a virtual environment."
  },
  {
    "question": "What is the suggested initial step for organizing ME-modelling related packages?",
    "answer": "It is suggested to create a folder containing all ME-modelling related packages."
  },
  {
    "question": "How do you install virtualenv for Python 2.7.14 according to the document?",
    "answer": "First, load python/2.7.14 using `ml python/2.7.14`, then run `pip install virtualenv \u2013user`."
  },
  {
    "question": "How do you create a virtual environment named 'ME_env' using a specific Python 2.7.15 executable?",
    "answer": "After navigating into your 'ME_modelling' directory, run `virtualenv -p /home/username/opt/python-2.7.15/bin/python ME_env`."
  },
  {
    "question": "What command is used to activate the ME_env virtual environment?",
    "answer": "The virtual environment is activated by running `source ME_env/bin/activate`."
  },
  {
    "question": "What initial Python dependencies are required to be installed in the virtual environment, including a specific version of more-itertools?",
    "answer": "The required dependencies are `pandas`, `sympy`, and `more-itertools==5.0.0`."
  },
  {
    "question": "Why is more-itertools==5.0.0 specified for installation?",
    "answer": "More-itertools==5.0.0 is specified because it is the last Python2.7 supported version."
  },
  {
    "question": "What is an important requirement for the Python compiler when setting up the ME-modelling environment?",
    "answer": "The Python compiler should be GCC > 5.4.0."
  },
  {
    "question": "How do you install the necessary version of numpy?",
    "answer": "Numpy is installed using `pip install git+https://github.com/numpy/numpy@v1.14.0`."
  },
  {
    "question": "How is cobrapy==0.5.11 installed, given it's not available via pip install?",
    "answer": "Cobrapy==0.5.11 is obtained from GitHub by running `git clone https://github.com/opencobra/cobrapy.git`, then navigating into the `cobrapy-0.5.11` directory and executing `python setup.py develop`."
  },
  {
    "question": "How can solvemepy be obtained from GitHub?",
    "answer": "Solvemepy can be obtained from GitHub by running `git clone https://github.com/SBRG/solvemepy.git`."
  },
  {
    "question": "How can the quadMinos solver be obtained for academic use?",
    "answer": "The quadMinos solver can be obtained for academic use from Professor Michael Saunders at Stanford University."
  },
  {
    "question": "Where can the installation steps for compiling the quadMinos solver be found?",
    "answer": "The installation steps for compiling the solver can be found at `https://github.com/SBRG/solvemepy`."
  },
  {
    "question": "What are the commands to install solvemepy after obtaining it?",
    "answer": "Navigate into the `solvemepy` directory and run `python setup.py develop`."
  },
  {
    "question": "How do you get and install CobraME?",
    "answer": "CobraME is obtained by running `git clone https://github.com/SBRG/cobrame.git`, navigating into the `cobrame` directory, and then running `python setup.py develop`."
  },
  {
    "question": "How do you get and install EcoliME?",
    "answer": "EcoliME is obtained by running `git clone https://github.com/SBRG/ecolime.git`, navigating into the `ecolime` directory, and then running `python setup.py develop`."
  },
  {
    "question": "Which package provides all the necessary scripts and files to build a complete ME-model for Escherichia coli from scratch?",
    "answer": "Cobrame conveniently contains all scripts and files required to build a complete ME-model for Escherichia coli from scratch."
  },
  {
    "question": "What are the two ways an ME-model can be built?",
    "answer": "An ME-model can be built from either a Jupyter notebook or a Python script."
  },
  {
    "question": "How do you prepare a virtual environment to run in Jupyter Lab or Jupyter Notebook?",
    "answer": "In the activated virtual environment, first run `pip install ipykernel`, then `ipython kernel install --user --name=ME_env_name`."
  },
  {
    "question": "Where can one find the Jupyter notebook for building the iJL1768b E. coli ME-model?",
    "answer": "The Jupyter notebook for building the iJL1768b E. coli ME-model is located at `https://github.com/SBRG/ecolime/blob/master/ecolime/build_me_model.ipynb`."
  },
  {
    "question": "Where can one find the Jupyter notebook for solving the E. coli ME-model?",
    "answer": "The Jupyter notebook for solving the ME-model is located at `https://github.com/SBRG/ecolime/blob/master/ecolime/solve_demo.ipynb`."
  },
  {
    "question": "Is the section on 'Using the ME model' complete?",
    "answer": "No, the section 'Using the ME model' has yet to be completed."
  }
]