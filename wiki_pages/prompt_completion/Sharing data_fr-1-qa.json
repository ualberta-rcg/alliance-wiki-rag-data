[
  {
    "question": "What `chmod` command should never be used due to security risks, especially in `/home` directories?",
    "answer": "You should never use the command `chmod -R 777` in your directories, and especially not in your `/home` directory."
  },
  {
    "question": "Why is `chmod -R 777` considered an unacceptable security risk on shared computing systems?",
    "answer": "It would pose an enormous security risk to your data and is unacceptable on shared systems like computing clusters. Additionally, this command is never truly necessary."
  },
  {
    "question": "What is the recommended approach for sharing data with a member of your research group?",
    "answer": "The best approach is to use the `/project` space, which is available to group members."
  },
  {
    "question": "Who should be contacted if you need to create a new research group for national clusters?",
    "answer": "You should communicate with technical support, as users cannot create their own groups."
  },
  {
    "question": "How can data be shared with someone who does not have an account on the cluster being used?",
    "answer": "You can create a common drop-off point in Globus."
  },
  {
    "question": "What is the simplest way to share data with another user who has an account on the same cluster but is not part of your group?",
    "answer": "The simplest way is to use the permissions of the file system."
  },
  {
    "question": "What access permission is required for all parent directories to allow another user to access a specific file?",
    "answer": "The other user must have execute permission on all directories from the root (e.g., `/scratch` or `/project`) down to the directory containing the file."
  },
  {
    "question": "What does the Linux kernel verify when a user attempts to interact with a file or directory?",
    "answer": "The Linux kernel checks the permissions. If the action is not allowed, a message indicates that permission is not granted."
  },
  {
    "question": "What are the three categories of users for file and directory objects in a file system?",
    "answer": "The three categories are the owner of the object, the members of the object's group, and all other users."
  },
  {
    "question": "What types of permissions can be associated with files and directories?",
    "answer": "Permissions for reading (r), writing (w), and executing (x) can be associated with each object."
  },
  {
    "question": "Which command is used to display the permissions associated with a file or directory?",
    "answer": "You use the command `ls -l name_of_object` to display permissions."
  },
  {
    "question": "In `ls -l` output, what does `-rw-r--r--` signify about an object's permissions?",
    "answer": "It signifies that the owner has read and write permissions, while members of the group and all other users only have read permission."
  },
  {
    "question": "How do you modify the permissions associated with a file or directory?",
    "answer": "You use the `chmod` command, followed by the user category, then a plus (+) or minus (-) sign to allocate or remove permission, and finally the permission type (r, w, or x)."
  },
  {
    "question": "What do the `u`, `g`, `o`, and `a` categories represent when using the `chmod` command?",
    "answer": "`u` represents the owner (user), `g` represents the group, `o` represents others, and `a` represents all users."
  },
  {
    "question": "What is the effect of the command `chmod g+r file.txt`?",
    "answer": "It grants read permission to all members of the group to which `file.txt` belongs."
  },
  {
    "question": "What does the command `chmod o-x script.py` do?",
    "answer": "It removes the execute permission for `script.py` for all users except the owner and the group."
  },
  {
    "question": "If you want all users on the cluster to be able to read `file.txt`, what `chmod` command would you use?",
    "answer": "You would use the command `chmod a+r file.txt`."
  }
]