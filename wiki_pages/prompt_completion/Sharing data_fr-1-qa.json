[
  {
    "question": "Which `chmod` command should never be used in your directories, especially `/home`, on shared systems?",
    "answer": "You should never use the command `chmod -R 777` in your directories, especially not in your `/home` directory, on shared systems."
  },
  {
    "question": "Why is `chmod -R 777` unacceptable on shared computing clusters?",
    "answer": "It represents an enormous security risk to your data and is unacceptable on shared systems like computing clusters."
  },
  {
    "question": "What is the recommended way to share data with a member of your research group?",
    "answer": "The best approach is to use the `/project` space available to the group members."
  },
  {
    "question": "Who should be contacted to create a new group for national clusters?",
    "answer": "You should contact technical support, as users cannot create their own groups."
  },
  {
    "question": "How can data be shared with someone who does not have an account on the cluster?",
    "answer": "You can create a common drop-off point in Globus."
  },
  {
    "question": "What is the simplest way to share data with another user who has an account on the same cluster but is not part of your group?",
    "answer": "The simplest way is to use the file system permissions."
  },
  {
    "question": "What permission is required for a user to access a shared file located within `/scratch` or `/project`?",
    "answer": "The user must have execution permission for all directories from the root directory (e.g., `/scratch` or `/project`) up to the directory containing the file."
  },
  {
    "question": "What functionalities do file systems on computing clusters offer for files and directories?",
    "answer": "They offer functionalities to read, write, and execute files and directories."
  },
  {
    "question": "What does the Linux kernel do when a user attempts to access a file or directory?",
    "answer": "The Linux kernel first checks the permissions. If the action is not possible, a message indicates that permission is not granted."
  },
  {
    "question": "What are the three categories of users for file or directory objects?",
    "answer": "The three categories are the object's owner, the object's group members, and all other users."
  },
  {
    "question": "What types of permissions can be associated with each user category?",
    "answer": "Read (r), write (w), and execute (x) permissions can be associated with each user category."
  },
  {
    "question": "How many possible permissions can be associated with each file system object?",
    "answer": "There are nine possible permissions (three categories of users and three types of permissions)."
  },
  {
    "question": "Which command is used to display the permissions associated with an object?",
    "answer": "The command `ls -l name_of_object` is used to display permissions."
  },
  {
    "question": "What does the permission string `-rw-r--r--` signify?",
    "answer": "It signifies that the owner has read and write permissions, while group members and all other users have only read permission."
  },
  {
    "question": "Which command is used to modify permissions for a file or directory?",
    "answer": "The `chmod` command is used to modify permissions."
  },
  {
    "question": "What do the `u`, `g`, `o`, and `a` categories represent when using `chmod`?",
    "answer": "`u` is for the owner (user), `g` is for the group, `o` is for others, and `a` is for all users."
  },
  {
    "question": "What does the command `chmod g+r file.txt` do?",
    "answer": "It grants read permission to all members of the group that owns `file.txt`."
  },
  {
    "question": "What is the effect of the command `chmod o-x script.py`?",
    "answer": "It removes execute permission for `script.py` from all users except the owner and the group."
  }
]