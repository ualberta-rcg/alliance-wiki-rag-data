[
  {
    "question": "What happens if the 'structureCommands' file is not present when 'create_strauto_slurm_scripts.py' is run?",
    "answer": "If the 'structureCommands' file does not exist, the 'create_strauto_slurm_scripts.py' script will print an error message, instruct the user to run './strauto_1.py' first, and then exit."
  },
  {
    "question": "What directories are created by the 'create_strauto_slurm_scripts.py' script?",
    "answer": "The script creates the 'slurm_scripts', 'results_f', 'log', and 'harvester' directories. It also creates individual 'kn' (e.g., k1, k2) and 'log/kn' directories for each k-value derived from the Structure runs."
  },
  {
    "question": "How does the 'submit_strauto_jobs.sh' script prevent overloading the scheduler?",
    "answer": "The 'submit_strauto_jobs.sh' helper script includes a 'sleep 0.5s' command before each 'sbatch' submission to introduce a delay between jobs."
  },
  {
    "question": "What is the name of the submission helper script generated by 'create_strauto_slurm_scripts.py'?",
    "answer": "The submission helper script is named 'submit_strauto_jobs.sh'."
  },
  {
    "question": "What is the primary purpose of the 'post_strauto.sh' script?",
    "answer": "The 'post_strauto.sh' script is designed to aggregate the results of the Structure runs, execute 'structureHarvester.py' for analysis, and then clean up temporary files by zipping the harvester input and removing the input directory."
  },
  {
    "question": "What command is used to run StructureHarvester within the 'post_strauto.sh' script?",
    "answer": "The command used is './structureHarvester.py --dir harvester_input --out harvester --evanno --clumpp'."
  },
  {
    "question": "How are the input files for StructureHarvester prepared by the 'post_strauto.sh' script?",
    "answer": "The 'post_strauto.sh' script first creates a directory named 'harvester_input', then copies all files matching the pattern 'results_f/k*/*_f' into this 'harvester_input' directory."
  },
  {
    "question": "What happens to the 'harvester_input' directory after StructureHarvester has completed its run?",
    "answer": "After StructureHarvester finishes, the contents of 'harvester_input' are zipped into a file named '{DATASET:}_Harvester_Upload.zip', this zip file is moved to the 'harvester/' directory, and then the original 'harvester_input' directory is removed."
  },
  {
    "question": "How does 'create_strauto_slurm_scripts.py' process the 'structureCommands' file?",
    "answer": "The script reads each line from 'structureCommands', extracts job details like K-value, job name, and dataset using a regular expression, modifies the 'structure' command by replacing './structure' with 'structure', and then uses this information to create and write individual SLURM job scripts."
  },
  {
    "question": "What does the 'post_strauto.sh' script do with the directories specified by 'KLIST'?",
    "answer": "The 'post_strauto.sh' script moves the directories listed in 'KLIST' into the 'results_f/' directory."
  }
]