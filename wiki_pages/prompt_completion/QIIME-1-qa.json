[
  {
    "question": "What does QIIME stand for?",
    "answer": "QIIME stands for Quantitative Insights Into Microbial Ecology."
  },
  {
    "question": "What is QIIME?",
    "answer": "QIIME is an open-source bioinformatics pipeline designed for performing microbiome analysis from raw DNA sequencing data, leading to publication-quality graphics and statistics."
  },
  {
    "question": "What types of analyses can QIIME perform?",
    "answer": "QIIME can perform demultiplexing and quality filtering, OTU picking, taxonomic assignment, phylogenetic reconstruction, diversity analyses, and visualizations."
  },
  {
    "question": "Is QIIME 1 still supported?",
    "answer": "No, QIIME 1 is no longer supported as of January 1, 2018, having been replaced by QIIME 2."
  },
  {
    "question": "Which installation methods for QIIME are no longer supported as of February 2020?",
    "answer": "Installation using Anaconda or Miniconda is no longer supported due to issues with Conda environments on HPC systems."
  },
  {
    "question": "How can I check which versions of QIIME2 are available as a module?",
    "answer": "You can check available versions by running the command `module spider qiime2`."
  },
  {
    "question": "After loading the QIIME2 module, how do I get help or see available commands?",
    "answer": "After loading the module, you can run `qiime --help`."
  },
  {
    "question": "Why might I need to define the APPTAINER_BIND environment variable when using the QIIME2 module?",
    "answer": "You may need to define `APPTAINER_BIND` because the `qiime` command is calling a container, and this variable is used to bind specific folders within the container to access your data."
  },
  {
    "question": "What is an example of setting APPTAINER_BIND?",
    "answer": "An example is `APPTAINER_BIND=/home qiime ...` to bind the /home directory."
  },
  {
    "question": "What are the recommended installation methods for QIIME2?",
    "answer": "QIIME2 can be installed using Apptainer or EasyBuild."
  },
  {
    "question": "Which QIIME2 installation method is preferred and why?",
    "answer": "Apptainer is strongly preferred because it avoids generating many thousands of files in your /home directory, which can help prevent exceeding disk quota limits."
  },
  {
    "question": "How do you build an Apptainer image for QIIME2 from Quay.io?",
    "answer": "First, load the apptainer module (`module load apptainer`), then build the image using a command like `apptainer build qiime2-2021.11.sif docker://quay.io/qiime2/core:2021.11`."
  },
  {
    "question": "How long does building an Apptainer image for QIIME2 typically take?",
    "answer": "The build step may take over an hour."
  },
  {
    "question": "How often do I need to build an Apptainer image for QIIME2?",
    "answer": "You only need to build the Apptainer image once, and then you can save and reuse the image file."
  },
  {
    "question": "How do you run a QIIME command using an Apptainer image?",
    "answer": "You typically run each QIIME command within an `apptainer exec` statement, such as `apptainer exec qiime2-2021.11.sif <your QIIME command>`."
  },
  {
    "question": "What is the purpose of the `-B` option when running Apptainer commands?",
    "answer": "The `-B` (bind) option is important to explicitly bind folders from your host system into the container, allowing your programs inside the container to access your data."
  },
  {
    "question": "What is a common error encountered when importing data into QIIME format and how is it resolved?",
    "answer": "A common error is a timezone offset mismatch (`Timezone offset does not match system offset: 0 != -18000`). This can be resolved by setting the time zone to UTC before invoking Apptainer, using `export TZ='UTC'`."
  }
]