[
  {
    "question": "What is the recommended corrective action if a multiprocessor task requests 24 CPU cores but only uses 16?",
    "answer": "The recommended corrective action is to change `#SBATCH --ntasks=24` to `#SBATCH --ntasks=16` in the submission script, as the CPU usage graph would show only 16 active cores out of 24 requested."
  },
  {
    "question": "What should be done if the memory requested for a multiprocessor task is excessive?",
    "answer": "It would be judicious to conduct a test by reducing the `--mem-per-cpu` value, for instance, to `#SBATCH --mem-per-cpu=1G`."
  },
  {
    "question": "How can the number of active threads for a multiprocessor task be determined from the 'Processes and threads' graph if the points overlap?",
    "answer": "By individually selecting each execution thread in the 'Processes and threads' graph, a total number of active threads can be determined. This count serves as a complementary method to estimate the actual number of cores needed for the multiprocessor task."
  },
  {
    "question": "How can you identify if you have requested resources for a multiprocessor task that is not multithreaded and uses `--cpus-per-task > 1`?",
    "answer": "This error is identified by the use of `#SBATCH --cpus-per-task > 1`. For a non-multithreaded multiprocessor task (which uses only one thread per process), only one core per process is required. Any additional allocated cores will remain unused, as each process can only utilize one thread. This is visible in the CPU usage graph (only half of the cores are active) and by comparing the number of allocated cores per node (in the Resources section) with the number of active threads (in the Processes and threads graph), where there will be twice fewer active threads than allocated cores."
  },
  {
    "question": "What does the CPU usage graph show if a non-multithreaded multiprocessor task is submitted with `--cpus-per-task=2`?",
    "answer": "The CPU usage graph will show that only half of the allocated cores are active, because each process only utilizes one of the two allocated cores, leaving the other unused."
  },
  {
    "question": "What is a suggestion for optimizing memory allocation if a non-multithreaded multiprocessor task uses `--cpus-per-task=2` and has excessive memory requested?",
    "answer": "To limit the excessive memory margin, the `--mem-per-cpu` value could be reduced, for example, to `#SBATCH --mem-per-cpu=2g`."
  },
  {
    "question": "How can comparing allocated cores and active threads in the portal help identify wasted resources for a non-multithreaded multiprocessor task using `--cpus-per-task=2`?",
    "answer": "By comparing the number of cores allocated per node (visible in the Resources section of the Portal) with the number of active execution threads (displayed in the 'Processes and threads' graph). If, for instance, node nc30408 has 16 allocated cores but only 8 active threads, it indicates that each process uses only one thread, leaving the other core unused."
  }
]