[
  {
    "question": "What is the basis for SSH security?",
    "answer": "SSH relies on public key cryptography (PK) for its security."
  },
  {
    "question": "What does a key pair consist of in public key cryptography?",
    "answer": "PK is based on a key pair, which consists of a private part, to be kept secret, and a public part, which can be distributed freely."
  },
  {
    "question": "How is asymmetric encryption related to public key cryptography?",
    "answer": "Anyone can use the public key to encode a message, but the message can only be decoded with the private part. This is why PK is sometimes described as asymmetric encryption."
  },
  {
    "question": "How can public key cryptography be used to verify identities?",
    "answer": "If someone is claiming to be Alice, then a second party, Bob, can send Alice a message encoded with Alice's public key. If the person claiming to be Alice can tell Bob what is in the message, then that person has access to Alice's private key. In this sense, possession of a private key establishes identity."
  },
  {
    "question": "Which internet protocols use public key systems?",
    "answer": "PK systems are the basis for the SSL and TLS protocols that protect most internet traffic, such as HTTPS websites."
  },
  {
    "question": "How is public key cryptography used in SSH when connecting to systems?",
    "answer": "When connecting to our systems, your SSH client normally uses our system's public key to ensure that it has connected to the real (authentic) server."
  },
  {
    "question": "How does public key cryptography secure SSH sessions?",
    "answer": "PK is used to establish an encrypted session so that all following traffic is secure from eavesdropping."
  },
  {
    "question": "How does a remote server verify a user's identity using public key cryptography for login?",
    "answer": "The remote server can use your public key to verify your identity, that is, to allow you to log in."
  },
  {
    "question": "Why is using public key cryptography recommended for connecting to systems?",
    "answer": "We strongly recommend using PK to connect to our systems. Using PK is almost always more secure than using a password."
  },
  {
    "question": "What is the first step required to use public key cryptography for SSH?",
    "answer": "To use PK, you must generate a key pair and install the public key on the systems you intend to connect with."
  },
  {
    "question": "Where should an SSH key pair be generated?",
    "answer": "You should generate a key pair on your own system, or on a system you believe is secure."
  },
  {
    "question": "Should the private part of an SSH key pair be shared or copied?",
    "answer": "The private part of the key pair should never be shared or copied on another computer, as is the case with any password."
  },
  {
    "question": "What is a passphrase used for when generating an SSH key pair?",
    "answer": "When generating a key pair, you will be prompted for a passphrase. This is a string that is used to encrypt the private key."
  },
  {
    "question": "What kind of passphrase should be provided for an SSH key?",
    "answer": "You should provide a strong passphrase that is memorable. We recommend 15 characters or more."
  },
  {
    "question": "What protection does a passphrase offer for a private key?",
    "answer": "This passphrase offers protection if the private key file is stolen."
  },
  {
    "question": "Where can users find instructions for generating SSH keys in Windows?",
    "answer": "For the Windows PuTTY or MobaXterm clients, see [[Generating SSH keys in Windows]]."
  },
  {
    "question": "Where can users find instructions for generating SSH keys in a Unix-like environment?",
    "answer": "For a Unix-like environment (Linux, Mac, Windows Subsystem for Linux or Cygwin), see [[Using SSH keys in Linux]]."
  },
  {
    "question": "How do you install an SSH key?",
    "answer": "To install the key, you must make the target/destination system aware of the public part of your key."
  },
  {
    "question": "What is the convenient way to install an SSH key as of March 2021?",
    "answer": "In March 2021, we added a convenient way to do this by using CCDB."
  },
  {
    "question": "What is the URL for installing SSH keys via CCDB?",
    "answer": "The URL is https://ccdb.computecanada.ca/ssh_authorized_keys."
  },
  {
    "question": "How do you view your public SSH key on Linux/MacOS?",
    "answer": "Under Linux/MacOS enter `cat .ssh/id_rsa.pub` on the command line."
  },
  {
    "question": "What should a user do if their public key format is different, such as when generated with PuTTY?",
    "answer": "If the format observed is different (which is the case when the key is generated with PuTTY for instance), you can open PuTTY Key Generator or MobaxTerm SSH Key Generator, go to File --> Load private key and grab the content under Public key for pasting into OpenSSH authorized_keys."
  },
  {
    "question": "What information should be provided when uploading an SSH public key into the CCDB form?",
    "answer": "You can then paste this public portion of your key into the CCDB form. You should also provide a description for this key so you can keep track of them."
  },
  {
    "question": "Once a public key is loaded into CCDB, which systems can it be used to log into?",
    "answer": "Once your public key is loaded into CCDB this way, you can use it to log in to any of our clusters."
  },
  {
    "question": "Can OpenStack cloud systems access keys entered in CCDB?",
    "answer": "However, our OpenStack cloud systems cannot access the keys entered in the CCDB."
  },
  {
    "question": "How long does it take for changes to public keys to propagate to clusters via CCDB?",
    "answer": "Changes to public keys will often propagate to clusters in a few minutes; in some cases however, it can take up to approximately 30 minutes."
  },
  {
    "question": "What is an alternative method to CCDB for installing an SSH key on a specific system?",
    "answer": "However, there may be circumstances in which you want to install a key only on a specific system. You can do this by adding the key to a file in your /home directory on that system, specifically `~/.ssh/authorized_keys`."
  },
  {
    "question": "What command is convenient for installing an SSH key to a specific system using the `authorized_keys` method?",
    "answer": "On our systems (or any other with OpenSSH) the `ssh-copy-id` command is the most convenient way to do this."
  },
  {
    "question": "Why is the `authorized_keys` mechanism considered fragile?",
    "answer": "SSH is quite picky about the permissions on the `authorized_keys` file, as well as your /home directory and the `.ssh` subdirectory."
  },
  {
    "question": "Why is using an SSH key agent recommended?",
    "answer": "Although it's important to secure your private key by encrypting it with the passphrase, it is inconvenient to have to enter your passphrase every time you use the key. Rather than leaving the private key unencrypted, we strongly suggest using an SSH key agent."
  },
  {
    "question": "How does an SSH key agent work to provide convenience?",
    "answer": "You type the passphrase when starting up the agent, after which the agent supplies the private key for new connections."
  },
  {
    "question": "Where should key generation operations be performed?",
    "answer": "Note that this operation should be performed on your own computer, *not* on a shared computer, such as a cluster."
  },
  {
    "question": "How can you specify a comment for an SSH key when generating it using `ssh-keygen`?",
    "answer": "You can specify a comment for the key, which may be helpful if you have multiple keys, by using `ssh-keygen -C 'Alliance systems'`."
  },
  {
    "question": "How can you choose the name of the key file when generating an SSH key?",
    "answer": "You can also choose the name of the key file with `ssh-keygen -f alliance-key`."
  },
  {
    "question": "What command option is needed if a key file is given a custom name during generation?",
    "answer": "If you do this, though, you may have to use the `-i` option to specify the name of the key when logging in, like this: `ssh -i alliance-key user@host`."
  },
  {
    "question": "How can you choose a different SSH key type when generating it?",
    "answer": "You can choose a different key type (rather than the RSA default) by using `ssh-keygen -t ed25519`."
  },
  {
    "question": "How can you strengthen certain SSH key types like RSA?",
    "answer": "You can strengthen certain key types, such as RSA, by setting a longer key length using `ssh-keygen -t rsa-sha2-512 -b 4096`."
  },
  {
    "question": "What do SSH key constraints allow you to do?",
    "answer": "The public key syntax permits you to provide a number of very useful constraints that limit what the key is allowed to do."
  },
  {
    "question": "What is the default behavior of a public key installed without constraints?",
    "answer": "By default, a public key installed without constraints can do anything."
  },
  {
    "question": "How can an SSH public key be constrained to only allow a specific command?",
    "answer": "For instance, this public key `restrict,command=\"squeue --me\" ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGhczaUoV6SzR2VEf9Rp4/P9xHVU8S72CKHrwKU+Yntx` can only perform one simple operation (showing whether you have any jobs in Slurm)."
  },
  {
    "question": "How can an SSH public key be constrained to only allow SFTP?",
    "answer": "An interesting example is `restrict,command=\"/usr/libexec/openssh/sftp-server\" ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGhczaUoV6SzR2VEf9Rp4/P9xHVU8S72CKHrwKU+Yntx` which allows the key to be used only for SFTP, which is how sshfs works."
  },
  {
    "question": "How can an SSH key be constrained to limit which hosts can connect?",
    "answer": "The key constraint can also limit which hosts can connect using the key, for example: `restrict,from=\"d24-141-114-17.home.cgocable.net\" ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGhczaUoV6SzR2VEf9Rp4/P9xHVU8S72CKHrwKU+Yntx`."
  },
  {
    "question": "What happens when the `restrict` keyword is used in an SSH key constraint without `pty`?",
    "answer": "In this case, the `restrict` keyword turns off `pty allocation`, which makes an interactive session behave peculiarly."
  },
  {
    "question": "How can you allow pty allocation for a source-constrained interactive SSH session?",
    "answer": "For a source-constrained interactive session `restrict,from=\"d24-141-114-17.home.cgocable.net\",pty ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGhczaUoV6SzR2VEf9Rp4/P9xHVU8S72CKHrwKU+Yntx` allows pty allocation."
  },
  {
    "question": "Where can more information about SSH key constraints be found?",
    "answer": "There are a large number of these key constraints, which are documented in the `sshd man` page (`man sshd` on a Linux system)."
  },
  {
    "question": "What is a best practice regarding the sharing of SSH keys?",
    "answer": "Keys should be unique to a given user account. They should not be used by multiple people."
  },
  {
    "question": "Where should a private key be stored if a shared computer must be used?",
    "answer": "If you have to use a shared computer, store your private key where only you are allowed access. If such secure storage area is not available, use an external storage such as a USB key."
  },
  {
    "question": "What is the recommended passphrase length for an SSH private key?",
    "answer": "Always encrypt your private key with a passphrase. We recommend 15 characters or more for the passphrase."
  },
  {
    "question": "Should a private SSH key be copied to a remote system?",
    "answer": "Do not copy your private key to a remote system. Your private key should not leave your workstation!"
  },
  {
    "question": "What is a good practice if you have several laptops for SSH access?",
    "answer": "If you have several laptops, you can create dedicated SSH key pairs for each of them."
  },
  {
    "question": "If you name an SSH key, how do you specify it during login?",
    "answer": "If you name a key you must use the `-i` option to specify the key name when logging in, like this: `ssh -i Laptop_RSA4096 username@host`."
  },
  {
    "question": "What tool helps make encrypted SSH keys convenient to use?",
    "answer": "Use `ssh-agent` to make encrypted keys convenient."
  },
  {
    "question": "What is a Key Revocation List (KRL)?",
    "answer": "The Key Revocation List is a registry of SSH keys that are no longer trusted, or are otherwise considered invalid."
  },
  {
    "question": "What happens if an SSH key is on the Key Revocation List?",
    "answer": "No SSH key on the list can be used to access Alliance services."
  },
  {
    "question": "What immediate action should be taken if an SSH key is revoked?",
    "answer": "Replace the revoked key with a new one to ensure that you can connect securely to Alliance services. Remove the revoked key from all services (Alliance or other) to prevent unauthorized access or data breaches."
  },
  {
    "question": "Who should be contacted if you believe your SSH key has been revoked in error?",
    "answer": "If you believe that your SSH key has been listed on the Key Revocation List in error, or if you have concerns or questions related to key revocation and access to Alliance services, contact our [[Technical support]] for assistance."
  }
]