[
  {
    "question": "What is considered an abuse of the file age tracking system?",
    "answer": "Periodically running a recursive `touch` command on files to prevent them from being flagged for expiration is considered an abuse tactic."
  },
  {
    "question": "Can staff detect attempts to circumvent the purging policy?",
    "answer": "Yes, the staff have methods for detecting `touch` commands and similar tactics used to circumvent the purging policy."
  },
  {
    "question": "What happens if a user is caught abusing the purging policy?",
    "answer": "Users caught employing such techniques will be contacted and asked to modify their behavior, specifically to move the 'retouched' data from scratch to a more appropriate location."
  },
  {
    "question": "What commands are typically sufficient for copying data from scratch to a project directory?",
    "answer": "In most cases, `cp` or `rsync` will be sufficient to copy data from scratch to a project directory."
  },
  {
    "question": "Why might `cp` or `rsync` be problematic when copying directories containing symbolic links from scratch?",
    "answer": "Copying symbolic links with `cp` or `rsync` can cause problems because the links will still point to the original location in scratch, even after the copy operation."
  },
  {
    "question": "How can you safely copy a directory with symbolic links from scratch to a project directory?",
    "answer": "To avoid issues with symbolic links, you can use `tar` to create an archive of your files on scratch and then extract that archive in your project directory."
  },
  {
    "question": "What is the command sequence to copy a directory with symbolic links from scratch to project using `tar`?",
    "answer": "The command sequence is: `cd /scratch/.../your_data; mkdir project/.../your_data; tar cf - ./* | (cd /project/.../your_data && tar xf -)`"
  }
]