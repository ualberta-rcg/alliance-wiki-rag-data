[
  {
    "question": "What is Mii?",
    "answer": "Mii is described as a smart search engine for module environments."
  },
  {
    "question": "How does Mii interact with existing module installations?",
    "answer": "Mii works around an existing modules installation, efficiently searching and loading modules on-demand for users."
  },
  {
    "question": "What happens when Mii encounters an unambiguous command?",
    "answer": "Once Mii is loaded, modules for unambiguous commands will be quietly autoloaded."
  },
  {
    "question": "How does Mii handle ambiguous commands?",
    "answer": "For ambiguous commands, Mii will interactively ask the user to select modules to load."
  },
  {
    "question": "What module installation systems does Mii support?",
    "answer": "Mii supports both Lmod and Environment Modules installations."
  },
  {
    "question": "Which shell environments does Mii integrate with?",
    "answer": "Mii offers bash and zsh shell integration."
  },
  {
    "question": "How can users get a list of modules or individual module information using Mii?",
    "answer": "Users can get module listing or individual information via the `mii list` and `mii show` commands."
  },
  {
    "question": "What commands are available in Mii for searching?",
    "answer": "Mii provides `mii exact` for searching for exact commands and `mii search` for finding similar commands."
  },
  {
    "question": "Does Mii support JSON output?",
    "answer": "Yes, Mii has an optional JSON export format."
  },
  {
    "question": "Does an autoloaded module persist in the shell environment after a command runs with Mii?",
    "answer": "No, a module that is autoloaded by Mii does not persist after the command; the shell environment will revert to its state before the module was autoloaded."
  },
  {
    "question": "What command is used to enable or load Mii?",
    "answer": "To enable or load Mii, the command `module load mii` is used."
  },
  {
    "question": "What does Mii do when a command is not found?",
    "answer": "When a command is not found after Mii is loaded, it will start making suggestions, listing similar commands."
  },
  {
    "question": "Can you provide an example of Mii autoloading for an unambiguous command?",
    "answer": "When `python3.9 --version` is executed and is unambiguous, Mii loads `StdEnv/2020 python/3.9.6` before running the command, as indicated by `[mii] loading StdEnv/2020 python/3.9.6 ... Python 3.9.6`."
  },
  {
    "question": "What steps does Mii take when an ambiguous command like 'blastn -version' is entered?",
    "answer": "For an ambiguous command like 'blastn -version', Mii suggests a selection of potential candidate modules based on their relevance and prompts the user to make a selection from the list."
  },
  {
    "question": "What happens after a user selects a module for an ambiguous command in Mii?",
    "answer": "After a user selects a module, Mii loads the chosen module and then executes the command. This process can also trigger other module actions, such as Lmod replacing modules or reloading others due to `MODULEPATH` changes."
  }
]