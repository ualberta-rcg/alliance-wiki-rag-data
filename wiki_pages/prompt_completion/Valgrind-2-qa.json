[
  {
    "question": "When does Valgrind report a memory leak?",
    "answer": "The error message for a memory leak is given at the end of the program execution."
  },
  {
    "question": "What does a Valgrind error message for a memory leak typically look like?",
    "answer": "It will include lines like 'bytes in blocks are definitely lost in loss record' and specify the location of the `malloc` call and the `main` function."
  },
  {
    "question": "What kind of memory issues does Valgrind detect as 'Invalid pointer access/out of bound errors'?",
    "answer": "Valgrind detects these errors if you attempt to read or write to an unallocated pointer or outside of the allocated memory."
  },
  {
    "question": "What does a Valgrind error message for an invalid pointer access or out-of-bound write indicate?",
    "answer": "It will show an 'Invalid write of size' message, the location in the code, and details about the address being accessed relative to an allocated block, such as 'Address X is Y bytes after a block of size Z alloc'd'."
  },
  {
    "question": "What error message does Valgrind produce when an uninitialized variable is used?",
    "answer": "If you use an uninitialized variable, Valgrind will produce an error message such as 'Conditional jump or move depends on uninitialised value(s)'."
  }
]