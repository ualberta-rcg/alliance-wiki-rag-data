[
  {
    "question": "What is the primary goal of data synchronization?",
    "answer": "The primary goal of data synchronization is to make the content of two data sources located at different places correspond."
  },
  {
    "question": "Which tool is recommended for data synchronization due to its performance and reliability?",
    "answer": "Globus is recommended as a powerful and reliable tool for data synchronization."
  },
  {
    "question": "How does Globus handle existing files in the destination during a transfer by default?",
    "answer": "During a Globus transfer, data from the source usually overwrites data in the destination, meaning all data from the source is transferred."
  },
  {
    "question": "What parameter in Globus 'Transfer Settings' controls how files are selected for transfer?",
    "answer": "The `sync` parameter in Globus 'Transfer Settings' determines how Globus chooses which files to transfer."
  },
  {
    "question": "What does the 'checksum is different' option do in Globus transfer settings?",
    "answer": "The 'checksum is different' option examines checksums to detect changes or content errors in files of the same size, offering the highest precision but slowing down the transfer considerably."
  },
  {
    "question": "When is the 'file doesn't exist on destination' option useful in Globus?",
    "answer": "This option is useful if your files are created incrementally, as it transfers only files created since the last synchronization."
  },
  {
    "question": "How does the 'file size is different' option work in Globus?",
    "answer": "The 'file size is different' option transfers files whose size has been modified, assuming that the content has also been modified, and allows for a quick test."
  },
  {
    "question": "What should be done when using the 'modification time is newer' option in Globus?",
    "answer": "When using the 'modification time is newer' option, which transfers files only if the source's timestamp is newer, you should check 'preserve source file modification times'."
  },
  {
    "question": "What is the rsync utility used for?",
    "answer": "The rsync utility is used to check for similarities between two sets of data."
  },
  {
    "question": "Under what conditions might rsync transfers take a considerable amount of time?",
    "answer": "Rsync transfers might take a considerable amount of time when there is a large number of files, if the sites are far apart, or if they are on different networks."
  },
  {
    "question": "What criteria does rsync use by default to determine if a file needs to be transferred?",
    "answer": "Rsync compares modification dates and file sizes, transferring files only if one of these parameters does not match."
  },
  {
    "question": "How can rsync be instructed to analyze checksums for file comparison?",
    "answer": "If modification dates are likely to differ, the `-c` option can be used to analyze checksums at both the source and destination, transferring only files whose values do not match."
  },
  {
    "question": "Which rsync options should NOT be used when transferring data to `/project` file systems and why?",
    "answer": "When transferring data to `/project` file systems, the `-p` (preserve permissions) and `-g` (preserve group) flags should not be used because `/project` quotas are calculated by group ownership, and preserving ownership could lead to 'Disk quota exceeded' errors."
  },
  {
    "question": "How should the `-a` option be modified for rsync transfers to `/project` file systems?",
    "answer": "Since `-a` (archive mode) includes `-p` and `-g` by default, you must add the `--no-g --no-p` options when transferring to `/project` file systems."
  },
  {
    "question": "What does the `-z` option do in an rsync command?",
    "answer": "The `-z` option in rsync compresses files (except those with suffixes in the `--skip-compress` list) but requires additional CPU resources."
  },
  {
    "question": "What is the purpose of the `-h` option in an rsync command?",
    "answer": "The `-h` option in rsync is used to simplify the representation of file sizes, making them human-readable."
  },
  {
    "question": "Which rsync option helps restart interrupted transfers of very large files?",
    "answer": "The `--partial` option should be added to rsync commands for very large files to ensure that interrupted transfers can be restarted."
  },
  {
    "question": "How can you display the progression of each file transfer using rsync?",
    "answer": "You can display the progression of each file transfer by adding the `--progress` option to your rsync command."
  },
  {
    "question": "How can rsync display the overall transfer progress for multiple small files?",
    "answer": "For transferring multiple small files, it is preferable to display the overall transfer progress using `--info=progress2`."
  },
  {
    "question": "Provide an rsync command example for transferring a local directory to a remote `/project` system, ensuring compatibility with `/project` quotas.",
    "answer": "An example command is: `rsync -avzh --no-g --no-p LOCALNAME someuser@graham.alliancecan.ca:projects/def-professor/someuser/somedir/`"
  },
  {
    "question": "How would you use rsync to transfer a remote directory from a `/project` system to a local directory?",
    "answer": "An example command is: `rsync -avzh --no-g --no-p someuser@graham.alliancecan.ca:REMOTENAME ~/projects/def-professor/someuser/somedir/`"
  },
  {
    "question": "How does rsync behave differently from `cp` when copying a local directory to a new destination name that does not yet exist?",
    "answer": "Unlike `rsync`, if `LOCALNAME` is a directory, the `cp` command will rename it to `somedir` if `somedir` does not already exist. Rsync, however, will copy the content of `LOCALNAME` *into* `somedir`."
  }
]