[
  {
    "question": "What commands are used to install the RStudio Launcher extension for Jupyter Notebook?",
    "answer": "To install RStudio Launcher, execute the following commands: `pip install nbserverproxy`, `pip install https://github.com/jupyterhub/nbrsessionproxy/archive/v0.8.0.zip`, `jupyter serverextension enable --py nbserverproxy --sys-prefix`, `jupyter nbextension install --py nbrsessionproxy --sys-prefix`, `jupyter nbextension enable --py nbrsessionproxy --sys-prefix`, and `jupyter serverextension enable --py nbrsessionproxy --sys-prefix`."
  },
  {
    "question": "How do you activate the Jupyter Notebook environment after installation?",
    "answer": "First, load the Python module associated with your environment (e.g., `module load python/3.7`), then activate the Python virtual environment in which you installed Jupyter Notebook (e.g., `source $HOME/jupyter_py3/bin/activate`)."
  },
  {
    "question": "Which Python module should be loaded to activate the Jupyter Notebook environment?",
    "answer": "You should load the specific Python module associated with your environment, such as `python/3.7`."
  },
  {
    "question": "What command activates the Python virtual environment for Jupyter Notebook?",
    "answer": "The command to activate the virtual environment is `source $HOME/jupyter_py3/bin/activate`."
  },
  {
    "question": "How do you load the RStudio Server module if you want to use RStudio Launcher?",
    "answer": "To use RStudio Launcher, load the RStudio Server module by running `module load rstudio-server`."
  },
  {
    "question": "How do you start Jupyter Notebook once the environment is activated?",
    "answer": "You start Jupyter Notebook by submitting an interactive job using `salloc` and `srun`, adjusting parameters like time, tasks, CPUs, memory, and account based on your needs, for example: `salloc --time=1:0:0 --ntasks=1 --cpus-per-task=2 --mem-per-cpu=1024M --account=def-yourpi srun $VIRTUAL_ENV/bin/notebook.sh`."
  },
  {
    "question": "What information does Jupyter Notebook provide upon successful startup?",
    "answer": "Upon startup, Jupyter Notebook indicates the local directory it's serving notebooks from, the number of active kernels, the URL where it's running (e.g., `http://cdr544.int.cedar.computecanada.ca:8888/?token=...`), and instructions to stop the server."
  },
  {
    "question": "How can a user stop the Jupyter Notebook server before its allocated walltime expires?",
    "answer": "To stop the Jupyter Notebook server, press `Ctrl-C` twice in the terminal window where the interactive job was launched."
  },
  {
    "question": "Why is an SSH tunnel required to connect to Jupyter Notebook running on a compute node?",
    "answer": "An SSH tunnel is required because compute nodes are not directly accessible from the Internet."
  },
  {
    "question": "What tool is recommended for creating an SSH tunnel from Linux or MacOS X to connect to Jupyter Notebook?",
    "answer": "The `sshuttle` Python package is recommended for creating an SSH tunnel from Linux or MacOS X."
  },
  {
    "question": "How do you create an SSH tunnel from Linux or MacOS X using sshuttle?",
    "answer": "Open a new terminal and run `sshuttle --dns -Nr <username>@<cluster>.alliancecan.ca`, substituting `<username>` with your username and `<cluster>` with the cluster name."
  },
  {
    "question": "What is the final step to access Jupyter Notebook from a web browser after setting up an SSH tunnel on Linux or MacOS X?",
    "answer": "After setting up the SSH tunnel, copy and paste the URL provided by Jupyter Notebook (e.g., `http://cdr544.int.cedar.computecanada.ca:8888/?token=7ed7059fad64446f837567e3`) into your web browser."
  },
  {
    "question": "What software can be used to create an SSH tunnel from Windows to connect to Jupyter Notebook?",
    "answer": "MobaXTerm can be used to create an SSH tunnel from Windows."
  },
  {
    "question": "What are the steps to connect to Jupyter Notebook from Windows using MobaXTerm?",
    "answer": "First, open a Terminal tab (Session 1) in MobaXTerm, connect to a cluster, and start Jupyter Notebook to obtain its URL. Second, open a second Terminal tab (Session 2), and run `ssh -L 8888:<hostname:port> <username>@<cluster>.alliancecan.ca`. Finally, open your browser and navigate to `http://localhost:8888/?token=<token>`, replacing `<token>` with the value from Session 1."
  },
  {
    "question": "How do you extract the hostname:port and token for connecting to Jupyter Notebook from Windows via MobaXTerm?",
    "answer": "The `hostname:port` and `token` are found in the URL displayed when Jupyter Notebook starts in Session 1, for example, from `http://cdr544.int.cedar.computecanada.ca:8888/?token=7ed7059fad64446f837567e3`, the `hostname:port` is `cdr544.int.cedar.computecanada.ca:8888` and the `token` is `7ed7059fad64446f837567e3`."
  },
  {
    "question": "How do you shut down an SSH tunnel created using MobaXTerm?",
    "answer": "To shut down an SSH tunnel created with MobaXTerm, press `Ctrl-D` in Session 2."
  }
]