[
  {
    "question": "How is the UGR quantity calculated for a GPU allocation?",
    "answer": "If you request 13 GPU-years of an A100-40gb model on the narval-gpu resource, the UGR quantity would be 13 * 4.0 = 52."
  },
  {
    "question": "How does the resource allocation committee assign UGRs?",
    "answer": "The resource allocation committee assigns UGRs based on the proposal's score and maintains the same UGR quantity even if the allocation is moved to another cluster."
  },
  {
    "question": "What is the governing principle for determining the priority of compute tasks?",
    "answer": "The priority of compute tasks is determined based on the resources a task makes unavailable to other users, rather than the resources actually used."
  },
  {
    "question": "How do unused cores, requested but not consumed, influence job prioritization?",
    "answer": "If a task requests multiple cores but only consumes a portion, the *requested* number of cores influences the prioritization of subsequent tasks because the task blocks the unused cores during its execution."
  },
  {
    "question": "How can excessive memory demands lead to unused cores impacting prioritization?",
    "answer": "If a task demands more memory than the default per core (e.g., 8GB for one core on a system with 4GB/core), it will block additional cores (e.g., 2 cores), making the extra core unavailable to other groups and affecting prioritization."
  },
  {
    "question": "What is an '\u00e9quivalent-c\u0153ur' or 'bundle' in the context of resource allocation?",
    "answer": "An '\u00e9quivalent-c\u0153ur' (core-equivalent), or 'bundle', consists of a single core and a specific quantity of memory considered associated with that core."
  },
  {
    "question": "What is the common memory-to-core ratio on the clusters?",
    "answer": "Most clusters currently offer cores with 4GB of memory, which is the most common memory:core ratio for nodes."
  },
  {
    "question": "Why is it complicated to track resource usage when tasks use portions of core-equivalents?",
    "answer": "Tracking becomes complicated because using portions of core-equivalents can increase the score used to calculate a research group's fair share, although the method aims to resolve equity issues."
  },
  {
    "question": "How does the scheduler evaluate a task requesting 2 cores with 2GB of memory each (total 4GB memory) if a bundle is 1 core/4GB?",
    "answer": "The scheduler evaluates the demand as 2 core-equivalents because the requested cores (2) exceed the memory ratio for one bundle, even though the total memory matches one bundle."
  },
  {
    "question": "How does the scheduler evaluate a task requesting 2 cores with 5GB of memory each (total 10GB memory) if a bundle is 1 core/4GB?",
    "answer": "The scheduler evaluates the demand as 2.5 core-equivalents because the requested memory (10GB) exceeds the ratio of 1 core/4GB, requiring 2.5 bundles (10GB / 4GB per bundle)."
  }
]