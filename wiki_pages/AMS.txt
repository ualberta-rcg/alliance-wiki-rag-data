<languages />

<translate>
<!--T:2-->
[[Category:Software]][[Category:ComputationalChemistry]]
==Introduction==
AMS (Amsterdam Modeling Suite), originally named [[ADF]] (Amsterdam Density Functional), is the [https://www.scm.com/ SCM Software for Chemistry and Materials]. AMS offers powerful computational chemistry tools for many research areas such as homogeneous and heterogeneous catalysis, inorganic chemistry, heavy element chemistry, various types of spectroscopy, and biochemistry.

<!--T:4-->
The full SCM module products are available:
*ADF
*ADF-GUI
*BAND
*BAND-GUI
*DFTB
*ReaxFF
*COSMO-RS
*QE-GUI
*NBO6

<!--T:6-->
==Running AMS on Nibi==
The <code>ams</code> module is installed on [[Nibi]]. The license is an Academic Computing Center license owned by SHARCNET. You may not use the Software for consulting services nor for purposes that have a commercial nature. To check what versions are available, use the <code>module spider</code> command as follows:

<!--T:8-->
 [name@server $] module spider ams

<!--T:10-->
For module commands, please see [[Utiliser des modules/en|Using modules]].

===Job submission=== <!--T:12-->

<!--T:14-->
The clusters use the Slurm scheduler; for details about submitting jobs, see [[Running jobs]].

<!--T:16-->
====Example scripts for an AMS job ====
This H2O_adf.sh example script is to request 32 CPUs on one node.  Please use a reasonable number of CPUs instead of simply running a full-node job on Nibi, unless you have demonstrated that your job can scale efficiently to 192 CPUs.
</translate>
{{File
  |name=H2O_adf.sh
  |lang="bash"
  |contents=
#!/bin/bash
#SBATCH --account=def-pi
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32          # 32 cpus on 1 node, MPI job
#SBATCH --mem-per-cpu=3G              # memory per cpu
#SBATCH --time=00-01:00               # time (DD-HH:MM)
#SBATCH --output=H2O_adf-%j.log       # output .log file

module unload openmpi
module load ams/2025.102
export SCM_TMPDIR=$SLURM_TMPDIR      # use the local disk
bash H2O_adf.run                    # run the input script
}}
<translate>

<!--T:18-->
This is the input file used in the script:
</translate>
{{File
  |name=H2O_adf.run
  |lang="text"
  |contents=#!/bin/sh
# This is a shell script for AMS
# You should use '$AMSBIN/ams' instead of '$ADFBIN/adf'

AMS_JOBNAME=H2O_adf $AMSBIN/ams <<eor
   # Input options for the AMS driver:
   System
      Atoms
         O             0.000000     0.000000     0.000000
         H             0.000000    -0.689440    -0.578509
         H             0.000000     0.689440    -0.578509
      End
   End
   Task GeometryOptimization
   GeometryOptimization
      Convergence gradients=1e-4
   End

   # The input options for ADF, which are described in this manual,
   # should be specified in the 'Engine ADF' block:

   Engine ADF
      Basis
         Type TZP
      End
      XC
         GGA PBE
      End
   EndEngine
eor
}}
<translate>

====Example scripts for a band job==== <!--T:20-->

</translate>
{{File
  |name=SnO_EFG_band.run
  |lang="bash"
  |contents=#!/bin/sh
# The calculation of the electric field gradient is invoked by the EFG key block
# Since Sn is quite an heavy atom we use the scalar relativistic option.

$AMSBIN/ams <<eor

Task SinglePoint
System
   FractionalCoords True

   Lattice
      3.8029  0.0  0.0
      0.0  3.8029  0.0
      0.0  0.0  4.8382
   End

   Atoms
      O   0.0  0.0  0.0
      O   0.5  0.5  0.0
      Sn  0.0  0.5  0.2369
      Sn  0.5  0.0 -0.2369
   End
End

Engine Band
   Title SnO EFG
   NumericalQuality Basic      ! Only for speed
   Tails bas=1e-8              ! Only for reproducibility with nr. of cores
   ! useful for Moessbauer spectroscopy: density and coulomb pot. at nuclei
   PropertiesAtNuclei
   End

   EFG
      Enabled True
   End

   Basis
      Type DZ
      Core none
   End
EndEngine
eor
}}
<translate>

<!--T:26-->
===Notes===
# The input for AMS is different from ADF, the previous ADF input file will not run for the new AMS. Some examples can be found in /opt/software/ams/2025.102/examples/
# Except the output .log file, other files are all saved in a subdirectory AMS_JOBNAME.results. If AMS_JOBNAME is not defined in the input .run file, the default name is ams.results
# The restart file name is ams.rkf instead of the TAPE13 in previous ADF versions
For more usage information, please check the manuals in [https://www.scm.com/support/ SCM Support]

<!--T:41-->
==Running AMS-GUI==
===Nibi===

<!--T:42-->
AMS can be run interactively in graphical mode on a Nibi compute node (8hr time limit) via OnDemand with these steps:

<!--T:43-->
# Log in to [https://ondemand.sharcnet.ca ondemand.sharcnet.ca]
# Select ''Nibi Desktop'' from ''Compute'' on the top
# Select your options (select 1 core for visualization purpose, don't select ''Enable VirtualGL'') and press ''Launch''
# Select ''Launch Nibi Desktop'' once your job starts
# Right click on the desktop and pick ''Open it Terminal''
# Pick ''MATE Terminal'' from the ''System Tools'' menu under the ''Applications'' menu
# <code>module unload openmpi</code>
# <code>module load ams</code>
# <code>amsinput & </code>(to make AMS input)
# <code>amsview & </code>(for AMS result visualization)

<!--T:44-->
If you need to select ''Enable VirtualGL'' for some other program that you are using, you will have to disable it for just AMS by starting it with <code>LD_PRELOAD= amsinput</code>.

<!--T:45-->
OnDemand Nibi Desktop is intended for AMS-GUI applications, such as making input files and visualizing results. Please do not use it to run regular jobs or long interactive jobs. Select a single core and reasonable memory and runtime.

</translate>